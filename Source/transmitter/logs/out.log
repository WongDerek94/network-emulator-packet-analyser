[INFO][2020-12-3 9:13:2] Host found: 127.0.0.1
[INFO][2020-12-3 9:13:2] The network emulator's port is: 7002
[INFO][2020-12-3 9:13:2] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 9:13:2] Number of lines in the file are: 150
[INFO][2020-12-3 9:13:2] Current window size: 1
[INFO][2020-12-3 9:13:2] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 9:13:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 9:13:4] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 9:13:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:13:4] Updating timeout interval: 2749
[INFO][2020-12-3 9:13:7] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 9:13:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:13:7] Updating timeout interval: 3964
[INFO][2020-12-3 9:13:11] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 9:13:11] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:13:11] Updating timeout interval: 5000
[INFO][2020-12-3 9:17:16] Host found: 127.0.0.1
[INFO][2020-12-3 9:17:16] The network emulator's port is: 7002
[INFO][2020-12-3 9:17:16] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 9:17:16] Number of lines in the file are: 150
[INFO][2020-12-3 9:17:16] Current window size: 1
[INFO][2020-12-3 9:17:16] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 9:17:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 9:17:18] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 9:17:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:17:18] Updating timeout interval: 2749
[INFO][2020-12-3 9:17:20] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 9:17:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:17:20] Updating timeout interval: 3964
[INFO][2020-12-3 9:17:24] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 9:17:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:17:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:17:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:17:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:17:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:5] Host found: 127.0.0.1
[INFO][2020-12-3 9:21:5] The network emulator's port is: 7002
[INFO][2020-12-3 9:21:5] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 9:21:5] Number of lines in the file are: 150
[INFO][2020-12-3 9:21:5] Current window size: 1
[INFO][2020-12-3 9:21:5] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 9:21:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 9:21:7] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 9:21:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:7] Updating timeout interval: 2749
[INFO][2020-12-3 9:21:10] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 9:21:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:10] Updating timeout interval: 3964
[INFO][2020-12-3 9:21:13] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 9:21:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:13] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:18] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:23] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:28] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:33] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:38] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:43] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:48] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:53] Updating timeout interval: 5000
[INFO][2020-12-3 9:21:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:21:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:21:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:22:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:22:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:22:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:23:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:23:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:23:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:24:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:24:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:24:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:25:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:25:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:25:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:26:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:26:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:26:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:27:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:27:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:27:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:28:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:28:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:28:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:49] RTT (5001) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:29:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:29:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:29:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:30:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:30:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:30:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:31:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:31:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:31:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:32:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:32:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:33:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:33:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:33:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:34:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:34:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:34:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:35:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:35:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:35:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:36:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:36:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:36:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:37:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:37:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:37:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:38:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:38:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:38:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:39:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:39:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:39:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:40:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:40:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:40:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:41:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:41:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:41:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:42:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:42:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:42:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:43:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:43:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:43:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:44:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:44:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:44:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:45:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:45:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:45:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:46:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:46:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:46:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:47:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:47:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:47:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:48:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:48:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:48:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:49:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:49:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:49:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:50:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:50:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:50:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:51:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:51:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:51:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:52:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:52:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:52:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:4] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:9] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:14] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:19] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:24] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:29] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:34] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:39] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:44] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:49] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:54] Updating timeout interval: 5000
[INFO][2020-12-3 9:53:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:53:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:53:59] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:54:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:54:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:54:55] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:0] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:55:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:55:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:55:55] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:0] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:56:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:56:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:56:55] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:0] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:57:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:57:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:57:55] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:0] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:58:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:58:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:58:55] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:0] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:5] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:10] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:15] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:20] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:25] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:30] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:35] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:40] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:45] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:50] Updating timeout interval: 5000
[INFO][2020-12-3 9:59:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 9:59:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 9:59:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:0:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:0:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:0:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:1:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:1:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:1:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:2:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:2:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:2:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:3:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:3:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:3:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:4:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:4:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:4:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:5:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:5:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:5:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:6:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:6:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:6:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:7:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:7:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:7:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:8:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:8:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:8:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:9:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:9:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:9:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:10:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:10:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:10:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:11:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:11:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:11:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:12:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:12:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:12:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:13:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:13:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:13:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:14:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:14:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:14:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:15:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:15:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:15:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:16:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:16:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:16:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:17:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:17:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:17:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:18:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:18:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:18:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:19:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:19:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:19:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:20:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:20:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:20:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:21:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:21:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:21:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:22:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:22:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:22:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:23:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:23:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:23:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:24:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:24:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:24:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:0] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:5] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:10] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:15] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:20] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:25] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:30] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:30] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:35] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:35] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:40] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:40] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:45] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:50] Updating timeout interval: 5000
[INFO][2020-12-3 10:25:55] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:25:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:25:55] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:1] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:1] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:6] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:11] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:11] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:11] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:16] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:16] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:21] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:21] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:26] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:26] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:26] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:31] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:31] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:31] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:36] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:36] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:41] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:41] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:41] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:46] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:46] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:51] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:51] Updating timeout interval: 5000
[INFO][2020-12-3 10:26:56] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:26:56] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:26:56] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:1] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:1] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:6] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:11] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:11] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:11] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:16] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:16] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:21] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:21] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:26] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:26] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:26] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:31] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:31] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:31] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:36] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:36] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:41] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:41] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:41] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:46] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:46] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:51] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:51] Updating timeout interval: 5000
[INFO][2020-12-3 10:27:56] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:27:56] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:27:56] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:1] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:1] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:6] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:11] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:11] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:11] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:34] Host found: 127.0.0.1
[INFO][2020-12-3 10:28:34] The network emulator's port is: 7002
[INFO][2020-12-3 10:28:34] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 10:28:34] Number of lines in the file are: 150
[INFO][2020-12-3 10:28:34] Current window size: 1
[INFO][2020-12-3 10:28:34] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 10:28:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 10:28:36] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 10:28:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:36] Updating timeout interval: 2749
[INFO][2020-12-3 10:28:38] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 10:28:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:38] Updating timeout interval: 3964
[INFO][2020-12-3 10:28:42] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 10:28:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:42] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:47] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:47] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:47] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:52] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:52] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:52] Updating timeout interval: 5000
[INFO][2020-12-3 10:28:57] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:28:57] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:28:57] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:2] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:2] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:2] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:7] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:7] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:12] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:12] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:17] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:17] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:17] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:22] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:22] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:22] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:27] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:27] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:27] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:32] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:32] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:32] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:37] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:37] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:37] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:42] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:29:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:42] Updating timeout interval: 5000
[INFO][2020-12-3 10:29:54] Host found: 127.0.0.1
[INFO][2020-12-3 10:29:54] The network emulator's port is: 7002
[INFO][2020-12-3 10:29:54] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 10:29:54] Number of lines in the file are: 150
[INFO][2020-12-3 10:29:54] Current window size: 1
[INFO][2020-12-3 10:29:54] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 10:29:54] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 10:29:56] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 10:29:56] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:56] Updating timeout interval: 2749
[INFO][2020-12-3 10:29:59] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 10:29:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:29:59] Updating timeout interval: 3964
[INFO][2020-12-3 10:30:3] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 10:30:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:30:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:30:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:30:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:31:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:31:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:31:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:32:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:32:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:32:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:33:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:33:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:33:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:34:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:34:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:34:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:35:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:35:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:35:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:36:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:36:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:36:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:37:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:37:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:37:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:38:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:38:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:38:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:39:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:39:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:39:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:40:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:40:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:40:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:41:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:41:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:41:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:42:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:42:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:42:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:43:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:43:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:43:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:44:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:44:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:44:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:45:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:45:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:45:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:46:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:46:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:46:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:47:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:47:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:47:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:48:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:48:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:48:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:43] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:48] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:48] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:53] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:53] Updating timeout interval: 5000
[INFO][2020-12-3 10:49:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:49:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:49:58] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:3] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:3] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:8] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:13] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:18] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:23] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:23] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:28] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:28] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:33] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:33] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:38] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:50:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:50:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:50:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:51:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:51:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:51:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:52:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:52:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:52:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:53:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:53:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:53:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:54:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:54:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:54:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:54:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:54:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:54:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:54:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:54:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:54:50] Host found: 127.0.0.1
[INFO][2020-12-3 10:54:50] The network emulator's port is: 7002
[INFO][2020-12-3 10:54:50] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 10:54:50] Number of lines in the file are: 150
[INFO][2020-12-3 10:54:50] Current window size: 1
[INFO][2020-12-3 10:54:50] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 10:54:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 10:54:52] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 10:54:52] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:52] Updating timeout interval: 2749
[INFO][2020-12-3 10:54:55] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 10:54:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:55] Updating timeout interval: 3964
[INFO][2020-12-3 10:54:59] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 10:54:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:54:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:55:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:55:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:55:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:56:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:56:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:56:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:57:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:57:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:57:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:58:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:58:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:58:59] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:4] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:9] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:14] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:19] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:24] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:29] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:34] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:39] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:44] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:49] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:54] Updating timeout interval: 5000
[INFO][2020-12-3 10:59:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 10:59:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 10:59:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:0:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:0:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:0:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:1:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:1:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:1:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:2:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:2:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:2:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:3:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:3:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:3:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:4:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:4:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:4:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:5:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:5:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:5:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:6:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:6:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:6:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:7:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:7:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:7:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:8:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:8:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:8:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:7] Host found: 127.0.0.1
[INFO][2020-12-3 11:9:7] The network emulator's port is: 7002
[INFO][2020-12-3 11:9:7] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:9:7] Number of lines in the file are: 150
[INFO][2020-12-3 11:9:7] Current window size: 1
[INFO][2020-12-3 11:9:7] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:9] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:9:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:9] Updating timeout interval: 2749
[INFO][2020-12-3 11:9:12] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:9:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:12] Updating timeout interval: 3964
[INFO][2020-12-3 11:9:12] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 11:9:12] Updating timeout interval: 4243
[INFO][2020-12-3 11:9:12] All ACKs received

[INFO][2020-12-3 11:9:12] Current window size: 1
[INFO][2020-12-3 11:9:12] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:16] RTT (4243) >= Timeout Interval (=4243), packet loss event detected
[INFO][2020-12-3 11:9:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:16] All ACKs received

[INFO][2020-12-3 11:9:16] Current window size: 1
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:16] All ACKs received

[INFO][2020-12-3 11:9:16] Current window size: 2
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:9:16] All ACKs received

[INFO][2020-12-3 11:9:16] Current window size: 4
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 4728
[INFO][2020-12-3 11:9:16] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 11:9:16] Updating timeout interval: 4215
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 3729
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 3271
[INFO][2020-12-3 11:9:17] All ACKs received

[INFO][2020-12-3 11:9:17] Current window size: 8
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 2842
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 2454
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 2106
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 1798
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 1524
[INFO][2020-12-3 11:9:17] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 11:9:17] Updating timeout interval: 1284
[INFO][2020-12-3 11:9:18] RTT (1284) >= Timeout Interval (=1284), packet loss event detected
[INFO][2020-12-3 11:9:18] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:9:18] Updating timeout interval: 1821
[INFO][2020-12-3 11:9:18] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Updating timeout interval: 1937
[INFO][2020-12-3 11:9:18] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Updating timeout interval: 1926
[INFO][2020-12-3 11:9:18] All ACKs received

[INFO][2020-12-3 11:9:18] Current window size: 9
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:18] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Updating timeout interval: 1663
[INFO][2020-12-3 11:9:18] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 11:9:18] Updating timeout interval: 1423
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 1205
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 1056
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 983
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 962
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 977
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 1015
[INFO][2020-12-3 11:9:19] RTT (1015) >= Timeout Interval (=1015), packet loss event detected
[INFO][2020-12-3 11:9:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:19] Updating timeout interval: 1351
[INFO][2020-12-3 11:9:19] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Updating timeout interval: 1564
[INFO][2020-12-3 11:9:19] All ACKs received

[INFO][2020-12-3 11:9:19] Current window size: 9
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 1404
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 1239
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 1076
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 954
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 901
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 896
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 926
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 976
[INFO][2020-12-3 11:9:20] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Updating timeout interval: 1040
[INFO][2020-12-3 11:9:20] All ACKs received

[INFO][2020-12-3 11:9:20] Current window size: 18
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1161
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1267
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1366
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1459
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1545
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1628
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1703
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1775
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1844
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1909
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 1971
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 2070
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 2153
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 2224
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 2287
[INFO][2020-12-3 11:9:21] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 11:9:21] Updating timeout interval: 2342
[INFO][2020-12-3 11:9:22] RTT (2342) >= Timeout Interval (=2342), packet loss event detected
[INFO][2020-12-3 11:9:22] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:9:22] Updating timeout interval: 3206
[INFO][2020-12-3 11:9:22] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Updating timeout interval: 3639
[INFO][2020-12-3 11:9:22] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Updating timeout interval: 3784
[INFO][2020-12-3 11:9:22] All ACKs received

[INFO][2020-12-3 11:9:22] Current window size: 12
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 3449
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 3111
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 2780
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 2462
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 2165
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1895
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1648
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1471
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1379
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1347
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1355
[INFO][2020-12-3 11:9:23] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Updating timeout interval: 1394
[INFO][2020-12-3 11:9:23] All ACKs received

[INFO][2020-12-3 11:9:23] Current window size: 20
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:23] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:24] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 11:9:24] Updating timeout interval: 1324
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1311
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1334
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1384
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1454
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1534
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1617
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1706
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1793
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 1877
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2004
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2111
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2207
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2291
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2368
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2441
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2511
[INFO][2020-12-3 11:9:25] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 11:9:25] Updating timeout interval: 2573
[INFO][2020-12-3 11:9:26] RTT (2573) >= Timeout Interval (=2573), packet loss event detected
[INFO][2020-12-3 11:9:26] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:9:26] Updating timeout interval: 3413
[INFO][2020-12-3 11:9:26] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Updating timeout interval: 4050
[INFO][2020-12-3 11:9:26] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Updating timeout interval: 4311
[INFO][2020-12-3 11:9:26] All ACKs received

[INFO][2020-12-3 11:9:26] Current window size: 12
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 4023
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 3694
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 3347
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 3004
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 2675
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 2364
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 2081
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 1825
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 1623
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 1514
[INFO][2020-12-3 11:9:27] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 11:9:27] Updating timeout interval: 1474
[INFO][2020-12-3 11:9:28] RTT (1474) >= Timeout Interval (=1474), packet loss event detected
[INFO][2020-12-3 11:9:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:28] Updating timeout interval: 1844
[INFO][2020-12-3 11:9:30] RTT (1844) >= Timeout Interval (=1844), packet loss event detected
[INFO][2020-12-3 11:9:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2444
[INFO][2020-12-3 11:9:30] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2904
[INFO][2020-12-3 11:9:30] All ACKs received

[INFO][2020-12-3 11:9:30] Current window size: 6
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:30] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2928
[INFO][2020-12-3 11:9:30] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2828
[INFO][2020-12-3 11:9:30] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2620
[INFO][2020-12-3 11:9:30] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 11:9:30] Updating timeout interval: 2383
[INFO][2020-12-3 11:9:32] RTT (2383) >= Timeout Interval (=2383), packet loss event detected
[INFO][2020-12-3 11:9:32] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:9:32] Updating timeout interval: 3592
[INFO][2020-12-3 11:9:32] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Updating timeout interval: 3566
[INFO][2020-12-3 11:9:32] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Updating timeout interval: 3403
[INFO][2020-12-3 11:9:32] All ACKs received

[INFO][2020-12-3 11:9:32] Current window size: 7
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:33] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 11:9:33] Updating timeout interval: 3045
[INFO][2020-12-3 11:9:33] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 11:9:33] Updating timeout interval: 2691
[INFO][2020-12-3 11:9:33] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 11:9:33] Updating timeout interval: 2355
[INFO][2020-12-3 11:9:33] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 11:9:33] Updating timeout interval: 2040
[INFO][2020-12-3 11:9:33] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 11:9:33] Updating timeout interval: 1753
[INFO][2020-12-3 11:9:34] RTT (1753) >= Timeout Interval (=1753), packet loss event detected
[INFO][2020-12-3 11:9:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:9:34] Updating timeout interval: 2593
[INFO][2020-12-3 11:9:34] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Updating timeout interval: 2616
[INFO][2020-12-3 11:9:34] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Updating timeout interval: 2519
[INFO][2020-12-3 11:9:34] All ACKs received

[INFO][2020-12-3 11:9:34] Current window size: 8
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 2190
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1882
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1602
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1352
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1238
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1188
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1186
[INFO][2020-12-3 11:9:35] RTT (1186) >= Timeout Interval (=1186), packet loss event detected
[INFO][2020-12-3 11:9:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1609
[INFO][2020-12-3 11:9:35] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 11:9:35] Updating timeout interval: 1829
[INFO][2020-12-3 11:9:35] All ACKs received

[INFO][2020-12-3 11:9:35] Current window size: 8
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1662
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1479
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1292
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1111
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1016
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 986
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1000
[INFO][2020-12-3 11:9:36] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Updating timeout interval: 1046
[INFO][2020-12-3 11:9:36] All ACKs received

[INFO][2020-12-3 11:9:36] Current window size: 16
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1139
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1234
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1332
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1427
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1520
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1611
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1699
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1780
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1858
[INFO][2020-12-3 11:9:37] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 11:9:37] Updating timeout interval: 1933
[INFO][2020-12-3 11:9:38] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 11:9:38] Updating timeout interval: 2005
[INFO][2020-12-3 11:9:38] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 11:9:38] Updating timeout interval: 2073
[INFO][2020-12-3 11:9:38] RTT (2073) >= Timeout Interval (=2073), packet loss event detected
[INFO][2020-12-3 11:9:38] Retransmitting 4 unACKs...
[INFO][2020-12-3 11:9:38] Updating timeout interval: 2856
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 3127
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 3178
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 3087
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 2904
[INFO][2020-12-3 11:9:39] All ACKs received

[INFO][2020-12-3 11:9:39] Current window size: 14
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 2657
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 2389
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 2119
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 1858
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 1609
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 1383
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 1235
[INFO][2020-12-3 11:9:39] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 11:9:39] Updating timeout interval: 1168
[INFO][2020-12-3 11:9:39] All ACKs received

[INFO][2020-12-3 11:9:39] Completed Data Transfer
[INFO][2020-12-3 11:9:39] Sending EOT Packet
[INFO][2020-12-3 11:9:39] Terminating Transmitter...
[INFO][2020-12-3 11:16:18] Host found: 127.0.0.1
[INFO][2020-12-3 11:16:18] The network emulator's port is: 7002
[INFO][2020-12-3 11:16:18] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:16:18] Number of lines in the file are: 150
[INFO][2020-12-3 11:16:18] Current window size: 1
[INFO][2020-12-3 11:16:18] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:16:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:16:20] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:16:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:16:20] Updating timeout interval: 2749
[INFO][2020-12-3 11:16:22] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:16:22] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:16:22] Updating timeout interval: 3964
[INFO][2020-12-3 11:16:26] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 11:16:26] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:16:26] Updating timeout interval: 5000
[INFO][2020-12-3 11:16:31] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:16:31] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:16:31] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:10] Host found: 127.0.0.1
[INFO][2020-12-3 11:17:10] The network emulator's port is: 7002
[INFO][2020-12-3 11:17:10] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:17:10] Number of lines in the file are: 150
[INFO][2020-12-3 11:17:10] Current window size: 1
[INFO][2020-12-3 11:17:10] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:17:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:17:12] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:17:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:12] Updating timeout interval: 2749
[INFO][2020-12-3 11:17:15] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:17:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:15] Updating timeout interval: 3964
[INFO][2020-12-3 11:17:19] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 11:17:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:17:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:17:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:17:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:18:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:18:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:18:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:19:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:19:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:19:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:20:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:20:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:20:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:21:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:21:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:21:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:22:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:22:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:22:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:23:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:23:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:23:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:24:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:24:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:24:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:25:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:25:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:25:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:26:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:26:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:26:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:27:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:27:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:27:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:28:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:28:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:28:50] Host found: 127.0.0.1
[INFO][2020-12-3 11:28:50] The network emulator's port is: 7002
[INFO][2020-12-3 11:28:50] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:28:50] Number of lines in the file are: 150
[INFO][2020-12-3 11:28:50] Current window size: 1
[INFO][2020-12-3 11:28:50] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:28:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:14] Host found: 192.168.1.97
[INFO][2020-12-3 11:29:14] The network emulator's port is: 7002
[INFO][2020-12-3 11:29:14] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:29:14] Number of lines in the file are: 150
[INFO][2020-12-3 11:29:14] Current window size: 1
[INFO][2020-12-3 11:29:16] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:18] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:29:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:21] Updating timeout interval: 2749
[INFO][2020-12-3 11:29:27] Host found: 192.168.1.78
[INFO][2020-12-3 11:29:27] The network emulator's port is: 7002
[INFO][2020-12-3 11:29:27] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:29:27] Number of lines in the file are: 150
[INFO][2020-12-3 11:29:27] Current window size: 1
[INFO][2020-12-3 11:29:27] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:28] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 11:29:28] Updating timeout interval: 2440
[INFO][2020-12-3 11:29:28] All ACKs received

[INFO][2020-12-3 11:29:28] Current window size: 2
[INFO][2020-12-3 11:29:28] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:28] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:28] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:28] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 11:29:28] Updating timeout interval: 2634
[INFO][2020-12-3 11:29:30] RTT (2634) >= Timeout Interval (=2634), packet loss event detected
[INFO][2020-12-3 11:29:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:30] Updating timeout interval: 4017
[INFO][2020-12-3 11:29:30] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Updating timeout interval: 3974
[INFO][2020-12-3 11:29:30] All ACKs received

[INFO][2020-12-3 11:29:30] Current window size: 2
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:30] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Updating timeout interval: 3798
[INFO][2020-12-3 11:29:30] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Updating timeout interval: 3540
[INFO][2020-12-3 11:29:30] All ACKs received

[INFO][2020-12-3 11:29:30] Current window size: 4
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 3208
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 2869
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 2533
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 2211
[INFO][2020-12-3 11:29:31] All ACKs received

[INFO][2020-12-3 11:29:31] Current window size: 8
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 1907
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 1630
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 1380
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 1159
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 1027
[INFO][2020-12-3 11:29:31] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 11:29:31] Updating timeout interval: 963
[INFO][2020-12-3 11:29:32] RTT (963) >= Timeout Interval (=963), packet loss event detected
[INFO][2020-12-3 11:29:32] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:29:32] Updating timeout interval: 1308
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 1455
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 1478
[INFO][2020-12-3 11:29:32] All ACKs received

[INFO][2020-12-3 11:29:32] Current window size: 9
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 1242
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 1060
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 962
[INFO][2020-12-3 11:29:32] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 11:29:32] Updating timeout interval: 925
[INFO][2020-12-3 11:29:33] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Updating timeout interval: 927
[INFO][2020-12-3 11:29:33] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Updating timeout interval: 956
[INFO][2020-12-3 11:29:33] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Updating timeout interval: 1004
[INFO][2020-12-3 11:29:33] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Updating timeout interval: 1067
[INFO][2020-12-3 11:29:33] RTT (1067) >= Timeout Interval (=1067), packet loss event detected
[INFO][2020-12-3 11:29:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:33] Updating timeout interval: 1456
[INFO][2020-12-3 11:29:33] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Updating timeout interval: 1628
[INFO][2020-12-3 11:29:33] All ACKs received

[INFO][2020-12-3 11:29:33] Current window size: 9
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 1441
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 1253
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 1076
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 968
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 924
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 924
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 956
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 1011
[INFO][2020-12-3 11:29:34] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Updating timeout interval: 1076
[INFO][2020-12-3 11:29:34] All ACKs received

[INFO][2020-12-3 11:29:34] Current window size: 18
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1189
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1295
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1391
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1480
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1562
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1641
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1717
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1789
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1858
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1924
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 1986
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 2044
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 2140
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 2224
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 2295
[INFO][2020-12-3 11:29:35] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 11:29:35] Updating timeout interval: 2354
[INFO][2020-12-3 11:29:36] RTT (2354) >= Timeout Interval (=2354), packet loss event detected
[INFO][2020-12-3 11:29:36] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:29:36] Updating timeout interval: 3223
[INFO][2020-12-3 11:29:36] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Updating timeout interval: 3663
[INFO][2020-12-3 11:29:36] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Updating timeout interval: 3807
[INFO][2020-12-3 11:29:36] All ACKs received

[INFO][2020-12-3 11:29:36] Current window size: 12
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 3472
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 3129
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 2794
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 2476
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 2179
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1905
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1658
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1480
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1388
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1356
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1364
[INFO][2020-12-3 11:29:37] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Updating timeout interval: 1403
[INFO][2020-12-3 11:29:37] All ACKs received

[INFO][2020-12-3 11:29:37] Current window size: 20
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:38] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 11:29:38] Updating timeout interval: 1343
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1339
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1367
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1422
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1492
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1573
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1657
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1742
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1830
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1915
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 1997
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2122
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2227
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2321
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2403
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2477
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2548
[INFO][2020-12-3 11:29:39] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 11:29:39] Updating timeout interval: 2615
[INFO][2020-12-3 11:29:40] RTT (2615) >= Timeout Interval (=2615), packet loss event detected
[INFO][2020-12-3 11:29:40] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:29:40] Updating timeout interval: 3470
[INFO][2020-12-3 11:29:40] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Updating timeout interval: 4116
[INFO][2020-12-3 11:29:40] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Updating timeout interval: 4383
[INFO][2020-12-3 11:29:40] All ACKs received

[INFO][2020-12-3 11:29:40] Current window size: 12
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 4089
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 3755
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 3403
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 3055
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 2718
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 2402
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 2114
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 1849
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 1647
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 1538
[INFO][2020-12-3 11:29:41] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 11:29:41] Updating timeout interval: 1494
[INFO][2020-12-3 11:29:42] RTT (1494) >= Timeout Interval (=1494), packet loss event detected
[INFO][2020-12-3 11:29:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:42] Updating timeout interval: 1873
[INFO][2020-12-3 11:29:44] RTT (1873) >= Timeout Interval (=1873), packet loss event detected
[INFO][2020-12-3 11:29:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2488
[INFO][2020-12-3 11:29:44] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2950
[INFO][2020-12-3 11:29:44] All ACKs received

[INFO][2020-12-3 11:29:44] Current window size: 6
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:44] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2969
[INFO][2020-12-3 11:29:44] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2865
[INFO][2020-12-3 11:29:44] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2649
[INFO][2020-12-3 11:29:44] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 11:29:44] Updating timeout interval: 2404
[INFO][2020-12-3 11:29:46] RTT (2404) >= Timeout Interval (=2404), packet loss event detected
[INFO][2020-12-3 11:29:46] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:29:46] Updating timeout interval: 3619
[INFO][2020-12-3 11:29:46] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Updating timeout interval: 3592
[INFO][2020-12-3 11:29:46] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Updating timeout interval: 3433
[INFO][2020-12-3 11:29:46] All ACKs received

[INFO][2020-12-3 11:29:46] Current window size: 7
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:47] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 11:29:47] Updating timeout interval: 3067
[INFO][2020-12-3 11:29:47] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 11:29:47] Updating timeout interval: 2709
[INFO][2020-12-3 11:29:47] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 11:29:47] Updating timeout interval: 2369
[INFO][2020-12-3 11:29:47] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 11:29:47] Updating timeout interval: 2050
[INFO][2020-12-3 11:29:47] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 11:29:47] Updating timeout interval: 1759
[INFO][2020-12-3 11:29:48] RTT (1759) >= Timeout Interval (=1759), packet loss event detected
[INFO][2020-12-3 11:29:48] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:29:48] Updating timeout interval: 2594
[INFO][2020-12-3 11:29:48] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Updating timeout interval: 2624
[INFO][2020-12-3 11:29:48] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Updating timeout interval: 2530
[INFO][2020-12-3 11:29:48] All ACKs received

[INFO][2020-12-3 11:29:48] Current window size: 8
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:48] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 2204
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1899
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1622
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1368
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1250
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1196
[INFO][2020-12-3 11:29:49] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 11:29:49] Updating timeout interval: 1194
[INFO][2020-12-3 11:29:50] RTT (1194) >= Timeout Interval (=1194), packet loss event detected
[INFO][2020-12-3 11:29:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1621
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1841
[INFO][2020-12-3 11:29:50] All ACKs received

[INFO][2020-12-3 11:29:50] Current window size: 8
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1673
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1490
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1302
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1121
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1022
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 992
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1006
[INFO][2020-12-3 11:29:50] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Updating timeout interval: 1052
[INFO][2020-12-3 11:29:50] All ACKs received

[INFO][2020-12-3 11:29:50] Current window size: 16
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1168
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1278
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1382
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1484
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1579
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1671
[INFO][2020-12-3 11:29:51] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 11:29:51] Updating timeout interval: 1757
[INFO][2020-12-3 11:29:52] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 11:29:52] Updating timeout interval: 1840
[INFO][2020-12-3 11:29:52] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 11:29:52] Updating timeout interval: 1919
[INFO][2020-12-3 11:29:52] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 11:29:52] Updating timeout interval: 1995
[INFO][2020-12-3 11:29:52] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 11:29:52] Updating timeout interval: 2064
[INFO][2020-12-3 11:29:52] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 11:29:52] Updating timeout interval: 2133
[INFO][2020-12-3 11:29:53] RTT (2133) >= Timeout Interval (=2133), packet loss event detected
[INFO][2020-12-3 11:29:53] Retransmitting 4 unACKs...
[INFO][2020-12-3 11:29:53] Updating timeout interval: 2944
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 3223
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 3279
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 3189
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 3007
[INFO][2020-12-3 11:29:53] All ACKs received

[INFO][2020-12-3 11:29:53] Current window size: 14
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 2747
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 2470
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 2191
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 1921
[INFO][2020-12-3 11:29:53] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 11:29:53] Updating timeout interval: 1667
[INFO][2020-12-3 11:29:54] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 11:29:54] Updating timeout interval: 1432
[INFO][2020-12-3 11:29:54] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 11:29:54] Updating timeout interval: 1267
[INFO][2020-12-3 11:29:54] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 11:29:54] Updating timeout interval: 1187
[INFO][2020-12-3 11:29:54] All ACKs received

[INFO][2020-12-3 11:29:54] Completed Data Transfer
[INFO][2020-12-3 11:29:54] Sending EOT Packet
[INFO][2020-12-3 11:29:54] Terminating Transmitter...
[INFO][2020-12-3 11:30:52] Host found: 192.168.1.77
[INFO][2020-12-3 11:30:52] The network emulator's port is: 7002
[INFO][2020-12-3 11:30:52] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:30:52] Number of lines in the file are: 150
[INFO][2020-12-3 11:30:52] Current window size: 1
[INFO][2020-12-3 11:30:52] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:30:52] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:30:54] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:30:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:30:54] Updating timeout interval: 2749
[INFO][2020-12-3 11:30:57] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:30:57] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:30:57] Updating timeout interval: 3964
[INFO][2020-12-3 11:31:1] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 11:31:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:1] Updating timeout interval: 5000
[INFO][2020-12-3 11:31:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:31:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:6] Updating timeout interval: 5000
[INFO][2020-12-3 11:31:34] Host found: 192.168.1.78
[INFO][2020-12-3 11:31:34] The network emulator's port is: 7002
[INFO][2020-12-3 11:31:34] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:31:34] Number of lines in the file are: 150
[INFO][2020-12-3 11:31:34] Current window size: 1
[INFO][2020-12-3 11:31:34] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:34] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 11:31:34] Updating timeout interval: 2388
[INFO][2020-12-3 11:31:34] All ACKs received

[INFO][2020-12-3 11:31:34] Current window size: 2
[INFO][2020-12-3 11:31:34] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:34] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:34] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 11:31:34] Updating timeout interval: 2602
[INFO][2020-12-3 11:31:36] RTT (2602) >= Timeout Interval (=2602), packet loss event detected
[INFO][2020-12-3 11:31:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:36] Updating timeout interval: 3956
[INFO][2020-12-3 11:31:36] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 11:31:36] Updating timeout interval: 3871
[INFO][2020-12-3 11:31:36] All ACKs received

[INFO][2020-12-3 11:31:36] Current window size: 2
[INFO][2020-12-3 11:31:36] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:36] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 3734
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 3502
[INFO][2020-12-3 11:31:37] All ACKs received

[INFO][2020-12-3 11:31:37] Current window size: 4
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 3189
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 2865
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 2540
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 2225
[INFO][2020-12-3 11:31:37] All ACKs received

[INFO][2020-12-3 11:31:37] Current window size: 8
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 1928
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 1654
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 1407
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 1185
[INFO][2020-12-3 11:31:37] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 11:31:37] Updating timeout interval: 1040
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 968
[INFO][2020-12-3 11:31:38] RTT (968) >= Timeout Interval (=968), packet loss event detected
[INFO][2020-12-3 11:31:38] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1314
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1496
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1552
[INFO][2020-12-3 11:31:38] All ACKs received

[INFO][2020-12-3 11:31:38] Current window size: 9
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1413
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1267
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 1119
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 979
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 847
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 731
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 670
[INFO][2020-12-3 11:31:38] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 11:31:38] Updating timeout interval: 648
[INFO][2020-12-3 11:31:39] RTT (648) >= Timeout Interval (=648), packet loss event detected
[INFO][2020-12-3 11:31:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:39] Updating timeout interval: 840
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 975
[INFO][2020-12-3 11:31:39] All ACKs received

[INFO][2020-12-3 11:31:39] Current window size: 9
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 909
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 828
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 739
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 649
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 591
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 572
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 575
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 600
[INFO][2020-12-3 11:31:39] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Updating timeout interval: 635
[INFO][2020-12-3 11:31:39] All ACKs received

[INFO][2020-12-3 11:31:39] Current window size: 18
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 721
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 796
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 868
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 929
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 986
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1040
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1095
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1142
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1186
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1226
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1266
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1302
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1362
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1414
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1457
[INFO][2020-12-3 11:31:40] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 11:31:40] Updating timeout interval: 1496
[INFO][2020-12-3 11:31:41] RTT (1496) >= Timeout Interval (=1496), packet loss event detected
[INFO][2020-12-3 11:31:41] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:31:41] Updating timeout interval: 2048
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 2327
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 2421
[INFO][2020-12-3 11:31:41] All ACKs received

[INFO][2020-12-3 11:31:41] Current window size: 12
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 2197
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1972
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1754
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1550
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1360
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1186
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 1033
[INFO][2020-12-3 11:31:41] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 11:31:41] Updating timeout interval: 931
[INFO][2020-12-3 11:31:42] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 11:31:42] Updating timeout interval: 884
[INFO][2020-12-3 11:31:42] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 11:31:42] Updating timeout interval: 872
[INFO][2020-12-3 11:31:42] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 11:31:42] Updating timeout interval: 883
[INFO][2020-12-3 11:31:42] RTT (883) >= Timeout Interval (=883), packet loss event detected
[INFO][2020-12-3 11:31:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:42] Updating timeout interval: 1109
[INFO][2020-12-3 11:31:43] RTT (1109) >= Timeout Interval (=1109), packet loss event detected
[INFO][2020-12-3 11:31:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:43] Updating timeout interval: 1478
[INFO][2020-12-3 11:31:44] RTT (1478) >= Timeout Interval (=1478), packet loss event detected
[INFO][2020-12-3 11:31:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:44] Updating timeout interval: 2078
[INFO][2020-12-3 11:31:46] RTT (2078) >= Timeout Interval (=2078), packet loss event detected
[INFO][2020-12-3 11:31:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:46] Updating timeout interval: 3052
[INFO][2020-12-3 11:31:47] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 11:31:47] Updating timeout interval: 3168
[INFO][2020-12-3 11:31:47] All ACKs received

[INFO][2020-12-3 11:31:47] Current window size: 2
[INFO][2020-12-3 11:31:47] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:47] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:47] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:47] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 11:31:47] Updating timeout interval: 3142
[INFO][2020-12-3 11:31:50] RTT (3142) >= Timeout Interval (=3142), packet loss event detected
[INFO][2020-12-3 11:31:50] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:50] Updating timeout interval: 4942
[INFO][2020-12-3 11:31:55] RTT (4942) >= Timeout Interval (=4942), packet loss event detected
[INFO][2020-12-3 11:31:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:31:55] Updating timeout interval: 5000
[INFO][2020-12-3 11:31:55] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Updating timeout interval: 5000
[INFO][2020-12-3 11:31:55] All ACKs received

[INFO][2020-12-3 11:31:55] Current window size: 1
[INFO][2020-12-3 11:31:55] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:55] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Updating timeout interval: 5000
[INFO][2020-12-3 11:31:55] All ACKs received

[INFO][2020-12-3 11:31:55] Current window size: 2
[INFO][2020-12-3 11:31:55] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:31:55] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 11:31:55] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:0] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:5] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] All ACKs received

[INFO][2020-12-3 11:32:10] Current window size: 1
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] All ACKs received

[INFO][2020-12-3 11:32:10] Current window size: 2
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] All ACKs received

[INFO][2020-12-3 11:32:10] Current window size: 4
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:10] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 11:32:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:15] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:15] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:15] All ACKs received

[INFO][2020-12-3 11:32:15] Current window size: 4
[INFO][2020-12-3 11:32:15] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:15] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:15] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 11:32:15] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:16] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 11:32:16] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:20] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:20] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 11:32:20] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:20] All ACKs received

[INFO][2020-12-3 11:32:20] Current window size: 4
[INFO][2020-12-3 11:32:20] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:20] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:20] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:20] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:21] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 11:32:21] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:21] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 11:32:21] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:21] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 11:32:21] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:25] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:32:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:25] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:26] All ACKs received

[INFO][2020-12-3 11:32:26] Current window size: 4
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 4882
[INFO][2020-12-3 11:32:26] All ACKs received

[INFO][2020-12-3 11:32:26] Current window size: 8
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 4296
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 3749
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 3268
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 2839
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 2459
[INFO][2020-12-3 11:32:26] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 11:32:26] Updating timeout interval: 2125
[INFO][2020-12-3 11:32:28] RTT (2125) >= Timeout Interval (=2125), packet loss event detected
[INFO][2020-12-3 11:32:28] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:32:28] Updating timeout interval: 3335
[INFO][2020-12-3 11:32:28] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 11:32:28] Updating timeout interval: 3148
[INFO][2020-12-3 11:32:31] RTT (3148) >= Timeout Interval (=3148), packet loss event detected
[INFO][2020-12-3 11:32:31] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:31] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:31] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Updating timeout interval: 4675
[INFO][2020-12-3 11:32:31] All ACKs received

[INFO][2020-12-3 11:32:31] Current window size: 5
[INFO][2020-12-3 11:32:31] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:31] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Updating timeout interval: 4222
[INFO][2020-12-3 11:32:31] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Updating timeout interval: 3782
[INFO][2020-12-3 11:32:31] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 11:32:31] Updating timeout interval: 3365
[INFO][2020-12-3 11:32:35] RTT (3365) >= Timeout Interval (=3365), packet loss event detected
[INFO][2020-12-3 11:32:35] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:32:35] Updating timeout interval: 5000
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 4955
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 4482
[INFO][2020-12-3 11:32:35] All ACKs received

[INFO][2020-12-3 11:32:35] Current window size: 6
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 4002
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 3554
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 3136
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 2755
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 2410
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 2100
[INFO][2020-12-3 11:32:35] All ACKs received

[INFO][2020-12-3 11:32:35] Current window size: 12
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 1807
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 1551
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 1332
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 1141
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 973
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 828
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 734
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 682
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 656
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 655
[INFO][2020-12-3 11:32:35] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 11:32:35] Updating timeout interval: 668
[INFO][2020-12-3 11:32:36] RTT (668) >= Timeout Interval (=668), packet loss event detected
[INFO][2020-12-3 11:32:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:36] Updating timeout interval: 851
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 1021
[INFO][2020-12-3 11:32:36] All ACKs received

[INFO][2020-12-3 11:32:36] Current window size: 11
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 967
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 880
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 789
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 702
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 632
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 600
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 594
[INFO][2020-12-3 11:32:36] RTT (594) >= Timeout Interval (=594), packet loss event detected
[INFO][2020-12-3 11:32:36] Retransmitting 4 unACKs...
[INFO][2020-12-3 11:32:36] Updating timeout interval: 753
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 870
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 910
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 900
[INFO][2020-12-3 11:32:36] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Updating timeout interval: 855
[INFO][2020-12-3 11:32:36] All ACKs received

[INFO][2020-12-3 11:32:36] Current window size: 13
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 728
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 651
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 612
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 595
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 596
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 610
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 633
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 661
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 694
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 733
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 777
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 822
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 864
[INFO][2020-12-3 11:32:37] All ACKs received

[INFO][2020-12-3 11:32:37] Current window size: 20
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 965
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 992
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 969
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 916
[INFO][2020-12-3 11:32:37] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 11:32:37] Updating timeout interval: 843
[INFO][2020-12-3 11:32:38] RTT (843) >= Timeout Interval (=843), packet loss event detected
[INFO][2020-12-3 11:32:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:32:38] Updating timeout interval: 1232
[INFO][2020-12-3 11:32:38] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 11:32:38] Updating timeout interval: 1236
[INFO][2020-12-3 11:32:38] All ACKs received

[INFO][2020-12-3 11:32:38] Completed Data Transfer
[INFO][2020-12-3 11:32:38] Sending EOT Packet
[INFO][2020-12-3 11:32:38] Terminating Transmitter...
[INFO][2020-12-3 11:37:56] Host found: 192.168.1.78
[INFO][2020-12-3 11:37:56] The network emulator's port is: 7002
[INFO][2020-12-3 11:37:56] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:37:56] Number of lines in the file are: 150
[INFO][2020-12-3 11:37:56] Current window size: 1
[INFO][2020-12-3 11:37:56] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:37:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:37:58] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:37:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:37:58] Updating timeout interval: 2749
[INFO][2020-12-3 11:38:1] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:38:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:1] Updating timeout interval: 3964
[INFO][2020-12-3 11:38:5] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 11:38:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:5] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:38:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:10] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:38:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:15] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:27] Host found: 192.168.1.78
[INFO][2020-12-3 11:38:27] The network emulator's port is: 7002
[INFO][2020-12-3 11:38:27] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:38:27] Number of lines in the file are: 150
[INFO][2020-12-3 11:38:27] Current window size: 1
[INFO][2020-12-3 11:38:27] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:38:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:38:29] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 11:38:29] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:29] Updating timeout interval: 2749
[INFO][2020-12-3 11:38:32] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 11:38:32] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:32] Updating timeout interval: 3964
[INFO][2020-12-3 11:38:36] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 11:38:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:36] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:41] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:38:41] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:41] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:46] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:38:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:46] Updating timeout interval: 5000
[INFO][2020-12-3 11:38:51] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:38:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:38:51] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:0] Host found: 192.168.1.78
[INFO][2020-12-3 11:39:0] The network emulator's port is: 7002
[INFO][2020-12-3 11:39:0] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 11:39:0] Number of lines in the file are: 150
[INFO][2020-12-3 11:39:0] Current window size: 1
[INFO][2020-12-3 11:39:0] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:39:0] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 11:39:0] Updating timeout interval: 2447
[INFO][2020-12-3 11:39:0] All ACKs received

[INFO][2020-12-3 11:39:0] Current window size: 2
[INFO][2020-12-3 11:39:0] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:0] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:39:0] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 11:39:0] Updating timeout interval: 2637
[INFO][2020-12-3 11:39:3] RTT (2637) >= Timeout Interval (=2637), packet loss event detected
[INFO][2020-12-3 11:39:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 11:39:3] Updating timeout interval: 4024
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 3981
[INFO][2020-12-3 11:39:3] All ACKs received

[INFO][2020-12-3 11:39:3] Current window size: 2
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 3801
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 3539
[INFO][2020-12-3 11:39:3] All ACKs received

[INFO][2020-12-3 11:39:3] Current window size: 4
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 3204
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 2862
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 2527
[INFO][2020-12-3 11:39:3] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Updating timeout interval: 2209
[INFO][2020-12-3 11:39:3] All ACKs received

[INFO][2020-12-3 11:39:3] Current window size: 8
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 11:39:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1902
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1622
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1372
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1152
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1025
[INFO][2020-12-3 11:39:4] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 11:39:4] Updating timeout interval: 966
[INFO][2020-12-3 11:39:4] RTT (966) >= Timeout Interval (=966), packet loss event detected
[INFO][2020-12-3 11:39:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:4] Updating timeout interval: 1307
[INFO][2020-12-3 11:39:5] RTT (1308) >= Timeout Interval (=1307), packet loss event detected
[INFO][2020-12-3 11:39:5] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:5] Updating timeout interval: 1863
[INFO][2020-12-3 11:39:7] RTT (1863) >= Timeout Interval (=1863), packet loss event detected
[INFO][2020-12-3 11:39:7] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:7] Updating timeout interval: 2765
[INFO][2020-12-3 11:39:10] RTT (2765) >= Timeout Interval (=2765), packet loss event detected
[INFO][2020-12-3 11:39:10] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:10] Updating timeout interval: 4229
[INFO][2020-12-3 11:39:14] RTT (4229) >= Timeout Interval (=4229), packet loss event detected
[INFO][2020-12-3 11:39:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:19] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:44] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:49] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:54] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:39:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:39:59] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:39:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:9] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:19] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:44] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:49] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:54] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:40:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:40:59] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:40:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:9] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:19] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:44] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:49] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:54] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:41:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:41:59] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:41:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:9] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:19] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:44] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:49] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:54] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:54] Updating timeout interval: 5000
[INFO][2020-12-3 11:42:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:42:59] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:42:59] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:4] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:4] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:9] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:9] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:9] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:14] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:14] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:19] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:19] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:19] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:24] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:29] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:34] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:39] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:44] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:44] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:49] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:49] Updating timeout interval: 5000
[INFO][2020-12-3 11:43:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:43:55] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:43:55] Updating timeout interval: 5000
[INFO][2020-12-3 11:44:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 11:44:0] Retransmitting 2 unACKs...
[INFO][2020-12-3 11:44:0] Updating timeout interval: 5000
[INFO][2020-12-3 12:51:40] Host found: 192.168.1.78
[INFO][2020-12-3 12:51:40] The network emulator's port is: 7002
[INFO][2020-12-3 12:51:40] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 12:51:40] Number of lines in the file are: 150
[INFO][2020-12-3 12:51:40] Current window size: 1
[INFO][2020-12-3 12:51:40] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:42] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 12:51:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:51:42] Updating timeout interval: 2749
[INFO][2020-12-3 12:51:42] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 12:51:42] Updating timeout interval: 2927
[INFO][2020-12-3 12:51:42] All ACKs received

[INFO][2020-12-3 12:51:42] Current window size: 1
[INFO][2020-12-3 12:51:42] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:42] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:45] RTT (2927) >= Timeout Interval (=2927), packet loss event detected
[INFO][2020-12-3 12:51:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:51:45] Updating timeout interval: 4352
[INFO][2020-12-3 12:51:45] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Updating timeout interval: 4224
[INFO][2020-12-3 12:51:45] All ACKs received

[INFO][2020-12-3 12:51:45] Current window size: 1
[INFO][2020-12-3 12:51:45] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:45] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Updating timeout interval: 4247
[INFO][2020-12-3 12:51:45] All ACKs received

[INFO][2020-12-3 12:51:45] Current window size: 2
[INFO][2020-12-3 12:51:45] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:45] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 12:51:45] Updating timeout interval: 4128
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 3896
[INFO][2020-12-3 12:51:46] All ACKs received

[INFO][2020-12-3 12:51:46] Current window size: 4
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 3542
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 3178
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 2817
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 2475
[INFO][2020-12-3 12:51:46] All ACKs received

[INFO][2020-12-3 12:51:46] Current window size: 8
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 2133
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 1827
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 1552
[INFO][2020-12-3 12:51:46] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 12:51:46] Updating timeout interval: 1311
[INFO][2020-12-3 12:51:47] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Updating timeout interval: 1159
[INFO][2020-12-3 12:51:47] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Updating timeout interval: 1080
[INFO][2020-12-3 12:51:47] RTT (1080) >= Timeout Interval (=1080), packet loss event detected
[INFO][2020-12-3 12:51:47] Retransmitting 2 unACKs...
[INFO][2020-12-3 12:51:47] Updating timeout interval: 1455
[INFO][2020-12-3 12:51:47] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Updating timeout interval: 1634
[INFO][2020-12-3 12:51:47] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Updating timeout interval: 1671
[INFO][2020-12-3 12:51:47] All ACKs received

[INFO][2020-12-3 12:51:47] Current window size: 9
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:47] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1392
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1199
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1095
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1051
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1051
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1082
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1136
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1201
[INFO][2020-12-3 12:51:48] RTT (1201) >= Timeout Interval (=1201), packet loss event detected
[INFO][2020-12-3 12:51:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1633
[INFO][2020-12-3 12:51:48] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Updating timeout interval: 1890
[INFO][2020-12-3 12:51:48] All ACKs received

[INFO][2020-12-3 12:51:48] Current window size: 9
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:48] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1827
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1719
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1590
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1451
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1310
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1169
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 1040
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 918
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 808
[INFO][2020-12-3 12:51:49] All ACKs received

[INFO][2020-12-3 12:51:49] Current window size: 18
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 839
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 871
[INFO][2020-12-3 12:51:49] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 12:51:49] Updating timeout interval: 903
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 932
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 965
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1004
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1039
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1070
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1101
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1132
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1160
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1210
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1252
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1286
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1320
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1350
[INFO][2020-12-3 12:51:50] RTT (1350) >= Timeout Interval (=1350), packet loss event detected
[INFO][2020-12-3 12:51:50] Retransmitting 2 unACKs...
[INFO][2020-12-3 12:51:50] Updating timeout interval: 1806
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 2099
[INFO][2020-12-3 12:51:50] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Updating timeout interval: 2214
[INFO][2020-12-3 12:51:50] All ACKs received

[INFO][2020-12-3 12:51:50] Current window size: 12
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1979
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1758
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1555
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1369
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1199
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 1049
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 942
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 886
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 865
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 866
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 885
[INFO][2020-12-3 12:51:51] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Updating timeout interval: 918
[INFO][2020-12-3 12:51:51] All ACKs received

[INFO][2020-12-3 12:51:51] Current window size: 20
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 974
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1036
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1095
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1151
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1204
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1254
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1304
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1351
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1394
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1434
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1501
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1556
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1603
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1646
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1685
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1724
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1759
[INFO][2020-12-3 12:51:52] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 12:51:52] Updating timeout interval: 1794
[INFO][2020-12-3 12:51:53] RTT (1794) >= Timeout Interval (=1794), packet loss event detected
[INFO][2020-12-3 12:51:53] Retransmitting 2 unACKs...
[INFO][2020-12-3 12:51:53] Updating timeout interval: 2360
[INFO][2020-12-3 12:51:53] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Updating timeout interval: 2833
[INFO][2020-12-3 12:51:53] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Updating timeout interval: 3034
[INFO][2020-12-3 12:51:53] All ACKs received

[INFO][2020-12-3 12:51:53] Current window size: 12
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:51:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:11] Host found: 192.168.1.78
[INFO][2020-12-3 12:52:11] The network emulator's port is: 7002
[INFO][2020-12-3 12:52:11] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 12:52:11] Number of lines in the file are: 150
[INFO][2020-12-3 12:52:11] Current window size: 1
[INFO][2020-12-3 12:52:11] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:13] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 12:52:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:52:13] Updating timeout interval: 2749
[INFO][2020-12-3 12:52:13] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Updating timeout interval: 3119
[INFO][2020-12-3 12:52:13] All ACKs received

[INFO][2020-12-3 12:52:13] Current window size: 1
[INFO][2020-12-3 12:52:13] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:13] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Updating timeout interval: 3299
[INFO][2020-12-3 12:52:13] All ACKs received

[INFO][2020-12-3 12:52:13] Current window size: 2
[INFO][2020-12-3 12:52:13] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:13] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 12:52:13] Updating timeout interval: 3297
[INFO][2020-12-3 12:52:35] Host found: 192.168.1.78
[INFO][2020-12-3 12:52:35] The network emulator's port is: 7002
[INFO][2020-12-3 12:52:35] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 12:52:35] Number of lines in the file are: 150
[INFO][2020-12-3 12:52:35] Current window size: 1
[INFO][2020-12-3 12:52:35] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:35] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 12:52:35] Updating timeout interval: 2447
[INFO][2020-12-3 12:52:35] All ACKs received

[INFO][2020-12-3 12:52:35] Current window size: 2
[INFO][2020-12-3 12:52:35] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:35] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:35] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 12:52:35] Updating timeout interval: 2638
[INFO][2020-12-3 12:52:38] RTT (2638) >= Timeout Interval (=2638), packet loss event detected
[INFO][2020-12-3 12:52:38] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:52:38] Updating timeout interval: 4025
[INFO][2020-12-3 12:52:38] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Updating timeout interval: 3955
[INFO][2020-12-3 12:52:38] All ACKs received

[INFO][2020-12-3 12:52:38] Current window size: 2
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:38] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Updating timeout interval: 3783
[INFO][2020-12-3 12:52:38] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Updating timeout interval: 3529
[INFO][2020-12-3 12:52:38] All ACKs received

[INFO][2020-12-3 12:52:38] Current window size: 4
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:38] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Updating timeout interval: 3171
[INFO][2020-12-3 12:52:38] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 12:52:38] Updating timeout interval: 2817
[INFO][2020-12-3 12:52:41] RTT (2817) >= Timeout Interval (=2817), packet loss event detected
[INFO][2020-12-3 12:52:42] Retransmitting 2 unACKs...
[INFO][2020-12-3 12:52:42] Updating timeout interval: 4464
[INFO][2020-12-3 12:52:47] RTT (4464) >= Timeout Interval (=4464), packet loss event detected
[INFO][2020-12-3 12:52:47] Retransmitting 2 unACKs...
[INFO][2020-12-3 12:52:47] Updating timeout interval: 5000
[INFO][2020-12-3 12:52:55] Host found: 192.168.1.78
[INFO][2020-12-3 12:52:55] The network emulator's port is: 7002
[INFO][2020-12-3 12:52:55] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 12:52:55] Number of lines in the file are: 150
[INFO][2020-12-3 12:52:55] Current window size: 1
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2478
[INFO][2020-12-3 12:52:55] All ACKs received

[INFO][2020-12-3 12:52:55] Current window size: 2
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2712
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2769
[INFO][2020-12-3 12:52:55] All ACKs received

[INFO][2020-12-3 12:52:55] Current window size: 4
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2690
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2546
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2364
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 2163
[INFO][2020-12-3 12:52:55] All ACKs received

[INFO][2020-12-3 12:52:55] Current window size: 8
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 1875
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 1620
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 1397
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 1206
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 1038
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 893
[INFO][2020-12-3 12:52:55] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 12:52:55] Updating timeout interval: 767
[INFO][2020-12-3 12:52:56] RTT (767) >= Timeout Interval (=767), packet loss event detected
[INFO][2020-12-3 12:52:56] Retransmitting 1 unACKs...
[INFO][2020-12-3 12:52:56] Updating timeout interval: 1070
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 1193
[INFO][2020-12-3 12:52:56] All ACKs received

[INFO][2020-12-3 12:52:56] Current window size: 8
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 1080
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 967
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 854
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 748
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 649
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 565
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 523
[INFO][2020-12-3 12:52:56] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Updating timeout interval: 507
[INFO][2020-12-3 12:52:56] All ACKs received

[INFO][2020-12-3 12:52:56] Current window size: 16
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 618
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 705
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 772
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 827
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 874
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 913
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 948
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 983
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1010
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1037
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1064
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1087
[INFO][2020-12-3 12:52:57] RTT (1087) >= Timeout Interval (=1087), packet loss event detected
[INFO][2020-12-3 12:52:57] Retransmitting 4 unACKs...
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1490
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1660
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1709
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1675
[INFO][2020-12-3 12:52:57] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Updating timeout interval: 1589
[INFO][2020-12-3 12:52:57] All ACKs received

[INFO][2020-12-3 12:52:57] Current window size: 14
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 12:52:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 12:52:58] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 12:52:58] Updating timeout interval: 1357
[INFO][2020-12-3 12:52:58] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 12:52:58] Updating timeout interval: 1208
[INFO][2020-12-3 12:52:58] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 12:52:58] Updating timeout interval: 1108
[INFO][2020-12-3 12:52:58] RTT (1108) >= Timeout Interval (=1108), packet loss event detected
[INFO][2020-12-3 12:52:58] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:52:58] Updating timeout interval: 1607
[INFO][2020-12-3 12:53:0] RTT (1607) >= Timeout Interval (=1607), packet loss event detected
[INFO][2020-12-3 12:53:0] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:0] Updating timeout interval: 2418
[INFO][2020-12-3 12:53:2] RTT (2418) >= Timeout Interval (=2418), packet loss event detected
[INFO][2020-12-3 12:53:2] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:2] Updating timeout interval: 3738
[INFO][2020-12-3 12:53:6] RTT (3738) >= Timeout Interval (=3738), packet loss event detected
[INFO][2020-12-3 12:53:6] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:6] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:11] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:11] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:11] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:16] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:16] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:16] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:21] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:21] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:21] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:26] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:26] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:26] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:31] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:31] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:31] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:36] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:36] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:36] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:41] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:41] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:41] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:46] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:46] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:46] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:51] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:51] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:51] Updating timeout interval: 5000
[INFO][2020-12-3 12:53:56] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:53:56] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:53:56] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:1] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:1] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:1] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:6] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:6] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:11] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:11] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:11] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:16] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:16] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:16] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:21] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:21] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:21] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:26] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:26] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:26] Updating timeout interval: 5000
[INFO][2020-12-3 12:54:31] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 12:54:31] Retransmitting 11 unACKs...
[INFO][2020-12-3 12:54:31] Updating timeout interval: 5000
[INFO][2020-12-3 13:1:14] Host found: 192.168.1.78
[INFO][2020-12-3 13:1:14] The network emulator's port is: 7002
[INFO][2020-12-3 13:1:14] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:1:14] Number of lines in the file are: 150
[INFO][2020-12-3 13:1:14] Current window size: 1
[INFO][2020-12-3 13:1:14] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:14] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:1:14] Updating timeout interval: 2457
[INFO][2020-12-3 13:1:14] All ACKs received

[INFO][2020-12-3 13:1:14] Current window size: 2
[INFO][2020-12-3 13:1:14] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:14] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:14] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:1:14] Updating timeout interval: 2698
[INFO][2020-12-3 13:1:17] RTT (2698) >= Timeout Interval (=2698), packet loss event detected
[INFO][2020-12-3 13:1:17] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:17] Updating timeout interval: 4138
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 4091
[INFO][2020-12-3 13:1:17] All ACKs received

[INFO][2020-12-3 13:1:17] Current window size: 2
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 3932
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 3696
[INFO][2020-12-3 13:1:17] All ACKs received

[INFO][2020-12-3 13:1:17] Current window size: 4
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 3358
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 3023
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 2701
[INFO][2020-12-3 13:1:17] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Updating timeout interval: 2399
[INFO][2020-12-3 13:1:17] All ACKs received

[INFO][2020-12-3 13:1:17] Current window size: 8
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 2107
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1824
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1584
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1369
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1175
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1005
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 858
[INFO][2020-12-3 13:1:18] RTT (858) >= Timeout Interval (=858), packet loss event detected
[INFO][2020-12-3 13:1:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1228
[INFO][2020-12-3 13:1:18] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Updating timeout interval: 1315
[INFO][2020-12-3 13:1:18] All ACKs received

[INFO][2020-12-3 13:1:18] Current window size: 8
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 1188
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 1062
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 939
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 824
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 720
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 622
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 555
[INFO][2020-12-3 13:1:19] RTT (555) >= Timeout Interval (=555), packet loss event detected
[INFO][2020-12-3 13:1:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:19] Updating timeout interval: 732
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 848
[INFO][2020-12-3 13:1:19] All ACKs received

[INFO][2020-12-3 13:1:19] Current window size: 8
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 770
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 688
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 605
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 524
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 486
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 474
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 480
[INFO][2020-12-3 13:1:19] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Updating timeout interval: 500
[INFO][2020-12-3 13:1:19] All ACKs received

[INFO][2020-12-3 13:1:19] Current window size: 16
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 634
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 736
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 818
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 884
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 937
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 982
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1019
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1052
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1081
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1110
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1135
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1160
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1185
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1215
[INFO][2020-12-3 13:1:20] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:1:20] Updating timeout interval: 1245
[INFO][2020-12-3 13:1:21] RTT (1245) >= Timeout Interval (=1245), packet loss event detected
[INFO][2020-12-3 13:1:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1701
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1956
[INFO][2020-12-3 13:1:21] All ACKs received

[INFO][2020-12-3 13:1:21] Current window size: 11
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1798
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1634
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1468
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1311
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1163
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 1027
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 902
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 828
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 793
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 788
[INFO][2020-12-3 13:1:21] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Updating timeout interval: 801
[INFO][2020-12-3 13:1:21] All ACKs received

[INFO][2020-12-3 13:1:21] Current window size: 20
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 892
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 972
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1040
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1101
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1159
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1209
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1260
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1303
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1346
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1386
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1422
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1458
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1513
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1560
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1603
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1641
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1676
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1711
[INFO][2020-12-3 13:1:22] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:1:22] Updating timeout interval: 1742
[INFO][2020-12-3 13:1:23] RTT (1742) >= Timeout Interval (=1742), packet loss event detected
[INFO][2020-12-3 13:1:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:23] Updating timeout interval: 2294
[INFO][2020-12-3 13:1:23] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Updating timeout interval: 2772
[INFO][2020-12-3 13:1:23] All ACKs received

[INFO][2020-12-3 13:1:23] Current window size: 11
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2714
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2583
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2410
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2214
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2010
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1809
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1619
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1442
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1277
[INFO][2020-12-3 13:1:24] RTT (1277) >= Timeout Interval (=1277), packet loss event detected
[INFO][2020-12-3 13:1:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1719
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 1979
[INFO][2020-12-3 13:1:24] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:1:24] Updating timeout interval: 2069
[INFO][2020-12-3 13:1:24] All ACKs received

[INFO][2020-12-3 13:1:25] Current window size: 12
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1766
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1483
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1272
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1145
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1073
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1071
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1087
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1116
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1155
[INFO][2020-12-3 13:1:25] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:1:25] Updating timeout interval: 1199
[INFO][2020-12-3 13:1:26] RTT (1199) >= Timeout Interval (=1199), packet loss event detected
[INFO][2020-12-3 13:1:26] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:1:26] Updating timeout interval: 1578
[INFO][2020-12-3 13:1:26] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:1:26] Updating timeout interval: 1867
[INFO][2020-12-3 13:1:28] RTT (1867) >= Timeout Interval (=1867), packet loss event detected
[INFO][2020-12-3 13:1:28] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:1:28] Updating timeout interval: 2764
[INFO][2020-12-3 13:1:28] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Updating timeout interval: 2845
[INFO][2020-12-3 13:1:28] All ACKs received

[INFO][2020-12-3 13:1:28] Current window size: 6
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:1:28] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Updating timeout interval: 2659
[INFO][2020-12-3 13:1:28] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Updating timeout interval: 2440
[INFO][2020-12-3 13:1:28] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Updating timeout interval: 2206
[INFO][2020-12-3 13:1:28] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:1:28] Updating timeout interval: 1969
[INFO][2020-12-3 13:2:14] Host found: 192.168.1.78
[INFO][2020-12-3 13:2:14] The network emulator's port is: 7002
[INFO][2020-12-3 13:2:14] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:2:14] Number of lines in the file are: 150
[INFO][2020-12-3 13:2:14] Current window size: 1
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2409
[INFO][2020-12-3 13:2:14] All ACKs received

[INFO][2020-12-3 13:2:14] Current window size: 2
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2632
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2679
[INFO][2020-12-3 13:2:14] All ACKs received

[INFO][2020-12-3 13:2:14] Current window size: 4
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2601
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2451
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2260
[INFO][2020-12-3 13:2:14] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Updating timeout interval: 2046
[INFO][2020-12-3 13:2:14] All ACKs received

[INFO][2020-12-3 13:2:14] Current window size: 8
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1822
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1601
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1395
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1202
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1026
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 878
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 798
[INFO][2020-12-3 13:2:15] RTT (798) >= Timeout Interval (=798), packet loss event detected
[INFO][2020-12-3 13:2:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1081
[INFO][2020-12-3 13:2:15] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Updating timeout interval: 1185
[INFO][2020-12-3 13:2:15] All ACKs received

[INFO][2020-12-3 13:2:15] Current window size: 8
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 1109
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 1011
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 902
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 790
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 690
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 642
[INFO][2020-12-3 13:2:16] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:2:16] Updating timeout interval: 633
[INFO][2020-12-3 13:2:16] RTT (633) >= Timeout Interval (=633), packet loss event detected
[INFO][2020-12-3 13:2:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:16] Updating timeout interval: 816
[INFO][2020-12-3 13:2:17] RTT (816) >= Timeout Interval (=816), packet loss event detected
[INFO][2020-12-3 13:2:17] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:17] Updating timeout interval: 1114
[INFO][2020-12-3 13:2:17] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Updating timeout interval: 1251
[INFO][2020-12-3 13:2:17] All ACKs received

[INFO][2020-12-3 13:2:17] Current window size: 4
[INFO][2020-12-3 13:2:17] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:17] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Updating timeout interval: 1248
[INFO][2020-12-3 13:2:17] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:2:17] Updating timeout interval: 1161
[INFO][2020-12-3 13:2:18] RTT (1161) >= Timeout Interval (=1161), packet loss event detected
[INFO][2020-12-3 13:2:18] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1761
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1707
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1598
[INFO][2020-12-3 13:2:18] All ACKs received

[INFO][2020-12-3 13:2:18] Current window size: 5
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1447
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1283
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 1121
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 961
[INFO][2020-12-3 13:2:18] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Updating timeout interval: 814
[INFO][2020-12-3 13:2:18] All ACKs received

[INFO][2020-12-3 13:2:18] Current window size: 10
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 700
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 641
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 625
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 636
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 665
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 704
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 753
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 807
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 863
[INFO][2020-12-3 13:2:19] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Updating timeout interval: 920
[INFO][2020-12-3 13:2:19] All ACKs received

[INFO][2020-12-3 13:2:19] Current window size: 20
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 978
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1033
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1085
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1137
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1186
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1232
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1278
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1320
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1363
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1402
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1441
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1480
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1516
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1552
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1584
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1616
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1648
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1680
[INFO][2020-12-3 13:2:20] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:2:20] Updating timeout interval: 1712
[INFO][2020-12-3 13:2:21] RTT (1712) >= Timeout Interval (=1712), packet loss event detected
[INFO][2020-12-3 13:2:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2297
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2704
[INFO][2020-12-3 13:2:21] All ACKs received

[INFO][2020-12-3 13:2:21] Current window size: 11
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2680
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2569
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2405
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2214
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 2012
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 1805
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 1609
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 1422
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 1248
[INFO][2020-12-3 13:2:21] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:2:21] Updating timeout interval: 1090
[INFO][2020-12-3 13:2:22] RTT (1090) >= Timeout Interval (=1090), packet loss event detected
[INFO][2020-12-3 13:2:22] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1455
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1704
[INFO][2020-12-3 13:2:22] All ACKs received

[INFO][2020-12-3 13:2:22] Current window size: 11
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1608
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1484
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1347
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1204
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 1062
[INFO][2020-12-3 13:2:22] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:2:22] Updating timeout interval: 928
[INFO][2020-12-3 13:2:23] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:2:23] Updating timeout interval: 843
[INFO][2020-12-3 13:2:23] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:2:23] Updating timeout interval: 809
[INFO][2020-12-3 13:2:23] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:2:23] Updating timeout interval: 842
[INFO][2020-12-3 13:2:23] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:2:23] Updating timeout interval: 885
[INFO][2020-12-3 13:2:23] RTT (885) >= Timeout Interval (=885), packet loss event detected
[INFO][2020-12-3 13:2:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:23] Updating timeout interval: 1149
[INFO][2020-12-3 13:2:24] RTT (1149) >= Timeout Interval (=1149), packet loss event detected
[INFO][2020-12-3 13:2:24] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1576
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1782
[INFO][2020-12-3 13:2:24] All ACKs received

[INFO][2020-12-3 13:2:24] Current window size: 6
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1762
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1655
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1516
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1365
[INFO][2020-12-3 13:2:24] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:2:24] Updating timeout interval: 1208
[INFO][2020-12-3 13:2:25] RTT (1208) >= Timeout Interval (=1208), packet loss event detected
[INFO][2020-12-3 13:2:25] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:25] Updating timeout interval: 1789
[INFO][2020-12-3 13:2:25] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Updating timeout interval: 1818
[INFO][2020-12-3 13:2:25] All ACKs received

[INFO][2020-12-3 13:2:25] Current window size: 6
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1677
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1516
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1345
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1177
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1018
[INFO][2020-12-3 13:2:26] RTT (1018) >= Timeout Interval (=1018), packet loss event detected
[INFO][2020-12-3 13:2:26] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1498
[INFO][2020-12-3 13:2:26] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Updating timeout interval: 1529
[INFO][2020-12-3 13:2:26] All ACKs received

[INFO][2020-12-3 13:2:26] Current window size: 6
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 1399
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 1256
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 1107
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 959
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 812
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 710
[INFO][2020-12-3 13:2:27] All ACKs received

[INFO][2020-12-3 13:2:27] Current window size: 12
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 723
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 750
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 823
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 893
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 960
[INFO][2020-12-3 13:2:27] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:2:27] Updating timeout interval: 1024
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1085
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1147
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1206
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1262
[INFO][2020-12-3 13:2:28] RTT (1262) >= Timeout Interval (=1262), packet loss event detected
[INFO][2020-12-3 13:2:28] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1785
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1915
[INFO][2020-12-3 13:2:28] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Updating timeout interval: 1922
[INFO][2020-12-3 13:2:28] All ACKs received

[INFO][2020-12-3 13:2:28] Current window size: 12
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:28] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1592
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1401
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1281
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1215
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1184
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1182
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1198
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1228
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1267
[INFO][2020-12-3 13:2:29] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:2:29] Updating timeout interval: 1307
[INFO][2020-12-3 13:2:30] RTT (1307) >= Timeout Interval (=1307), packet loss event detected
[INFO][2020-12-3 13:2:30] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1773
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 2028
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 2109
[INFO][2020-12-3 13:2:30] All ACKs received

[INFO][2020-12-3 13:2:30] Current window size: 12
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1798
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1508
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1293
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1158
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1082
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1048
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1045
[INFO][2020-12-3 13:2:30] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:2:30] Updating timeout interval: 1091
[INFO][2020-12-3 13:2:31] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Updating timeout interval: 1143
[INFO][2020-12-3 13:2:31] RTT (1143) >= Timeout Interval (=1143), packet loss event detected
[INFO][2020-12-3 13:2:31] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:2:31] Updating timeout interval: 1498
[INFO][2020-12-3 13:2:31] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Updating timeout interval: 1751
[INFO][2020-12-3 13:2:31] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Updating timeout interval: 1845
[INFO][2020-12-3 13:2:31] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Updating timeout interval: 1830
[INFO][2020-12-3 13:2:31] All ACKs received

[INFO][2020-12-3 13:2:31] Current window size: 13
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:2:31] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1529
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1281
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1124
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1031
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 989
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 977
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 991
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1019
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1057
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1104
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1153
[INFO][2020-12-3 13:2:32] RTT (1153) >= Timeout Interval (=1153), packet loss event detected
[INFO][2020-12-3 13:2:32] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1527
[INFO][2020-12-3 13:2:32] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:2:32] Updating timeout interval: 1813
[INFO][2020-12-3 13:2:32] All ACKs received

[INFO][2020-12-3 13:2:32] Completed Data Transfer
[INFO][2020-12-3 13:2:32] Sending EOT Packet
[INFO][2020-12-3 13:2:32] Terminating Transmitter...
[INFO][2020-12-3 13:3:1] Host found: 192.168.1.78
[INFO][2020-12-3 13:3:1] The network emulator's port is: 7002
[INFO][2020-12-3 13:3:1] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:3:1] Number of lines in the file are: 150
[INFO][2020-12-3 13:3:1] Current window size: 1
[INFO][2020-12-3 13:3:1] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:1] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2434
[INFO][2020-12-3 13:3:2] All ACKs received

[INFO][2020-12-3 13:3:2] Current window size: 2
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2649
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2684
[INFO][2020-12-3 13:3:2] All ACKs received

[INFO][2020-12-3 13:3:2] Current window size: 4
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2595
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2439
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2241
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 2025
[INFO][2020-12-3 13:3:2] All ACKs received

[INFO][2020-12-3 13:3:2] Current window size: 8
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 1812
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 1602
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 1399
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 1209
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 1032
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 876
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 792
[INFO][2020-12-3 13:3:2] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Updating timeout interval: 755
[INFO][2020-12-3 13:3:2] All ACKs received

[INFO][2020-12-3 13:3:2] Current window size: 16
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 748
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 768
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 802
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 846
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 896
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 951
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1007
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1060
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1115
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1198
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1269
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1333
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1389
[INFO][2020-12-3 13:3:3] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:3:3] Updating timeout interval: 1437
[INFO][2020-12-3 13:3:4] RTT (1437) >= Timeout Interval (=1437), packet loss event detected
[INFO][2020-12-3 13:3:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:3:4] Updating timeout interval: 1979
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 2210
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 2272
[INFO][2020-12-3 13:3:4] All ACKs received

[INFO][2020-12-3 13:3:4] Current window size: 12
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 2052
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 1832
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 1622
[INFO][2020-12-3 13:3:4] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:3:4] Updating timeout interval: 1422
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 1239
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 1073
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 963
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 909
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 899
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 915
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 949
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 993
[INFO][2020-12-3 13:3:5] All ACKs received

[INFO][2020-12-3 13:3:5] Current window size: 20
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 910
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 875
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 875
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 898
[INFO][2020-12-3 13:3:5] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:3:5] Updating timeout interval: 935
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 986
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1043
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1101
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1157
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1246
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1323
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1393
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1451
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1505
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1556
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1631
[INFO][2020-12-3 13:3:6] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:3:6] Updating timeout interval: 1693
[INFO][2020-12-3 13:3:6] RTT (1693) >= Timeout Interval (=1693), packet loss event detected
[INFO][2020-12-3 13:3:6] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:3:6] Updating timeout interval: 2264
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 2627
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 2764
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 2748
[INFO][2020-12-3 13:3:7] All ACKs received

[INFO][2020-12-3 13:3:7] Current window size: 13
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 2490
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 2233
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1988
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1758
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1541
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1346
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1171
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 1036
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 965
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 936
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 938
[INFO][2020-12-3 13:3:7] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:3:7] Updating timeout interval: 958
[INFO][2020-12-3 13:3:8] RTT (958) >= Timeout Interval (=958), packet loss event detected
[INFO][2020-12-3 13:3:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:8] Updating timeout interval: 1203
[INFO][2020-12-3 13:3:9] RTT (1203) >= Timeout Interval (=1203), packet loss event detected
[INFO][2020-12-3 13:3:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1601
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1888
[INFO][2020-12-3 13:3:9] All ACKs received

[INFO][2020-12-3 13:3:9] Current window size: 6
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1918
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1863
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1754
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1613
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1455
[INFO][2020-12-3 13:3:9] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Updating timeout interval: 1295
[INFO][2020-12-3 13:3:9] All ACKs received

[INFO][2020-12-3 13:3:9] Current window size: 12
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 1137
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 977
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 859
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 801
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 786
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 798
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 824
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 923
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 1007
[INFO][2020-12-3 13:3:10] RTT (1007) >= Timeout Interval (=1007), packet loss event detected
[INFO][2020-12-3 13:3:10] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:3:10] Updating timeout interval: 1372
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 1514
[INFO][2020-12-3 13:3:10] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:3:10] Updating timeout interval: 1543
[INFO][2020-12-3 13:3:12] RTT (1543) >= Timeout Interval (=1543), packet loss event detected
[INFO][2020-12-3 13:3:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:12] Updating timeout interval: 2344
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 2315
[INFO][2020-12-3 13:3:12] All ACKs received

[INFO][2020-12-3 13:3:12] Current window size: 7
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 2107
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 1888
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 1672
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 1463
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 1267
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 1089
[INFO][2020-12-3 13:3:12] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Updating timeout interval: 927
[INFO][2020-12-3 13:3:12] All ACKs received

[INFO][2020-12-3 13:3:12] Current window size: 14
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 822
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 772
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 757
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 769
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 799
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 843
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 893
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 948
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1005
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1059
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1114
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1165
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1217
[INFO][2020-12-3 13:3:13] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Updating timeout interval: 1266
[INFO][2020-12-3 13:3:13] All ACKs received

[INFO][2020-12-3 13:3:13] Current window size: 20
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1137
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1012
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 943
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 921
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 931
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 959
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1005
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1057
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1111
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1171
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1228
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1286
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1341
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1396
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1448
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1497
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1546
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1592
[INFO][2020-12-3 13:3:14] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:3:14] Updating timeout interval: 1634
[INFO][2020-12-3 13:3:15] RTT (1634) >= Timeout Interval (=1634), packet loss event detected
[INFO][2020-12-3 13:3:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2147
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2593
[INFO][2020-12-3 13:3:15] All ACKs received

[INFO][2020-12-3 13:3:15] Current window size: 11
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2601
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2514
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2366
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 2187
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 1993
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 1770
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 1540
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 1335
[INFO][2020-12-3 13:3:15] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:3:15] Updating timeout interval: 1159
[INFO][2020-12-3 13:3:16] RTT (1159) >= Timeout Interval (=1159), packet loss event detected
[INFO][2020-12-3 13:3:16] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1553
[INFO][2020-12-3 13:3:16] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1789
[INFO][2020-12-3 13:3:16] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1870
[INFO][2020-12-3 13:3:16] All ACKs received

[INFO][2020-12-3 13:3:16] Current window size: 12
[INFO][2020-12-3 13:3:16] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:3:16] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1853
[INFO][2020-12-3 13:3:16] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1767
[INFO][2020-12-3 13:3:16] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:3:16] Updating timeout interval: 1637
[INFO][2020-12-3 13:3:18] RTT (1637) >= Timeout Interval (=1637), packet loss event detected
[INFO][2020-12-3 13:3:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:18] Updating timeout interval: 2540
[INFO][2020-12-3 13:3:20] RTT (2540) >= Timeout Interval (=2540), packet loss event detected
[INFO][2020-12-3 13:3:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:3:20] Updating timeout interval: 4009
[INFO][2020-12-3 13:3:20] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:3:20] Updating timeout interval: 3781
[INFO][2020-12-3 13:3:20] All ACKs received

[INFO][2020-12-3 13:3:20] Completed Data Transfer
[INFO][2020-12-3 13:3:20] Sending EOT Packet
[INFO][2020-12-3 13:3:20] Terminating Transmitter...
[INFO][2020-12-3 13:4:59] Host found: 192.168.1.78
[INFO][2020-12-3 13:4:59] The network emulator's port is: 7002
[INFO][2020-12-3 13:4:59] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:4:59] Number of lines in the file are: 150
[INFO][2020-12-3 13:4:59] Current window size: 1
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:4:59] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Updating timeout interval: 2440
[INFO][2020-12-3 13:4:59] All ACKs received

[INFO][2020-12-3 13:4:59] Current window size: 2
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:4:59] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Updating timeout interval: 2631
[INFO][2020-12-3 13:4:59] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Updating timeout interval: 2647
[INFO][2020-12-3 13:4:59] All ACKs received

[INFO][2020-12-3 13:4:59] Current window size: 4
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:4:59] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Updating timeout interval: 2533
[INFO][2020-12-3 13:4:59] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:4:59] Updating timeout interval: 2324
[INFO][2020-12-3 13:5:1] RTT (2324) >= Timeout Interval (=2324), packet loss event detected
[INFO][2020-12-3 13:5:1] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:5:1] Updating timeout interval: 3615
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 3415
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 3150
[INFO][2020-12-3 13:5:2] All ACKs received

[INFO][2020-12-3 13:5:2] Current window size: 5
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 2790
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 2448
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 2127
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 1830
[INFO][2020-12-3 13:5:2] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Updating timeout interval: 1560
[INFO][2020-12-3 13:5:2] All ACKs received

[INFO][2020-12-3 13:5:2] Current window size: 10
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1317
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1175
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1102
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1080
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1094
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1135
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1190
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1256
[INFO][2020-12-3 13:5:3] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1327
[INFO][2020-12-3 13:5:3] RTT (1327) >= Timeout Interval (=1327), packet loss event detected
[INFO][2020-12-3 13:5:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:5:3] Updating timeout interval: 1812
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 2052
[INFO][2020-12-3 13:5:4] All ACKs received

[INFO][2020-12-3 13:5:4] Current window size: 10
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1790
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1547
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1326
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1194
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1135
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1128
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1157
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1210
[INFO][2020-12-3 13:5:4] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:5:4] Updating timeout interval: 1273
[INFO][2020-12-3 13:5:5] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Updating timeout interval: 1351
[INFO][2020-12-3 13:5:5] All ACKs received

[INFO][2020-12-3 13:5:5] Current window size: 20
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 1568
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 1741
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 1882
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 1999
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2096
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2181
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2258
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2327
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2388
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2449
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2511
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2569
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2627
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2681
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2731
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2781
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2827
[INFO][2020-12-3 13:5:6] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:5:6] Updating timeout interval: 2873
[INFO][2020-12-3 13:5:7] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:5:7] Updating timeout interval: 2923
[INFO][2020-12-3 13:5:7] RTT (2923) >= Timeout Interval (=2923), packet loss event detected
[INFO][2020-12-3 13:5:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:5:7] Updating timeout interval: 3892
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 4619
[INFO][2020-12-3 13:5:8] All ACKs received

[INFO][2020-12-3 13:5:8] Current window size: 11
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 4544
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 4338
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 4053
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 3728
[INFO][2020-12-3 13:5:8] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:5:8] Updating timeout interval: 3384
[INFO][2020-12-3 13:5:9] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:5:9] Updating timeout interval: 3044
[INFO][2020-12-3 13:5:9] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:5:9] Updating timeout interval: 2681
[INFO][2020-12-3 13:5:9] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:5:9] Updating timeout interval: 2354
[INFO][2020-12-3 13:5:9] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:5:9] Updating timeout interval: 2062
[INFO][2020-12-3 13:5:10] RTT (2062) >= Timeout Interval (=2062), packet loss event detected
[INFO][2020-12-3 13:5:10] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:5:10] Updating timeout interval: 2768
[INFO][2020-12-3 13:5:10] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Updating timeout interval: 3200
[INFO][2020-12-3 13:5:10] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Updating timeout interval: 3351
[INFO][2020-12-3 13:5:10] All ACKs received

[INFO][2020-12-3 13:5:10] Current window size: 12
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 2933
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 2553
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 2210
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1903
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1686
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1571
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1575
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1615
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1674
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1748
[INFO][2020-12-3 13:5:11] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:5:11] Updating timeout interval: 1833
[INFO][2020-12-3 13:5:12] RTT (1833) >= Timeout Interval (=1833), packet loss event detected
[INFO][2020-12-3 13:5:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:5:12] Updating timeout interval: 2404
[INFO][2020-12-3 13:5:12] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Updating timeout interval: 2887
[INFO][2020-12-3 13:5:12] All ACKs received

[INFO][2020-12-3 13:5:12] Current window size: 11
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 2652
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 2396
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 2138
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1889
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1694
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1593
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1561
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1577
[INFO][2020-12-3 13:5:13] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:5:13] Updating timeout interval: 1680
[INFO][2020-12-3 13:5:14] RTT (1680) >= Timeout Interval (=1680), packet loss event detected
[INFO][2020-12-3 13:5:14] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:5:14] Updating timeout interval: 2174
[INFO][2020-12-3 13:5:14] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Updating timeout interval: 2608
[INFO][2020-12-3 13:5:14] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Updating timeout interval: 2772
[INFO][2020-12-3 13:5:14] All ACKs received

[INFO][2020-12-3 13:5:14] Current window size: 12
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 2354
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1988
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1753
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1628
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1576
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1577
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1618
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1683
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1763
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1853
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 1946
[INFO][2020-12-3 13:5:15] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Updating timeout interval: 2045
[INFO][2020-12-3 13:5:15] All ACKs received

[INFO][2020-12-3 13:5:15] Current window size: 20
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2041
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2068
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2118
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2186
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2264
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2344
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2426
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2509
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2594
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2676
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2759
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2838
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2918
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 2995
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 3069
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 3143
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 3214
[INFO][2020-12-3 13:5:17] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:5:17] Updating timeout interval: 3281
[INFO][2020-12-3 13:5:18] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Updating timeout interval: 3348
[INFO][2020-12-3 13:5:18] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Updating timeout interval: 3416
[INFO][2020-12-3 13:5:18] All ACKs received

[INFO][2020-12-3 13:5:18] Current window size: 20
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 3564
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 3549
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 3433
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 3250
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 3035
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2806
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2578
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2357
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2247
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2211
[INFO][2020-12-3 13:5:19] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:5:19] Updating timeout interval: 2228
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2282
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2360
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2453
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2553
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2660
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2765
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2868
[INFO][2020-12-3 13:5:20] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:5:20] Updating timeout interval: 2973
[INFO][2020-12-3 13:5:21] RTT (2973) >= Timeout Interval (=2973), packet loss event detected
[INFO][2020-12-3 13:5:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:5:21] Updating timeout interval: 3698
[INFO][2020-12-3 13:5:21] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Updating timeout interval: 4814
[INFO][2020-12-3 13:5:21] All ACKs received

[INFO][2020-12-3 13:5:21] Current window size: 11
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:21] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:5:21] Updating timeout interval: 4911
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 4804
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 4566
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 4255
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 3904
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 3543
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 3186
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 2844
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 2527
[INFO][2020-12-3 13:5:22] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:5:22] Updating timeout interval: 2235
[INFO][2020-12-3 13:5:23] RTT (2235) >= Timeout Interval (=2235), packet loss event detected
[INFO][2020-12-3 13:5:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:5:23] Updating timeout interval: 2955
[INFO][2020-12-3 13:5:23] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:5:23] Updating timeout interval: 3523
[INFO][2020-12-3 13:5:23] All ACKs received

[INFO][2020-12-3 13:5:23] Current window size: 11
[INFO][2020-12-3 13:5:23] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:23] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:5:23] Updating timeout interval: 3728
[INFO][2020-12-3 13:5:23] All ACKs received

[INFO][2020-12-3 13:5:23] Completed Data Transfer
[INFO][2020-12-3 13:5:23] Sending EOT Packet
[INFO][2020-12-3 13:5:23] Terminating Transmitter...
[INFO][2020-12-3 13:5:57] Host found: 192.168.1.78
[INFO][2020-12-3 13:5:57] The network emulator's port is: 7002
[INFO][2020-12-3 13:5:57] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:5:57] Number of lines in the file are: 150
[INFO][2020-12-3 13:5:57] Current window size: 1
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:57] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Updating timeout interval: 2409
[INFO][2020-12-3 13:5:57] All ACKs received

[INFO][2020-12-3 13:5:57] Current window size: 2
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:57] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Updating timeout interval: 2573
[INFO][2020-12-3 13:5:57] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Updating timeout interval: 2560
[INFO][2020-12-3 13:5:57] All ACKs received

[INFO][2020-12-3 13:5:57] Current window size: 4
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:57] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Updating timeout interval: 2435
[INFO][2020-12-3 13:5:57] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:5:57] Updating timeout interval: 2244
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 2017
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1777
[INFO][2020-12-3 13:5:58] All ACKs received

[INFO][2020-12-3 13:5:58] Current window size: 8
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1534
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1300
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1153
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1096
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1101
[INFO][2020-12-3 13:5:58] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:5:58] Updating timeout interval: 1147
[INFO][2020-12-3 13:5:59] RTT (1147) >= Timeout Interval (=1147), packet loss event detected
[INFO][2020-12-3 13:5:59] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:5:59] Updating timeout interval: 1545
[INFO][2020-12-3 13:5:59] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Updating timeout interval: 1712
[INFO][2020-12-3 13:5:59] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Updating timeout interval: 1730
[INFO][2020-12-3 13:5:59] All ACKs received

[INFO][2020-12-3 13:5:59] Current window size: 9
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:5:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1455
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1263
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1169
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1148
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1172
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1229
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1309
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1401
[INFO][2020-12-3 13:6:0] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Updating timeout interval: 1499
[INFO][2020-12-3 13:6:0] All ACKs received

[INFO][2020-12-3 13:6:0] Current window size: 18
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 1613
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 1725
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 1890
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 2032
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 2154
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 2265
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 2364
[INFO][2020-12-3 13:6:1] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:6:1] Updating timeout interval: 2452
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2532
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2608
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2680
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2803
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2906
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 2992
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 3066
[INFO][2020-12-3 13:6:2] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:6:2] Updating timeout interval: 3131
[INFO][2020-12-3 13:6:3] RTT (3131) >= Timeout Interval (=3131), packet loss event detected
[INFO][2020-12-3 13:6:3] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:6:3] Updating timeout interval: 4307
[INFO][2020-12-3 13:6:3] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Updating timeout interval: 4860
[INFO][2020-12-3 13:6:3] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Updating timeout interval: 5000
[INFO][2020-12-3 13:6:3] All ACKs received

[INFO][2020-12-3 13:6:3] Current window size: 12
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 4645
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 4178
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 3726
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 3299
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 2903
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 2540
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 2214
[INFO][2020-12-3 13:6:4] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:6:4] Updating timeout interval: 1951
[INFO][2020-12-3 13:6:5] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Updating timeout interval: 1807
[INFO][2020-12-3 13:6:5] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Updating timeout interval: 1745
[INFO][2020-12-3 13:6:5] RTT (1745) >= Timeout Interval (=1745), packet loss event detected
[INFO][2020-12-3 13:6:5] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:6:5] Updating timeout interval: 2201
[INFO][2020-12-3 13:6:5] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Updating timeout interval: 2734
[INFO][2020-12-3 13:6:5] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Updating timeout interval: 2962
[INFO][2020-12-3 13:6:5] All ACKs received

[INFO][2020-12-3 13:6:5] Current window size: 12
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 2664
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 2365
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 2076
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 1807
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 1602
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 1499
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 1520
[INFO][2020-12-3 13:6:6] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:6:6] Updating timeout interval: 1577
[INFO][2020-12-3 13:6:7] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Updating timeout interval: 1654
[INFO][2020-12-3 13:6:7] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Updating timeout interval: 1742
[INFO][2020-12-3 13:6:7] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Updating timeout interval: 1837
[INFO][2020-12-3 13:6:7] RTT (1837) >= Timeout Interval (=1837), packet loss event detected
[INFO][2020-12-3 13:6:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:6:7] Updating timeout interval: 2427
[INFO][2020-12-3 13:6:7] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Updating timeout interval: 2881
[INFO][2020-12-3 13:6:7] All ACKs received

[INFO][2020-12-3 13:6:7] Current window size: 11
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 2693
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 2466
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 2218
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1968
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1723
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1537
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1450
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1428
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1455
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1514
[INFO][2020-12-3 13:6:8] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Updating timeout interval: 1593
[INFO][2020-12-3 13:6:8] All ACKs received

[INFO][2020-12-3 13:6:8] Current window size: 20
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:8] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 1582
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 1612
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 1674
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 1751
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 1894
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2027
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2149
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2261
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2366
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2464
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2559
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2701
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2819
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 2921
[INFO][2020-12-3 13:6:10] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:6:10] Updating timeout interval: 3011
[INFO][2020-12-3 13:6:11] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:6:11] Updating timeout interval: 3089
[INFO][2020-12-3 13:6:11] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:6:11] Updating timeout interval: 3163
[INFO][2020-12-3 13:6:11] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:6:11] Updating timeout interval: 3233
[INFO][2020-12-3 13:6:12] RTT (3233) >= Timeout Interval (=3233), packet loss event detected
[INFO][2020-12-3 13:6:12] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:6:12] Updating timeout interval: 4337
[INFO][2020-12-3 13:6:12] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Updating timeout interval: 5000
[INFO][2020-12-3 13:6:12] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Updating timeout interval: 5000
[INFO][2020-12-3 13:6:12] All ACKs received

[INFO][2020-12-3 13:6:12] Current window size: 12
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 5000
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 4635
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 4215
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 3794
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 3382
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 2994
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 2636
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 2311
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 2014
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 1840
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 1760
[INFO][2020-12-3 13:6:13] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Updating timeout interval: 1745
[INFO][2020-12-3 13:6:13] All ACKs received

[INFO][2020-12-3 13:6:13] Current window size: 20
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:14] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:6:14] Updating timeout interval: 1628
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1590
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1609
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1665
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1745
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1841
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 1948
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2062
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2175
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2286
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2395
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2497
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2597
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2694
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2788
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2875
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 2963
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 3048
[INFO][2020-12-3 13:6:15] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:6:15] Updating timeout interval: 3130
[INFO][2020-12-3 13:6:16] RTT (3130) >= Timeout Interval (=3130), packet loss event detected
[INFO][2020-12-3 13:6:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:6:16] Updating timeout interval: 4114
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 4928
[INFO][2020-12-3 13:6:17] All ACKs received

[INFO][2020-12-3 13:6:17] Current window size: 11
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 4961
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 4806
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 4537
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 4198
[INFO][2020-12-3 13:6:17] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:6:17] Updating timeout interval: 3828
[INFO][2020-12-3 13:6:18] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:6:18] Updating timeout interval: 3452
[INFO][2020-12-3 13:6:18] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:6:18] Updating timeout interval: 3084
[INFO][2020-12-3 13:6:18] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:6:18] Updating timeout interval: 2735
[INFO][2020-12-3 13:6:18] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:6:18] Updating timeout interval: 2411
[INFO][2020-12-3 13:6:18] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:6:18] Updating timeout interval: 2115
[INFO][2020-12-3 13:6:19] RTT (2115) >= Timeout Interval (=2115), packet loss event detected
[INFO][2020-12-3 13:6:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:6:19] Updating timeout interval: 2830
[INFO][2020-12-3 13:6:19] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Updating timeout interval: 3308
[INFO][2020-12-3 13:6:19] All ACKs received

[INFO][2020-12-3 13:6:19] Current window size: 11
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:6:19] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:6:19] Updating timeout interval: 3164
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 2948
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 2689
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 2418
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 2145
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 1882
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 1646
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 1525
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 1482
[INFO][2020-12-3 13:6:20] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:6:20] Updating timeout interval: 1496
[INFO][2020-12-3 13:6:20] All ACKs received

[INFO][2020-12-3 13:6:20] Completed Data Transfer
[INFO][2020-12-3 13:6:20] Sending EOT Packet
[INFO][2020-12-3 13:6:20] Terminating Transmitter...
[INFO][2020-12-3 13:7:36] Host found: 192.168.1.78
[INFO][2020-12-3 13:7:36] The network emulator's port is: 7002
[INFO][2020-12-3 13:7:36] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:7:36] Number of lines in the file are: 150
[INFO][2020-12-3 13:7:36] Current window size: 1
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2396
[INFO][2020-12-3 13:7:36] All ACKs received

[INFO][2020-12-3 13:7:36] Current window size: 2
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2572
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2570
[INFO][2020-12-3 13:7:36] All ACKs received

[INFO][2020-12-3 13:7:36] Current window size: 4
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2452
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2264
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 2037
[INFO][2020-12-3 13:7:36] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Updating timeout interval: 1796
[INFO][2020-12-3 13:7:36] All ACKs received

[INFO][2020-12-3 13:7:36] Current window size: 8
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1549
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1311
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1159
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1098
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1098
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1139
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1208
[INFO][2020-12-3 13:7:37] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Updating timeout interval: 1297
[INFO][2020-12-3 13:7:37] All ACKs received

[INFO][2020-12-3 13:7:37] Current window size: 16
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1397
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1504
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1613
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1720
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1825
[INFO][2020-12-3 13:7:38] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:7:38] Updating timeout interval: 1928
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2029
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2123
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2214
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2302
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2382
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2463
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2541
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2615
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2686
[INFO][2020-12-3 13:7:39] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Updating timeout interval: 2757
[INFO][2020-12-3 13:7:39] All ACKs received

[INFO][2020-12-3 13:7:39] Current window size: 20
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 2580
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 2377
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 2167
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 1957
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 1842
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 1806
[INFO][2020-12-3 13:7:40] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:7:40] Updating timeout interval: 1823
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 1876
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 1957
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2050
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2154
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2261
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2366
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2473
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2578
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2686
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2787
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2881
[INFO][2020-12-3 13:7:41] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:7:41] Updating timeout interval: 2972
[INFO][2020-12-3 13:7:42] RTT (2972) >= Timeout Interval (=2972), packet loss event detected
[INFO][2020-12-3 13:7:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:7:42] Updating timeout interval: 3855
[INFO][2020-12-3 13:7:42] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Updating timeout interval: 4701
[INFO][2020-12-3 13:7:42] All ACKs received

[INFO][2020-12-3 13:7:42] Current window size: 11
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:42] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 4755
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 4620
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 4366
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 4046
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 3694
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 3332
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 2978
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 2642
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 2332
[INFO][2020-12-3 13:7:43] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:7:43] Updating timeout interval: 2046
[INFO][2020-12-3 13:7:44] RTT (2046) >= Timeout Interval (=2046), packet loss event detected
[INFO][2020-12-3 13:7:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:7:44] Updating timeout interval: 2718
[INFO][2020-12-3 13:7:44] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Updating timeout interval: 3210
[INFO][2020-12-3 13:7:44] All ACKs received

[INFO][2020-12-3 13:7:44] Current window size: 11
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 3039
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 2810
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 2550
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 2281
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 2017
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 1762
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 1599
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 1530
[INFO][2020-12-3 13:7:45] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:7:45] Updating timeout interval: 1523
[INFO][2020-12-3 13:7:46] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Updating timeout interval: 1565
[INFO][2020-12-3 13:7:46] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Updating timeout interval: 1635
[INFO][2020-12-3 13:7:46] All ACKs received

[INFO][2020-12-3 13:7:46] Current window size: 20
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1624
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1654
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1716
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1797
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1889
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 1988
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2090
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2194
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2296
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2400
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2505
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2604
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2696
[INFO][2020-12-3 13:7:47] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:7:47] Updating timeout interval: 2785
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 2879
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 2966
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 3050
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 3130
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 3211
[INFO][2020-12-3 13:7:48] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Updating timeout interval: 3289
[INFO][2020-12-3 13:7:48] All ACKs received

[INFO][2020-12-3 13:7:48] Current window size: 20
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:48] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 3436
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 3421
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 3301
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 3073
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 2828
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 2581
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 2343
[INFO][2020-12-3 13:7:49] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:7:49] Updating timeout interval: 2196
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2135
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2144
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2194
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2269
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2363
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2469
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2577
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2683
[INFO][2020-12-3 13:7:50] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:7:50] Updating timeout interval: 2788
[INFO][2020-12-3 13:7:51] RTT (2788) >= Timeout Interval (=2788), packet loss event detected
[INFO][2020-12-3 13:7:51] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:7:51] Updating timeout interval: 3494
[INFO][2020-12-3 13:7:51] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:7:51] Updating timeout interval: 4416
[INFO][2020-12-3 13:7:51] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:7:51] Updating timeout interval: 4807
[INFO][2020-12-3 13:7:55] RTT (4807) >= Timeout Interval (=4807), packet loss event detected
[INFO][2020-12-3 13:7:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:7:55] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] All ACKs received

[INFO][2020-12-3 13:7:56] Current window size: 7
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 4679
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 4138
[INFO][2020-12-3 13:7:56] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Updating timeout interval: 3635
[INFO][2020-12-3 13:7:56] All ACKs received

[INFO][2020-12-3 13:7:56] Current window size: 14
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 3176
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 2759
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 2384
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 2053
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 1821
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 1699
[INFO][2020-12-3 13:7:57] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:7:57] Updating timeout interval: 1655
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 1663
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 1708
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 1776
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 1860
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 2009
[INFO][2020-12-3 13:7:58] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:7:58] Updating timeout interval: 2144
[INFO][2020-12-3 13:7:59] RTT (2145) >= Timeout Interval (=2144), packet loss event detected
[INFO][2020-12-3 13:7:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:7:59] Updating timeout interval: 2844
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 3372
[INFO][2020-12-3 13:7:59] All ACKs received

[INFO][2020-12-3 13:7:59] Current window size: 11
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 3224
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 3004
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 2745
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 2474
[INFO][2020-12-3 13:7:59] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:7:59] Updating timeout interval: 2201
[INFO][2020-12-3 13:8:0] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1937
[INFO][2020-12-3 13:8:0] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1693
[INFO][2020-12-3 13:8:0] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1563
[INFO][2020-12-3 13:8:0] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1515
[INFO][2020-12-3 13:8:0] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1525
[INFO][2020-12-3 13:8:0] RTT (1525) >= Timeout Interval (=1525), packet loss event detected
[INFO][2020-12-3 13:8:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:0] Updating timeout interval: 1918
[INFO][2020-12-3 13:8:2] RTT (1918) >= Timeout Interval (=1918), packet loss event detected
[INFO][2020-12-3 13:8:2] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:2] Updating timeout interval: 2556
[INFO][2020-12-3 13:8:2] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Updating timeout interval: 3003
[INFO][2020-12-3 13:8:2] All ACKs received

[INFO][2020-12-3 13:8:2] Current window size: 6
[INFO][2020-12-3 13:8:2] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:3] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:8:3] Updating timeout interval: 3042
[INFO][2020-12-3 13:8:3] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:8:3] Updating timeout interval: 2943
[INFO][2020-12-3 13:8:3] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:8:3] Updating timeout interval: 2755
[INFO][2020-12-3 13:8:3] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:8:3] Updating timeout interval: 2518
[INFO][2020-12-3 13:8:3] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:8:3] Updating timeout interval: 2256
[INFO][2020-12-3 13:8:3] All ACKs received

[INFO][2020-12-3 13:8:3] Completed Data Transfer
[INFO][2020-12-3 13:8:3] Sending EOT Packet
[INFO][2020-12-3 13:8:3] Terminating Transmitter...
[INFO][2020-12-3 13:8:29] Host found: 192.168.1.78
[INFO][2020-12-3 13:8:29] The network emulator's port is: 7002
[INFO][2020-12-3 13:8:29] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:8:29] Number of lines in the file are: 150
[INFO][2020-12-3 13:8:29] Current window size: 1
[INFO][2020-12-3 13:8:29] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:29] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2413
[INFO][2020-12-3 13:8:30] All ACKs received

[INFO][2020-12-3 13:8:30] Current window size: 2
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2577
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2568
[INFO][2020-12-3 13:8:30] All ACKs received

[INFO][2020-12-3 13:8:30] Current window size: 4
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2440
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2246
[INFO][2020-12-3 13:8:30] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:8:30] Updating timeout interval: 2016
[INFO][2020-12-3 13:8:32] RTT (2016) >= Timeout Interval (=2016), packet loss event detected
[INFO][2020-12-3 13:8:32] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:32] Updating timeout interval: 3081
[INFO][2020-12-3 13:8:32] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Updating timeout interval: 2994
[INFO][2020-12-3 13:8:32] All ACKs received

[INFO][2020-12-3 13:8:32] Current window size: 4
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:32] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Updating timeout interval: 2732
[INFO][2020-12-3 13:8:32] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Updating timeout interval: 2430
[INFO][2020-12-3 13:8:32] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Updating timeout interval: 2128
[INFO][2020-12-3 13:8:32] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Updating timeout interval: 1832
[INFO][2020-12-3 13:8:32] All ACKs received

[INFO][2020-12-3 13:8:32] Current window size: 8
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1559
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1306
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1168
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1112
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1113
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1155
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1225
[INFO][2020-12-3 13:8:33] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Updating timeout interval: 1314
[INFO][2020-12-3 13:8:33] All ACKs received

[INFO][2020-12-3 13:8:33] Current window size: 16
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1410
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1513
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1618
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1722
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1827
[INFO][2020-12-3 13:8:34] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:8:34] Updating timeout interval: 1926
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2027
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2121
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2212
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2300
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2385
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2466
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2544
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2618
[INFO][2020-12-3 13:8:35] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:8:35] Updating timeout interval: 2743
[INFO][2020-12-3 13:8:36] RTT (2743) >= Timeout Interval (=2743), packet loss event detected
[INFO][2020-12-3 13:8:36] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:36] Updating timeout interval: 3804
[INFO][2020-12-3 13:8:36] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Updating timeout interval: 4270
[INFO][2020-12-3 13:8:36] All ACKs received

[INFO][2020-12-3 13:8:36] Current window size: 11
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 4038
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 3739
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 3407
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 3023
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 2662
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 2280
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 2048
[INFO][2020-12-3 13:8:37] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:8:37] Updating timeout interval: 1922
[INFO][2020-12-3 13:8:38] RTT (1922) >= Timeout Interval (=1922), packet loss event detected
[INFO][2020-12-3 13:8:38] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:8:38] Updating timeout interval: 2537
[INFO][2020-12-3 13:8:38] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:8:38] Updating timeout interval: 2934
[INFO][2020-12-3 13:8:38] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:8:38] Updating timeout interval: 3066
[INFO][2020-12-3 13:8:41] RTT (3066) >= Timeout Interval (=3066), packet loss event detected
[INFO][2020-12-3 13:8:41] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:41] Updating timeout interval: 4631
[INFO][2020-12-3 13:8:41] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Updating timeout interval: 4622
[INFO][2020-12-3 13:8:41] All ACKs received

[INFO][2020-12-3 13:8:41] Current window size: 6
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 4273
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 3881
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 3477
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 3075
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 2693
[INFO][2020-12-3 13:8:42] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Updating timeout interval: 2334
[INFO][2020-12-3 13:8:42] All ACKs received

[INFO][2020-12-3 13:8:42] Current window size: 12
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:42] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 2000
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1702
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1515
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1427
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1404
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1429
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1486
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1567
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1660
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1764
[INFO][2020-12-3 13:8:43] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:8:43] Updating timeout interval: 1870
[INFO][2020-12-3 13:8:44] RTT (1870) >= Timeout Interval (=1870), packet loss event detected
[INFO][2020-12-3 13:8:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:44] Updating timeout interval: 2527
[INFO][2020-12-3 13:8:44] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Updating timeout interval: 2911
[INFO][2020-12-3 13:8:44] All ACKs received

[INFO][2020-12-3 13:8:44] Current window size: 11
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 2660
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 2389
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 2120
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1860
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1616
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1491
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1444
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1454
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1505
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1579
[INFO][2020-12-3 13:8:45] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Updating timeout interval: 1673
[INFO][2020-12-3 13:8:45] All ACKs received

[INFO][2020-12-3 13:8:45] Current window size: 20
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:46] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:8:46] Updating timeout interval: 1646
[INFO][2020-12-3 13:8:46] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:8:46] Updating timeout interval: 1668
[INFO][2020-12-3 13:8:46] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:8:46] Updating timeout interval: 1722
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 1854
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 1977
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2098
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2212
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2320
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2425
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2524
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2615
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2703
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2788
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2866
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 2944
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 3019
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 3090
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 3162
[INFO][2020-12-3 13:8:47] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:8:47] Updating timeout interval: 3234
[INFO][2020-12-3 13:8:48] RTT (3234) >= Timeout Interval (=3234), packet loss event detected
[INFO][2020-12-3 13:8:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:48] Updating timeout interval: 4299
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:8:49] All ACKs received

[INFO][2020-12-3 13:8:49] Current window size: 11
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 4926
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 4628
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 4269
[INFO][2020-12-3 13:8:49] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:8:49] Updating timeout interval: 3882
[INFO][2020-12-3 13:8:50] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:8:50] Updating timeout interval: 3493
[INFO][2020-12-3 13:8:50] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:8:50] Updating timeout interval: 3113
[INFO][2020-12-3 13:8:50] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:8:50] Updating timeout interval: 2760
[INFO][2020-12-3 13:8:50] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:8:50] Updating timeout interval: 2428
[INFO][2020-12-3 13:8:50] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:8:50] Updating timeout interval: 2128
[INFO][2020-12-3 13:8:51] RTT (2128) >= Timeout Interval (=2128), packet loss event detected
[INFO][2020-12-3 13:8:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:51] Updating timeout interval: 2853
[INFO][2020-12-3 13:8:51] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Updating timeout interval: 3294
[INFO][2020-12-3 13:8:51] All ACKs received

[INFO][2020-12-3 13:8:51] Current window size: 11
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 3083
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 2788
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 2492
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 2206
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 1936
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 1722
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 1614
[INFO][2020-12-3 13:8:52] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:8:52] Updating timeout interval: 1635
[INFO][2020-12-3 13:8:53] RTT (1635) >= Timeout Interval (=1635), packet loss event detected
[INFO][2020-12-3 13:8:53] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:8:53] Updating timeout interval: 2081
[INFO][2020-12-3 13:8:53] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Updating timeout interval: 2505
[INFO][2020-12-3 13:8:53] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Updating timeout interval: 2670
[INFO][2020-12-3 13:8:53] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Updating timeout interval: 2665
[INFO][2020-12-3 13:8:53] All ACKs received

[INFO][2020-12-3 13:8:53] Current window size: 12
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 2304
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1976
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1684
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1518
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1446
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1436
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1466
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1528
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1610
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1753
[INFO][2020-12-3 13:8:54] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:8:54] Updating timeout interval: 1886
[INFO][2020-12-3 13:8:55] RTT (1886) >= Timeout Interval (=1886), packet loss event detected
[INFO][2020-12-3 13:8:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:8:55] Updating timeout interval: 2544
[INFO][2020-12-3 13:8:55] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Updating timeout interval: 2938
[INFO][2020-12-3 13:8:55] All ACKs received

[INFO][2020-12-3 13:8:55] Current window size: 11
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 2703
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 2444
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 2180
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1921
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1674
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1510
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1445
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1496
[INFO][2020-12-3 13:8:56] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:8:56] Updating timeout interval: 1567
[INFO][2020-12-3 13:8:56] RTT (1567) >= Timeout Interval (=1567), packet loss event detected
[INFO][2020-12-3 13:8:56] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:8:56] Updating timeout interval: 2032
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Updating timeout interval: 2420
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Updating timeout interval: 2564
[INFO][2020-12-3 13:8:57] All ACKs received

[INFO][2020-12-3 13:8:57] Current window size: 12
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Updating timeout interval: 2316
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Updating timeout interval: 2059
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:8:57] Updating timeout interval: 1803
[INFO][2020-12-3 13:8:57] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1570
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1448
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1403
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1411
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1455
[INFO][2020-12-3 13:8:58] RTT (1455) >= Timeout Interval (=1455), packet loss event detected
[INFO][2020-12-3 13:8:58] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:8:58] Updating timeout interval: 1920
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 2223
[INFO][2020-12-3 13:8:58] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:8:58] Updating timeout interval: 2316
[INFO][2020-12-3 13:8:58] All ACKs received

[INFO][2020-12-3 13:8:58] Completed Data Transfer
[INFO][2020-12-3 13:8:58] Sending EOT Packet
[INFO][2020-12-3 13:8:58] Terminating Transmitter...
[INFO][2020-12-3 13:15:15] Host found: 192.168.1.78
[INFO][2020-12-3 13:15:15] The network emulator's port is: 7002
[INFO][2020-12-3 13:15:15] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:15:15] Number of lines in the file are: 150
[INFO][2020-12-3 13:15:15] Current window size: 1
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:15] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Updating timeout interval: 2368
[INFO][2020-12-3 13:15:15] All ACKs received

[INFO][2020-12-3 13:15:15] Current window size: 2
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:15] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Updating timeout interval: 2551
[INFO][2020-12-3 13:15:15] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Updating timeout interval: 2557
[INFO][2020-12-3 13:15:15] All ACKs received

[INFO][2020-12-3 13:15:15] Current window size: 4
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 2436
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 2249
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 2026
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 1785
[INFO][2020-12-3 13:15:16] All ACKs received

[INFO][2020-12-3 13:15:16] Current window size: 8
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 1515
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 1411
[INFO][2020-12-3 13:15:16] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:15:16] Updating timeout interval: 1376
[INFO][2020-12-3 13:15:17] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Updating timeout interval: 1390
[INFO][2020-12-3 13:15:17] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Updating timeout interval: 1439
[INFO][2020-12-3 13:15:17] RTT (1439) >= Timeout Interval (=1439), packet loss event detected
[INFO][2020-12-3 13:15:17] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:15:17] Updating timeout interval: 2020
[INFO][2020-12-3 13:15:17] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Updating timeout interval: 2105
[INFO][2020-12-3 13:15:17] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Updating timeout interval: 2061
[INFO][2020-12-3 13:15:17] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Updating timeout interval: 1934
[INFO][2020-12-3 13:15:17] All ACKs received

[INFO][2020-12-3 13:15:17] Current window size: 9
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1635
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1384
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1247
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1247
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1287
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1355
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1438
[INFO][2020-12-3 13:15:18] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:15:18] Updating timeout interval: 1532
[INFO][2020-12-3 13:15:19] RTT (1532) >= Timeout Interval (=1532), packet loss event detected
[INFO][2020-12-3 13:15:19] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:15:19] Updating timeout interval: 2123
[INFO][2020-12-3 13:15:19] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Updating timeout interval: 2344
[INFO][2020-12-3 13:15:19] All ACKs received

[INFO][2020-12-3 13:15:19] Current window size: 9
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 2101
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1852
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1608
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1384
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1271
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1241
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1260
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1315
[INFO][2020-12-3 13:15:20] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Updating timeout interval: 1394
[INFO][2020-12-3 13:15:20] All ACKs received

[INFO][2020-12-3 13:15:20] Current window size: 18
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 1479
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 1575
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 1678
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 1780
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 1883
[INFO][2020-12-3 13:15:21] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:15:21] Updating timeout interval: 2035
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2168
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2285
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2391
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2489
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2580
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2664
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2744
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2820
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2893
[INFO][2020-12-3 13:15:22] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:15:22] Updating timeout interval: 2958
[INFO][2020-12-3 13:15:23] RTT (2958) >= Timeout Interval (=2958), packet loss event detected
[INFO][2020-12-3 13:15:23] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:15:23] Updating timeout interval: 4038
[INFO][2020-12-3 13:15:23] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Updating timeout interval: 4599
[INFO][2020-12-3 13:15:23] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Updating timeout interval: 4786
[INFO][2020-12-3 13:15:23] All ACKs received

[INFO][2020-12-3 13:15:23] Current window size: 12
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 4360
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 3926
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 3506
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 3106
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 2733
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 2393
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 2086
[INFO][2020-12-3 13:15:24] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:15:24] Updating timeout interval: 1870
[INFO][2020-12-3 13:15:25] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Updating timeout interval: 1760
[INFO][2020-12-3 13:15:25] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Updating timeout interval: 1723
[INFO][2020-12-3 13:15:25] RTT (1723) >= Timeout Interval (=1723), packet loss event detected
[INFO][2020-12-3 13:15:25] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:15:25] Updating timeout interval: 2165
[INFO][2020-12-3 13:15:25] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Updating timeout interval: 2695
[INFO][2020-12-3 13:15:25] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Updating timeout interval: 2924
[INFO][2020-12-3 13:15:25] All ACKs received

[INFO][2020-12-3 13:15:25] Current window size: 12
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 2637
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 2345
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 2064
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 1795
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 1590
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 1491
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 1516
[INFO][2020-12-3 13:15:26] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:15:26] Updating timeout interval: 1573
[INFO][2020-12-3 13:15:27] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Updating timeout interval: 1705
[INFO][2020-12-3 13:15:27] RTT (1705) >= Timeout Interval (=1705), packet loss event detected
[INFO][2020-12-3 13:15:27] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:15:27] Updating timeout interval: 2243
[INFO][2020-12-3 13:15:27] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Updating timeout interval: 2592
[INFO][2020-12-3 13:15:27] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Updating timeout interval: 2705
[INFO][2020-12-3 13:15:27] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Updating timeout interval: 2659
[INFO][2020-12-3 13:15:27] All ACKs received

[INFO][2020-12-3 13:15:27] Current window size: 13
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 2222
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1888
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1689
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1587
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1554
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1570
[INFO][2020-12-3 13:15:28] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:15:28] Updating timeout interval: 1622
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 1693
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 1775
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 1867
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 1962
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 2063
[INFO][2020-12-3 13:15:29] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Updating timeout interval: 2162
[INFO][2020-12-3 13:15:29] All ACKs received

[INFO][2020-12-3 13:15:29] Current window size: 20
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:29] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1934
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1816
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1772
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1784
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1833
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1905
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 1993
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 2092
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 2193
[INFO][2020-12-3 13:15:30] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:15:30] Updating timeout interval: 2296
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2397
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2496
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2592
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2686
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2786
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2879
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 2968
[INFO][2020-12-3 13:15:31] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:15:31] Updating timeout interval: 3054
[INFO][2020-12-3 13:15:32] RTT (3054) >= Timeout Interval (=3054), packet loss event detected
[INFO][2020-12-3 13:15:32] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:15:32] Updating timeout interval: 4038
[INFO][2020-12-3 13:15:32] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:15:32] Updating timeout interval: 4804
[INFO][2020-12-3 13:15:37] RTT (4804) >= Timeout Interval (=4804), packet loss event detected
[INFO][2020-12-3 13:15:37] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] All ACKs received

[INFO][2020-12-3 13:15:37] Current window size: 6
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 5000
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 4977
[INFO][2020-12-3 13:15:37] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Updating timeout interval: 4429
[INFO][2020-12-3 13:15:37] All ACKs received

[INFO][2020-12-3 13:15:37] Current window size: 12
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 3902
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 3416
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 2973
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 2565
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 2206
[INFO][2020-12-3 13:15:38] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:15:38] Updating timeout interval: 1957
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 1818
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 1760
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 1755
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 1789
[INFO][2020-12-3 13:15:39] RTT (1789) >= Timeout Interval (=1789), packet loss event detected
[INFO][2020-12-3 13:15:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:15:39] Updating timeout interval: 2336
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 2773
[INFO][2020-12-3 13:15:39] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Updating timeout interval: 2936
[INFO][2020-12-3 13:15:39] All ACKs received

[INFO][2020-12-3 13:15:39] Current window size: 12
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 2600
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 2278
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 1977
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 1704
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 1541
[INFO][2020-12-3 13:15:40] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:15:40] Updating timeout interval: 1468
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 1457
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 1490
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 1556
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 1637
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 1729
[INFO][2020-12-3 13:15:41] RTT (1729) >= Timeout Interval (=1729), packet loss event detected
[INFO][2020-12-3 13:15:41] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:15:41] Updating timeout interval: 2267
[INFO][2020-12-3 13:15:41] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Updating timeout interval: 2711
[INFO][2020-12-3 13:15:41] All ACKs received

[INFO][2020-12-3 13:15:41] Current window size: 11
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 2521
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 2299
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 2022
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1762
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1569
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1474
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1449
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1472
[INFO][2020-12-3 13:15:42] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:15:42] Updating timeout interval: 1528
[INFO][2020-12-3 13:15:43] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:15:43] Updating timeout interval: 1607
[INFO][2020-12-3 13:15:43] RTT (1607) >= Timeout Interval (=1607), packet loss event detected
[INFO][2020-12-3 13:15:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:15:43] Updating timeout interval: 2073
[INFO][2020-12-3 13:15:43] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:15:43] Updating timeout interval: 2530
[INFO][2020-12-3 13:15:43] All ACKs received

[INFO][2020-12-3 13:15:43] Current window size: 11
[INFO][2020-12-3 13:15:43] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:15:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:15:43] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:15:43] Updating timeout interval: 2719
[INFO][2020-12-3 13:15:43] All ACKs received

[INFO][2020-12-3 13:15:43] Completed Data Transfer
[INFO][2020-12-3 13:15:43] Sending EOT Packet
[INFO][2020-12-3 13:15:43] Terminating Transmitter...
[INFO][2020-12-3 13:16:5] Host found: 192.168.1.78
[INFO][2020-12-3 13:16:5] The network emulator's port is: 7002
[INFO][2020-12-3 13:16:5] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:16:5] Number of lines in the file are: 150
[INFO][2020-12-3 13:16:5] Current window size: 1
[INFO][2020-12-3 13:16:5] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:7] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 13:16:7] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:16:7] Updating timeout interval: 2749
[INFO][2020-12-3 13:16:7] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Updating timeout interval: 3098
[INFO][2020-12-3 13:16:7] All ACKs received

[INFO][2020-12-3 13:16:7] Current window size: 1
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:7] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Updating timeout interval: 3200
[INFO][2020-12-3 13:16:7] All ACKs received

[INFO][2020-12-3 13:16:7] Current window size: 2
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:7] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Updating timeout interval: 3175
[INFO][2020-12-3 13:16:7] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Updating timeout interval: 3025
[INFO][2020-12-3 13:16:7] All ACKs received

[INFO][2020-12-3 13:16:7] Current window size: 4
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 2788
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 2513
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 2226
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 1941
[INFO][2020-12-3 13:16:8] All ACKs received

[INFO][2020-12-3 13:16:8] Current window size: 8
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 1672
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 1415
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 1222
[INFO][2020-12-3 13:16:8] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:16:8] Updating timeout interval: 1131
[INFO][2020-12-3 13:16:9] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Updating timeout interval: 1110
[INFO][2020-12-3 13:16:9] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Updating timeout interval: 1138
[INFO][2020-12-3 13:16:9] RTT (1138) >= Timeout Interval (=1138), packet loss event detected
[INFO][2020-12-3 13:16:9] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:16:9] Updating timeout interval: 1537
[INFO][2020-12-3 13:16:9] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Updating timeout interval: 1694
[INFO][2020-12-3 13:16:9] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Updating timeout interval: 1709
[INFO][2020-12-3 13:16:9] All ACKs received

[INFO][2020-12-3 13:16:9] Current window size: 9
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1434
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1250
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1160
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1140
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1168
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1225
[INFO][2020-12-3 13:16:10] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1305
[INFO][2020-12-3 13:16:10] RTT (1305) >= Timeout Interval (=1305), packet loss event detected
[INFO][2020-12-3 13:16:10] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:16:10] Updating timeout interval: 1790
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1954
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1966
[INFO][2020-12-3 13:16:11] All ACKs received

[INFO][2020-12-3 13:16:11] Current window size: 10
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1642
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1414
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1292
[INFO][2020-12-3 13:16:11] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:16:11] Updating timeout interval: 1247
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 1255
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 1299
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 1367
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 1454
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 1598
[INFO][2020-12-3 13:16:12] RTT (1598) >= Timeout Interval (=1598), packet loss event detected
[INFO][2020-12-3 13:16:12] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:16:12] Updating timeout interval: 2212
[INFO][2020-12-3 13:16:12] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Updating timeout interval: 2452
[INFO][2020-12-3 13:16:12] All ACKs received

[INFO][2020-12-3 13:16:12] Current window size: 10
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 2176
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1906
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1648
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1433
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1325
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1291
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1310
[INFO][2020-12-3 13:16:13] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:16:13] Updating timeout interval: 1361
[INFO][2020-12-3 13:16:14] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Updating timeout interval: 1490
[INFO][2020-12-3 13:16:14] RTT (1490) >= Timeout Interval (=1490), packet loss event detected
[INFO][2020-12-3 13:16:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:16:14] Updating timeout interval: 1979
[INFO][2020-12-3 13:16:14] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Updating timeout interval: 2314
[INFO][2020-12-3 13:16:14] All ACKs received

[INFO][2020-12-3 13:16:14] Current window size: 10
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 2105
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1883
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1658
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1440
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1313
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1268
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1281
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1334
[INFO][2020-12-3 13:16:15] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1411
[INFO][2020-12-3 13:16:15] RTT (1411) >= Timeout Interval (=1411), packet loss event detected
[INFO][2020-12-3 13:16:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:16:15] Updating timeout interval: 1838
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 2202
[INFO][2020-12-3 13:16:16] All ACKs received

[INFO][2020-12-3 13:16:16] Current window size: 10
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 1984
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 1759
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 1534
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 1369
[INFO][2020-12-3 13:16:16] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:16:16] Updating timeout interval: 1294
[INFO][2020-12-3 13:16:17] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Updating timeout interval: 1285
[INFO][2020-12-3 13:16:17] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Updating timeout interval: 1320
[INFO][2020-12-3 13:16:17] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Updating timeout interval: 1384
[INFO][2020-12-3 13:16:17] RTT (1384) >= Timeout Interval (=1384), packet loss event detected
[INFO][2020-12-3 13:16:17] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:16:17] Updating timeout interval: 1792
[INFO][2020-12-3 13:16:17] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Updating timeout interval: 2123
[INFO][2020-12-3 13:16:17] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Updating timeout interval: 2240
[INFO][2020-12-3 13:16:17] All ACKs received

[INFO][2020-12-3 13:16:17] Current window size: 11
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1915
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1622
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1448
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1368
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1353
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1383
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1441
[INFO][2020-12-3 13:16:18] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:16:18] Updating timeout interval: 1518
[INFO][2020-12-3 13:16:19] RTT (1518) >= Timeout Interval (=1518), packet loss event detected
[INFO][2020-12-3 13:16:19] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:16:19] Updating timeout interval: 2022
[INFO][2020-12-3 13:16:19] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Updating timeout interval: 2273
[INFO][2020-12-3 13:16:19] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Updating timeout interval: 2334
[INFO][2020-12-3 13:16:19] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Updating timeout interval: 2267
[INFO][2020-12-3 13:16:19] All ACKs received

[INFO][2020-12-3 13:16:19] Current window size: 12
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1885
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1630
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1489
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1429
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1426
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1459
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1519
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1594
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1680
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1827
[INFO][2020-12-3 13:16:20] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:16:20] Updating timeout interval: 1959
[INFO][2020-12-3 13:16:21] RTT (1959) >= Timeout Interval (=1959), packet loss event detected
[INFO][2020-12-3 13:16:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:16:21] Updating timeout interval: 2703
[INFO][2020-12-3 13:16:21] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Updating timeout interval: 3028
[INFO][2020-12-3 13:16:21] All ACKs received

[INFO][2020-12-3 13:16:21] Current window size: 11
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 2758
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 2476
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 2196
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1925
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1670
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1506
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1483
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1508
[INFO][2020-12-3 13:16:22] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:16:22] Updating timeout interval: 1561
[INFO][2020-12-3 13:16:23] RTT (1561) >= Timeout Interval (=1561), packet loss event detected
[INFO][2020-12-3 13:16:23] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:16:23] Updating timeout interval: 2032
[INFO][2020-12-3 13:16:23] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Updating timeout interval: 2403
[INFO][2020-12-3 13:16:23] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Updating timeout interval: 2537
[INFO][2020-12-3 13:16:23] All ACKs received

[INFO][2020-12-3 13:16:23] Current window size: 12
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 2197
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1890
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1618
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1469
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1405
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1398
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1432
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1494
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1575
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1667
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1766
[INFO][2020-12-3 13:16:24] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Updating timeout interval: 1867
[INFO][2020-12-3 13:16:24] All ACKs received

[INFO][2020-12-3 13:16:24] Current window size: 20
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:25] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:16:25] Updating timeout interval: 1751
[INFO][2020-12-3 13:16:25] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:16:25] Updating timeout interval: 1708
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 1714
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 1756
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 1821
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 1901
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 1991
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2084
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2179
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2275
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2369
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2460
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2549
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2635
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2717
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2800
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2880
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 2957
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 3030
[INFO][2020-12-3 13:16:26] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Updating timeout interval: 3100
[INFO][2020-12-3 13:16:26] All ACKs received

[INFO][2020-12-3 13:16:26] Current window size: 20
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 3226
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 3164
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 3023
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2838
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2627
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2409
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2195
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2072
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2031
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2044
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2097
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2174
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2267
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2367
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2524
[INFO][2020-12-3 13:16:28] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:16:28] Updating timeout interval: 2667
[INFO][2020-12-3 13:16:29] RTT (2667) >= Timeout Interval (=2667), packet loss event detected
[INFO][2020-12-3 13:16:29] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:16:29] Updating timeout interval: 3349
[INFO][2020-12-3 13:16:29] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:16:29] Updating timeout interval: 4211
[INFO][2020-12-3 13:16:29] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:16:29] Updating timeout interval: 4606
[INFO][2020-12-3 13:16:29] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:16:29] Updating timeout interval: 4690
[INFO][2020-12-3 13:16:29] All ACKs received

[INFO][2020-12-3 13:16:29] Completed Data Transfer
[INFO][2020-12-3 13:16:29] Sending EOT Packet
[INFO][2020-12-3 13:16:29] Terminating Transmitter...
[INFO][2020-12-3 13:16:58] Host found: 192.168.1.78
[INFO][2020-12-3 13:16:58] The network emulator's port is: 7002
[INFO][2020-12-3 13:16:58] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:16:58] Number of lines in the file are: 150
[INFO][2020-12-3 13:16:58] Current window size: 1
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:58] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Updating timeout interval: 2372
[INFO][2020-12-3 13:16:58] All ACKs received

[INFO][2020-12-3 13:16:58] Current window size: 2
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:58] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Updating timeout interval: 2555
[INFO][2020-12-3 13:16:58] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Updating timeout interval: 2557
[INFO][2020-12-3 13:16:58] All ACKs received

[INFO][2020-12-3 13:16:58] Current window size: 4
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:16:58] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:16:58] Updating timeout interval: 2395
[INFO][2020-12-3 13:16:59] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:16:59] Updating timeout interval: 2178
[INFO][2020-12-3 13:16:59] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:16:59] Updating timeout interval: 1937
[INFO][2020-12-3 13:17:0] RTT (1937) >= Timeout Interval (=1937), packet loss event detected
[INFO][2020-12-3 13:17:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:0] Updating timeout interval: 2926
[INFO][2020-12-3 13:17:0] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:17:0] Updating timeout interval: 2845
[INFO][2020-12-3 13:17:0] All ACKs received

[INFO][2020-12-3 13:17:0] Current window size: 4
[INFO][2020-12-3 13:17:0] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:0] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:0] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:0] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:1] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:17:1] Updating timeout interval: 2631
[INFO][2020-12-3 13:17:1] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:17:1] Updating timeout interval: 2337
[INFO][2020-12-3 13:17:1] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:17:1] Updating timeout interval: 2042
[INFO][2020-12-3 13:17:2] RTT (2042) >= Timeout Interval (=2042), packet loss event detected
[INFO][2020-12-3 13:17:2] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:2] Updating timeout interval: 3127
[INFO][2020-12-3 13:17:2] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:17:2] Updating timeout interval: 3032
[INFO][2020-12-3 13:17:2] All ACKs received

[INFO][2020-12-3 13:17:2] Current window size: 4
[INFO][2020-12-3 13:17:2] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:2] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:2] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:2] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:3] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:17:3] Updating timeout interval: 2759
[INFO][2020-12-3 13:17:3] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:17:3] Updating timeout interval: 2460
[INFO][2020-12-3 13:17:3] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:17:3] Updating timeout interval: 2156
[INFO][2020-12-3 13:17:5] RTT (2156) >= Timeout Interval (=2156), packet loss event detected
[INFO][2020-12-3 13:17:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:5] Updating timeout interval: 3342
[INFO][2020-12-3 13:17:5] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Updating timeout interval: 3187
[INFO][2020-12-3 13:17:5] All ACKs received

[INFO][2020-12-3 13:17:5] Current window size: 4
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:5] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Updating timeout interval: 2881
[INFO][2020-12-3 13:17:5] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Updating timeout interval: 2556
[INFO][2020-12-3 13:17:5] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Updating timeout interval: 2231
[INFO][2020-12-3 13:17:5] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Updating timeout interval: 1921
[INFO][2020-12-3 13:17:5] All ACKs received

[INFO][2020-12-3 13:17:5] Current window size: 8
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1621
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1349
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1199
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1136
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1134
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1172
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1238
[INFO][2020-12-3 13:17:6] RTT (1238) >= Timeout Interval (=1238), packet loss event detected
[INFO][2020-12-3 13:17:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1699
[INFO][2020-12-3 13:17:6] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Updating timeout interval: 1896
[INFO][2020-12-3 13:17:6] All ACKs received

[INFO][2020-12-3 13:17:6] Current window size: 8
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1678
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1457
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1244
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1185
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1183
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1221
[INFO][2020-12-3 13:17:7] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:17:7] Updating timeout interval: 1287
[INFO][2020-12-3 13:17:8] RTT (1287) >= Timeout Interval (=1287), packet loss event detected
[INFO][2020-12-3 13:17:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:8] Updating timeout interval: 1743
[INFO][2020-12-3 13:17:8] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Updating timeout interval: 1971
[INFO][2020-12-3 13:17:8] All ACKs received

[INFO][2020-12-3 13:17:8] Current window size: 8
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:8] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Updating timeout interval: 1794
[INFO][2020-12-3 13:17:8] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Updating timeout interval: 1595
[INFO][2020-12-3 13:17:8] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:17:8] Updating timeout interval: 1388
[INFO][2020-12-3 13:17:9] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Updating timeout interval: 1205
[INFO][2020-12-3 13:17:9] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Updating timeout interval: 1120
[INFO][2020-12-3 13:17:9] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Updating timeout interval: 1105
[INFO][2020-12-3 13:17:9] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Updating timeout interval: 1139
[INFO][2020-12-3 13:17:9] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Updating timeout interval: 1202
[INFO][2020-12-3 13:17:9] All ACKs received

[INFO][2020-12-3 13:17:9] Current window size: 16
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1334
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1461
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1582
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1701
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1814
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 1920
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2020
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2117
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2211
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2302
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2390
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2471
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2553
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2631
[INFO][2020-12-3 13:17:10] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:17:10] Updating timeout interval: 2706
[INFO][2020-12-3 13:17:11] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Updating timeout interval: 2782
[INFO][2020-12-3 13:17:11] All ACKs received

[INFO][2020-12-3 13:17:11] Current window size: 20
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2611
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2415
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2204
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1997
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1865
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1820
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1832
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1880
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 1953
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2045
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2144
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2250
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2359
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2466
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2571
[INFO][2020-12-3 13:17:12] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:17:12] Updating timeout interval: 2673
[INFO][2020-12-3 13:17:13] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:17:13] Updating timeout interval: 2768
[INFO][2020-12-3 13:17:13] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:17:13] Updating timeout interval: 2861
[INFO][2020-12-3 13:17:13] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:17:13] Updating timeout interval: 2951
[INFO][2020-12-3 13:17:13] RTT (2951) >= Timeout Interval (=2951), packet loss event detected
[INFO][2020-12-3 13:17:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:13] Updating timeout interval: 3820
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 4712
[INFO][2020-12-3 13:17:14] All ACKs received

[INFO][2020-12-3 13:17:14] Current window size: 11
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 4765
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 4630
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 4379
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 4058
[INFO][2020-12-3 13:17:14] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:17:14] Updating timeout interval: 3705
[INFO][2020-12-3 13:17:15] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:17:15] Updating timeout interval: 3342
[INFO][2020-12-3 13:17:15] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:17:15] Updating timeout interval: 2987
[INFO][2020-12-3 13:17:15] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:17:15] Updating timeout interval: 2572
[INFO][2020-12-3 13:17:15] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:17:15] Updating timeout interval: 2224
[INFO][2020-12-3 13:17:16] RTT (2224) >= Timeout Interval (=2224), packet loss event detected
[INFO][2020-12-3 13:17:16] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:17:16] Updating timeout interval: 3021
[INFO][2020-12-3 13:17:16] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Updating timeout interval: 3432
[INFO][2020-12-3 13:17:16] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Updating timeout interval: 3559
[INFO][2020-12-3 13:17:16] All ACKs received

[INFO][2020-12-3 13:17:16] Current window size: 12
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 3180
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 2813
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 2465
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 2146
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1874
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1720
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1651
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1643
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1675
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1735
[INFO][2020-12-3 13:17:17] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:17:17] Updating timeout interval: 1815
[INFO][2020-12-3 13:17:18] RTT (1815) >= Timeout Interval (=1815), packet loss event detected
[INFO][2020-12-3 13:17:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:18] Updating timeout interval: 2377
[INFO][2020-12-3 13:17:18] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Updating timeout interval: 2850
[INFO][2020-12-3 13:17:18] All ACKs received

[INFO][2020-12-3 13:17:18] Current window size: 11
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:18] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 2661
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 2432
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 2190
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1945
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1709
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1532
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1453
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1494
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1563
[INFO][2020-12-3 13:17:19] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:17:19] Updating timeout interval: 1648
[INFO][2020-12-3 13:17:20] RTT (1648) >= Timeout Interval (=1648), packet loss event detected
[INFO][2020-12-3 13:17:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:20] Updating timeout interval: 2137
[INFO][2020-12-3 13:17:20] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Updating timeout interval: 2588
[INFO][2020-12-3 13:17:20] All ACKs received

[INFO][2020-12-3 13:17:20] Current window size: 11
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:20] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:17:20] Updating timeout interval: 2416
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 2208
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1982
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1757
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1536
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1422
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1386
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1400
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1454
[INFO][2020-12-3 13:17:21] RTT (1454) >= Timeout Interval (=1454), packet loss event detected
[INFO][2020-12-3 13:17:21] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:17:21] Updating timeout interval: 1853
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 2243
[INFO][2020-12-3 13:17:21] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:17:21] Updating timeout interval: 2393
[INFO][2020-12-3 13:17:22] All ACKs received

[INFO][2020-12-3 13:17:22] Current window size: 12
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 2068
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 1771
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 1550
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 1435
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 1394
[INFO][2020-12-3 13:17:22] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:17:22] Updating timeout interval: 1405
[INFO][2020-12-3 13:17:23] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:17:23] Updating timeout interval: 1453
[INFO][2020-12-3 13:17:23] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:17:23] Updating timeout interval: 1575
[INFO][2020-12-3 13:17:23] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:17:23] Updating timeout interval: 1695
[INFO][2020-12-3 13:17:23] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:17:23] Updating timeout interval: 1814
[INFO][2020-12-3 13:17:23] RTT (1814) >= Timeout Interval (=1814), packet loss event detected
[INFO][2020-12-3 13:17:23] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:17:23] Updating timeout interval: 2452
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 2765
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 2847
[INFO][2020-12-3 13:17:24] All ACKs received

[INFO][2020-12-3 13:17:24] Current window size: 12
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 2484
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 2150
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 1845
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 1611
[INFO][2020-12-3 13:17:24] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:17:24] Updating timeout interval: 1488
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 1442
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 1449
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 1493
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 1564
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 1710
[INFO][2020-12-3 13:17:25] RTT (1710) >= Timeout Interval (=1710), packet loss event detected
[INFO][2020-12-3 13:17:25] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:17:25] Updating timeout interval: 2272
[INFO][2020-12-3 13:17:25] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:17:25] Updating timeout interval: 2625
[INFO][2020-12-3 13:17:26] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:17:26] Updating timeout interval: 2739
[INFO][2020-12-3 13:17:26] All ACKs received

[INFO][2020-12-3 13:17:26] Current window size: 12
[INFO][2020-12-3 13:17:26] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:26] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:26] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:17:26] Updating timeout interval: 2773
[INFO][2020-12-3 13:17:26] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:17:26] Updating timeout interval: 2677
[INFO][2020-12-3 13:17:26] All ACKs received

[INFO][2020-12-3 13:17:26] Completed Data Transfer
[INFO][2020-12-3 13:17:26] Sending EOT Packet
[INFO][2020-12-3 13:17:26] Terminating Transmitter...
[INFO][2020-12-3 13:17:45] Host found: 192.168.1.78
[INFO][2020-12-3 13:17:45] The network emulator's port is: 7002
[INFO][2020-12-3 13:17:45] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:17:45] Number of lines in the file are: 150
[INFO][2020-12-3 13:17:45] Current window size: 1
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:45] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Updating timeout interval: 2358
[INFO][2020-12-3 13:17:45] All ACKs received

[INFO][2020-12-3 13:17:45] Current window size: 2
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:45] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Updating timeout interval: 2542
[INFO][2020-12-3 13:17:45] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Updating timeout interval: 2548
[INFO][2020-12-3 13:17:45] All ACKs received

[INFO][2020-12-3 13:17:45] Current window size: 4
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 2431
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 2240
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 2010
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 1767
[INFO][2020-12-3 13:17:46] All ACKs received

[INFO][2020-12-3 13:17:46] Current window size: 8
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 1549
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 1331
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 1157
[INFO][2020-12-3 13:17:46] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:17:46] Updating timeout interval: 1077
[INFO][2020-12-3 13:17:47] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Updating timeout interval: 1067
[INFO][2020-12-3 13:17:47] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Updating timeout interval: 1102
[INFO][2020-12-3 13:17:47] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Updating timeout interval: 1169
[INFO][2020-12-3 13:17:47] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Updating timeout interval: 1252
[INFO][2020-12-3 13:17:47] All ACKs received

[INFO][2020-12-3 13:17:47] Current window size: 16
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:47] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1378
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1499
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1618
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1731
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1837
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 1941
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2038
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2132
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2219
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2302
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2386
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2467
[INFO][2020-12-3 13:17:48] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:17:48] Updating timeout interval: 2545
[INFO][2020-12-3 13:17:49] RTT (2545) >= Timeout Interval (=2545), packet loss event detected
[INFO][2020-12-3 13:17:49] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:17:49] Updating timeout interval: 3534
[INFO][2020-12-3 13:17:50] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Updating timeout interval: 3862
[INFO][2020-12-3 13:17:50] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Updating timeout interval: 3922
[INFO][2020-12-3 13:17:50] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Updating timeout interval: 3808
[INFO][2020-12-3 13:17:50] All ACKs received

[INFO][2020-12-3 13:17:50] Current window size: 13
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:50] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Updating timeout interval: 3324
[INFO][2020-12-3 13:17:50] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:17:50] Updating timeout interval: 2887
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 2454
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 2081
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1847
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1723
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1672
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1678
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1720
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1785
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1865
[INFO][2020-12-3 13:17:51] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:17:51] Updating timeout interval: 1956
[INFO][2020-12-3 13:17:52] RTT (1956) >= Timeout Interval (=1956), packet loss event detected
[INFO][2020-12-3 13:17:52] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:52] Updating timeout interval: 2570
[INFO][2020-12-3 13:17:54] RTT (2570) >= Timeout Interval (=2570), packet loss event detected
[INFO][2020-12-3 13:17:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:54] Updating timeout interval: 3568
[INFO][2020-12-3 13:17:54] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Updating timeout interval: 3991
[INFO][2020-12-3 13:17:54] All ACKs received

[INFO][2020-12-3 13:17:54] Current window size: 6
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:54] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:55] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:17:55] Updating timeout interval: 3947
[INFO][2020-12-3 13:17:55] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:17:55] Updating timeout interval: 3767
[INFO][2020-12-3 13:17:55] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:17:55] Updating timeout interval: 3501
[INFO][2020-12-3 13:17:55] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:17:55] Updating timeout interval: 3190
[INFO][2020-12-3 13:17:55] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:17:55] Updating timeout interval: 2865
[INFO][2020-12-3 13:17:57] RTT (2865) >= Timeout Interval (=2865), packet loss event detected
[INFO][2020-12-3 13:17:57] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:17:57] Updating timeout interval: 4353
[INFO][2020-12-3 13:17:57] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Updating timeout interval: 4306
[INFO][2020-12-3 13:17:57] All ACKs received

[INFO][2020-12-3 13:17:57] Current window size: 6
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:17:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:17:58] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:17:58] Updating timeout interval: 3940
[INFO][2020-12-3 13:17:58] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:17:58] Updating timeout interval: 3550
[INFO][2020-12-3 13:17:58] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:17:58] Updating timeout interval: 3155
[INFO][2020-12-3 13:17:58] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:17:58] Updating timeout interval: 2772
[INFO][2020-12-3 13:17:58] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:17:58] Updating timeout interval: 2405
[INFO][2020-12-3 13:18:0] RTT (2405) >= Timeout Interval (=2405), packet loss event detected
[INFO][2020-12-3 13:18:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:18:0] Updating timeout interval: 3639
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 3604
[INFO][2020-12-3 13:18:0] All ACKs received

[INFO][2020-12-3 13:18:0] Current window size: 6
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 3282
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 2935
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 2589
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 2257
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 1943
[INFO][2020-12-3 13:18:0] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Updating timeout interval: 1654
[INFO][2020-12-3 13:18:0] All ACKs received

[INFO][2020-12-3 13:18:0] Current window size: 12
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1438
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1328
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1291
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1307
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1359
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1431
[INFO][2020-12-3 13:18:1] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:18:1] Updating timeout interval: 1518
[INFO][2020-12-3 13:18:2] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:18:2] Updating timeout interval: 1612
[INFO][2020-12-3 13:18:2] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:18:2] Updating timeout interval: 1712
[INFO][2020-12-3 13:18:2] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:18:2] Updating timeout interval: 1811
[INFO][2020-12-3 13:18:2] RTT (1811) >= Timeout Interval (=1811), packet loss event detected
[INFO][2020-12-3 13:18:2] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:18:2] Updating timeout interval: 2483
[INFO][2020-12-3 13:18:2] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:18:2] Updating timeout interval: 2756
[INFO][2020-12-3 13:18:2] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:18:2] Updating timeout interval: 2813
[INFO][2020-12-3 13:18:2] All ACKs received

[INFO][2020-12-3 13:18:2] Current window size: 12
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:3] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Updating timeout interval: 2402
[INFO][2020-12-3 13:18:3] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Updating timeout interval: 2036
[INFO][2020-12-3 13:18:3] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Updating timeout interval: 1746
[INFO][2020-12-3 13:18:3] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Updating timeout interval: 1583
[INFO][2020-12-3 13:18:3] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:18:3] Updating timeout interval: 1510
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1502
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1534
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1594
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1673
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1763
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 1860
[INFO][2020-12-3 13:18:4] RTT (1860) >= Timeout Interval (=1860), packet loss event detected
[INFO][2020-12-3 13:18:4] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:18:4] Updating timeout interval: 2498
[INFO][2020-12-3 13:18:4] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Updating timeout interval: 2901
[INFO][2020-12-3 13:18:4] All ACKs received

[INFO][2020-12-3 13:18:4] Current window size: 11
[INFO][2020-12-3 13:18:4] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:4] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 2678
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 2424
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 2160
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 1898
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 1648
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 1501
[INFO][2020-12-3 13:18:5] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:18:5] Updating timeout interval: 1440
[INFO][2020-12-3 13:18:6] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Updating timeout interval: 1436
[INFO][2020-12-3 13:18:6] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Updating timeout interval: 1477
[INFO][2020-12-3 13:18:6] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Updating timeout interval: 1546
[INFO][2020-12-3 13:18:6] RTT (1546) >= Timeout Interval (=1546), packet loss event detected
[INFO][2020-12-3 13:18:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:18:6] Updating timeout interval: 1983
[INFO][2020-12-3 13:18:6] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Updating timeout interval: 2428
[INFO][2020-12-3 13:18:6] All ACKs received

[INFO][2020-12-3 13:18:6] Current window size: 11
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 2254
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 2046
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1828
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1611
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1437
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1357
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1343
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1378
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1441
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1524
[INFO][2020-12-3 13:18:7] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Updating timeout interval: 1622
[INFO][2020-12-3 13:18:7] All ACKs received

[INFO][2020-12-3 13:18:7] Current window size: 20
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 1632
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 1677
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 1746
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 1830
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 1921
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2018
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2113
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2210
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2309
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2405
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2499
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2590
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2678
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2818
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 2938
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 3037
[INFO][2020-12-3 13:18:9] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:18:9] Updating timeout interval: 3128
[INFO][2020-12-3 13:18:10] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:18:10] Updating timeout interval: 3266
[INFO][2020-12-3 13:18:11] RTT (3266) >= Timeout Interval (=3266), packet loss event detected
[INFO][2020-12-3 13:18:11] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:18:11] Updating timeout interval: 4409
[INFO][2020-12-3 13:18:11] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Updating timeout interval: 5000
[INFO][2020-12-3 13:18:11] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Updating timeout interval: 5000
[INFO][2020-12-3 13:18:11] All ACKs received

[INFO][2020-12-3 13:18:11] Current window size: 12
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 5000
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 4603
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 4177
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 3750
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 3340
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 2950
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 2590
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 2263
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 1992
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 1844
[INFO][2020-12-3 13:18:12] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:18:12] Updating timeout interval: 1786
[INFO][2020-12-3 13:18:13] RTT (1786) >= Timeout Interval (=1786), packet loss event detected
[INFO][2020-12-3 13:18:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:18:13] Updating timeout interval: 2256
[INFO][2020-12-3 13:18:13] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Updating timeout interval: 2836
[INFO][2020-12-3 13:18:13] All ACKs received

[INFO][2020-12-3 13:18:13] Current window size: 11
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:18:13] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Updating timeout interval: 2780
[INFO][2020-12-3 13:18:13] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:18:13] Updating timeout interval: 2635
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 2397
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 2150
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1904
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1670
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1523
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1461
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1457
[INFO][2020-12-3 13:18:14] RTT (1457) >= Timeout Interval (=1457), packet loss event detected
[INFO][2020-12-3 13:18:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:18:14] Updating timeout interval: 1832
[INFO][2020-12-3 13:18:14] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:18:14] Updating timeout interval: 2296
[INFO][2020-12-3 13:18:14] All ACKs received

[INFO][2020-12-3 13:18:14] Completed Data Transfer
[INFO][2020-12-3 13:18:14] Sending EOT Packet
[INFO][2020-12-3 13:18:14] Terminating Transmitter...
[INFO][2020-12-3 13:19:3] Host found: 192.168.1.78
[INFO][2020-12-3 13:19:3] The network emulator's port is: 7002
[INFO][2020-12-3 13:19:3] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:19:3] Number of lines in the file are: 150
[INFO][2020-12-3 13:19:3] Current window size: 1
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:3] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Updating timeout interval: 2368
[INFO][2020-12-3 13:19:3] All ACKs received

[INFO][2020-12-3 13:19:3] Current window size: 2
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:3] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Updating timeout interval: 2552
[INFO][2020-12-3 13:19:3] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Updating timeout interval: 2554
[INFO][2020-12-3 13:19:3] All ACKs received

[INFO][2020-12-3 13:19:3] Current window size: 4
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 2434
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 2247
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 2024
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1784
[INFO][2020-12-3 13:19:4] All ACKs received

[INFO][2020-12-3 13:19:4] Current window size: 8
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1559
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1334
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1164
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1085
[INFO][2020-12-3 13:19:4] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:19:4] Updating timeout interval: 1075
[INFO][2020-12-3 13:19:5] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Updating timeout interval: 1111
[INFO][2020-12-3 13:19:5] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Updating timeout interval: 1179
[INFO][2020-12-3 13:19:5] RTT (1179) >= Timeout Interval (=1179), packet loss event detected
[INFO][2020-12-3 13:19:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:5] Updating timeout interval: 1587
[INFO][2020-12-3 13:19:5] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Updating timeout interval: 1801
[INFO][2020-12-3 13:19:5] All ACKs received

[INFO][2020-12-3 13:19:5] Current window size: 8
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1604
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1358
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1215
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1158
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1159
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1200
[INFO][2020-12-3 13:19:6] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1269
[INFO][2020-12-3 13:19:6] RTT (1269) >= Timeout Interval (=1269), packet loss event detected
[INFO][2020-12-3 13:19:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:6] Updating timeout interval: 1706
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1945
[INFO][2020-12-3 13:19:7] All ACKs received

[INFO][2020-12-3 13:19:7] Current window size: 8
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1779
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1587
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1388
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1204
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1119
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1109
[INFO][2020-12-3 13:19:7] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:19:7] Updating timeout interval: 1152
[INFO][2020-12-3 13:19:8] RTT (1152) >= Timeout Interval (=1152), packet loss event detected
[INFO][2020-12-3 13:19:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1512
[INFO][2020-12-3 13:19:8] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1734
[INFO][2020-12-3 13:19:8] All ACKs received

[INFO][2020-12-3 13:19:8] Current window size: 8
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:8] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1599
[INFO][2020-12-3 13:19:8] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1433
[INFO][2020-12-3 13:19:8] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1256
[INFO][2020-12-3 13:19:8] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:19:8] Updating timeout interval: 1114
[INFO][2020-12-3 13:19:9] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Updating timeout interval: 1059
[INFO][2020-12-3 13:19:9] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Updating timeout interval: 1065
[INFO][2020-12-3 13:19:9] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Updating timeout interval: 1116
[INFO][2020-12-3 13:19:9] RTT (1116) >= Timeout Interval (=1116), packet loss event detected
[INFO][2020-12-3 13:19:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:9] Updating timeout interval: 1457
[INFO][2020-12-3 13:19:9] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Updating timeout interval: 1721
[INFO][2020-12-3 13:19:9] All ACKs received

[INFO][2020-12-3 13:19:9] Current window size: 8
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1565
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1386
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1203
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1092
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1113
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1171
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1249
[INFO][2020-12-3 13:19:10] RTT (1249) >= Timeout Interval (=1249), packet loss event detected
[INFO][2020-12-3 13:19:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1676
[INFO][2020-12-3 13:19:10] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Updating timeout interval: 1927
[INFO][2020-12-3 13:19:10] All ACKs received

[INFO][2020-12-3 13:19:10] Current window size: 8
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1740
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1539
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1334
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1181
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1118
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1117
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1160
[INFO][2020-12-3 13:19:11] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Updating timeout interval: 1232
[INFO][2020-12-3 13:19:11] All ACKs received

[INFO][2020-12-3 13:19:11] Current window size: 16
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:12] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:19:12] Updating timeout interval: 1315
[INFO][2020-12-3 13:19:12] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:19:12] Updating timeout interval: 1413
[INFO][2020-12-3 13:19:12] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:19:12] Updating timeout interval: 1518
[INFO][2020-12-3 13:19:12] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:19:12] Updating timeout interval: 1622
[INFO][2020-12-3 13:19:12] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:19:12] Updating timeout interval: 1728
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 1832
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 1934
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2033
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2129
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2218
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2309
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2392
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2472
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2549
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2626
[INFO][2020-12-3 13:19:13] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Updating timeout interval: 2700
[INFO][2020-12-3 13:19:13] All ACKs received

[INFO][2020-12-3 13:19:13] Current window size: 20
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:14] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:19:14] Updating timeout interval: 2531
[INFO][2020-12-3 13:19:14] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:19:14] Updating timeout interval: 2337
[INFO][2020-12-3 13:19:14] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:19:14] Updating timeout interval: 2132
[INFO][2020-12-3 13:19:14] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:19:14] Updating timeout interval: 1931
[INFO][2020-12-3 13:19:14] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:19:14] Updating timeout interval: 1820
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 1788
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 1809
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 1921
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2036
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2154
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2271
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2382
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2491
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2593
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2693
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2790
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2880
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 2967
[INFO][2020-12-3 13:19:15] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:19:15] Updating timeout interval: 3050
[INFO][2020-12-3 13:19:16] RTT (3050) >= Timeout Interval (=3050), packet loss event detected
[INFO][2020-12-3 13:19:16] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:16] Updating timeout interval: 3971
[INFO][2020-12-3 13:19:16] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Updating timeout interval: 4866
[INFO][2020-12-3 13:19:16] All ACKs received

[INFO][2020-12-3 13:19:16] Current window size: 11
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:16] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 4846
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 4665
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 4383
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 4047
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 3686
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 3322
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 2970
[INFO][2020-12-3 13:19:17] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:19:17] Updating timeout interval: 2636
[INFO][2020-12-3 13:19:19] RTT (2636) >= Timeout Interval (=2636), packet loss event detected
[INFO][2020-12-3 13:19:19] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:19:19] Updating timeout interval: 3701
[INFO][2020-12-3 13:19:19] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Updating timeout interval: 3998
[INFO][2020-12-3 13:19:19] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Updating timeout interval: 4032
[INFO][2020-12-3 13:19:19] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Updating timeout interval: 3896
[INFO][2020-12-3 13:19:19] All ACKs received

[INFO][2020-12-3 13:19:19] Current window size: 12
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 3416
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 2934
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 2510
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 2142
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 1869
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 1719
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 1654
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 1646
[INFO][2020-12-3 13:19:20] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:19:20] Updating timeout interval: 1683
[INFO][2020-12-3 13:19:21] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:19:21] Updating timeout interval: 1747
[INFO][2020-12-3 13:19:21] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:19:21] Updating timeout interval: 1827
[INFO][2020-12-3 13:19:21] RTT (1827) >= Timeout Interval (=1827), packet loss event detected
[INFO][2020-12-3 13:19:21] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:21] Updating timeout interval: 2388
[INFO][2020-12-3 13:19:23] RTT (2388) >= Timeout Interval (=2388), packet loss event detected
[INFO][2020-12-3 13:19:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:23] Updating timeout interval: 3300
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 3709
[INFO][2020-12-3 13:19:24] All ACKs received

[INFO][2020-12-3 13:19:24] Current window size: 6
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 3632
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 3441
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 3141
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 2826
[INFO][2020-12-3 13:19:24] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:19:24] Updating timeout interval: 2506
[INFO][2020-12-3 13:19:26] RTT (2506) >= Timeout Interval (=2506), packet loss event detected
[INFO][2020-12-3 13:19:26] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:26] Updating timeout interval: 3720
[INFO][2020-12-3 13:19:26] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Updating timeout interval: 3786
[INFO][2020-12-3 13:19:26] All ACKs received

[INFO][2020-12-3 13:19:26] Current window size: 6
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:26] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 3499
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 3172
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 2831
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 2490
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 2164
[INFO][2020-12-3 13:19:27] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Updating timeout interval: 1859
[INFO][2020-12-3 13:19:27] All ACKs received

[INFO][2020-12-3 13:19:27] Current window size: 12
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1588
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1467
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1474
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1517
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1584
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1666
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1758
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1857
[INFO][2020-12-3 13:19:28] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:19:28] Updating timeout interval: 1958
[INFO][2020-12-3 13:19:29] RTT (1958) >= Timeout Interval (=1958), packet loss event detected
[INFO][2020-12-3 13:19:29] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:19:29] Updating timeout interval: 2688
[INFO][2020-12-3 13:19:29] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Updating timeout interval: 2949
[INFO][2020-12-3 13:19:29] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Updating timeout interval: 2991
[INFO][2020-12-3 13:19:29] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Updating timeout interval: 2892
[INFO][2020-12-3 13:19:29] All ACKs received

[INFO][2020-12-3 13:19:29] Current window size: 13
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:19:29] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 2447
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 2059
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1825
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1700
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1648
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1649
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1690
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1750
[INFO][2020-12-3 13:19:30] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:19:30] Updating timeout interval: 1829
[INFO][2020-12-3 13:19:31] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:19:31] Updating timeout interval: 1914
[INFO][2020-12-3 13:19:31] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:19:31] Updating timeout interval: 2005
[INFO][2020-12-3 13:19:31] RTT (2005) >= Timeout Interval (=2005), packet loss event detected
[INFO][2020-12-3 13:19:31] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:19:31] Updating timeout interval: 2715
[INFO][2020-12-3 13:19:31] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:19:31] Updating timeout interval: 3119
[INFO][2020-12-3 13:19:31] All ACKs received

[INFO][2020-12-3 13:19:31] Completed Data Transfer
[INFO][2020-12-3 13:19:31] Sending EOT Packet
[INFO][2020-12-3 13:19:31] Terminating Transmitter...
[INFO][2020-12-3 13:22:43] Host found: 192.168.1.78
[INFO][2020-12-3 13:22:43] The network emulator's port is: 50001
[INFO][2020-12-3 13:22:43] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:22:43] Number of lines in the file are: 150
[INFO][2020-12-3 13:22:43] Current window size: 1
[INFO][2020-12-3 13:22:43] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:43] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:22:43] Updating timeout interval: 2443
[INFO][2020-12-3 13:22:43] All ACKs received

[INFO][2020-12-3 13:22:43] Current window size: 2
[INFO][2020-12-3 13:22:43] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:43] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:43] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:22:43] Updating timeout interval: 2637
[INFO][2020-12-3 13:22:46] RTT (2637) >= Timeout Interval (=2637), packet loss event detected
[INFO][2020-12-3 13:22:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:22:46] Updating timeout interval: 4024
[INFO][2020-12-3 13:22:46] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Updating timeout interval: 3957
[INFO][2020-12-3 13:22:46] All ACKs received

[INFO][2020-12-3 13:22:46] Current window size: 2
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:46] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Updating timeout interval: 3785
[INFO][2020-12-3 13:22:46] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Updating timeout interval: 3530
[INFO][2020-12-3 13:22:46] All ACKs received

[INFO][2020-12-3 13:22:46] Current window size: 4
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 3193
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 2852
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 2517
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 2200
[INFO][2020-12-3 13:22:47] All ACKs received

[INFO][2020-12-3 13:22:47] Current window size: 8
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 1921
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 1657
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 1416
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 1197
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 1039
[INFO][2020-12-3 13:22:47] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:22:47] Updating timeout interval: 958
[INFO][2020-12-3 13:22:48] RTT (958) >= Timeout Interval (=958), packet loss event detected
[INFO][2020-12-3 13:22:48] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1303
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1444
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1464
[INFO][2020-12-3 13:22:48] All ACKs received

[INFO][2020-12-3 13:22:48] Current window size: 9
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1239
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1048
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 945
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 903
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 900
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 928
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 975
[INFO][2020-12-3 13:22:48] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:22:48] Updating timeout interval: 1032
[INFO][2020-12-3 13:22:49] RTT (1032) >= Timeout Interval (=1032), packet loss event detected
[INFO][2020-12-3 13:22:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:22:49] Updating timeout interval: 1402
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 1592
[INFO][2020-12-3 13:22:49] All ACKs received

[INFO][2020-12-3 13:22:49] Current window size: 9
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 1410
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 1230
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 1056
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 947
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 899
[INFO][2020-12-3 13:22:49] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:22:49] Updating timeout interval: 898
[INFO][2020-12-3 13:22:50] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Updating timeout interval: 929
[INFO][2020-12-3 13:22:50] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Updating timeout interval: 979
[INFO][2020-12-3 13:22:50] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Updating timeout interval: 1044
[INFO][2020-12-3 13:22:50] All ACKs received

[INFO][2020-12-3 13:22:50] Current window size: 18
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:50] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Updating timeout interval: 1161
[INFO][2020-12-3 13:22:50] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:22:50] Updating timeout interval: 1271
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1371
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1460
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1546
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1624
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1700
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1768
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1833
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1894
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 1951
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 2009
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 2100
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 2179
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 2245
[INFO][2020-12-3 13:22:51] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:22:51] Updating timeout interval: 2303
[INFO][2020-12-3 13:22:52] RTT (2303) >= Timeout Interval (=2303), packet loss event detected
[INFO][2020-12-3 13:22:52] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:22:52] Updating timeout interval: 3153
[INFO][2020-12-3 13:22:52] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Updating timeout interval: 3580
[INFO][2020-12-3 13:22:52] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Updating timeout interval: 3723
[INFO][2020-12-3 13:22:52] All ACKs received

[INFO][2020-12-3 13:22:52] Current window size: 12
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:52] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 3400
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 3070
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 2742
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 2428
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 2139
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1873
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1633
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1451
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1354
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1317
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1320
[INFO][2020-12-3 13:22:53] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Updating timeout interval: 1354
[INFO][2020-12-3 13:22:53] All ACKs received

[INFO][2020-12-3 13:22:53] Current window size: 20
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1301
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1297
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1329
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1384
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1454
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1531
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1614
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1699
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:22:54] Updating timeout interval: 1782
[INFO][2020-12-3 13:22:54] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 1862
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 1943
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2063
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2167
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2260
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2341
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2414
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2480
[INFO][2020-12-3 13:22:55] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:22:55] Updating timeout interval: 2542
[INFO][2020-12-3 13:22:56] RTT (2542) >= Timeout Interval (=2542), packet loss event detected
[INFO][2020-12-3 13:22:56] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:22:56] Updating timeout interval: 3373
[INFO][2020-12-3 13:22:56] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Updating timeout interval: 4000
[INFO][2020-12-3 13:22:56] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Updating timeout interval: 4259
[INFO][2020-12-3 13:22:56] All ACKs received

[INFO][2020-12-3 13:22:56] Current window size: 12
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:22:56] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:22:56] Updating timeout interval: 3979
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 3658
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 3319
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 2980
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 2651
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 2343
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 2059
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 1802
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 1599
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 1490
[INFO][2020-12-3 13:22:57] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:22:57] Updating timeout interval: 1445
[INFO][2020-12-3 13:22:57] RTT (1445) >= Timeout Interval (=1445), packet loss event detected
[INFO][2020-12-3 13:22:57] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:22:57] Updating timeout interval: 1814
[INFO][2020-12-3 13:22:59] RTT (1814) >= Timeout Interval (=1814), packet loss event detected
[INFO][2020-12-3 13:22:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:22:59] Updating timeout interval: 2414
[INFO][2020-12-3 13:22:59] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Updating timeout interval: 2853
[INFO][2020-12-3 13:22:59] All ACKs received

[INFO][2020-12-3 13:22:59] Current window size: 6
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:22:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:0] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:23:0] Updating timeout interval: 2875
[INFO][2020-12-3 13:23:0] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:23:0] Updating timeout interval: 2777
[INFO][2020-12-3 13:23:0] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:23:0] Updating timeout interval: 2570
[INFO][2020-12-3 13:23:0] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:23:0] Updating timeout interval: 2334
[INFO][2020-12-3 13:23:2] RTT (2334) >= Timeout Interval (=2334), packet loss event detected
[INFO][2020-12-3 13:23:2] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:23:2] Updating timeout interval: 3519
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 3488
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 3332
[INFO][2020-12-3 13:23:2] All ACKs received

[INFO][2020-12-3 13:23:2] Current window size: 7
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 2982
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 2636
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 2304
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 1997
[INFO][2020-12-3 13:23:2] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:23:2] Updating timeout interval: 1714
[INFO][2020-12-3 13:23:3] RTT (1714) >= Timeout Interval (=1714), packet loss event detected
[INFO][2020-12-3 13:23:3] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:23:3] Updating timeout interval: 2535
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 2556
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 2461
[INFO][2020-12-3 13:23:4] All ACKs received

[INFO][2020-12-3 13:23:4] Current window size: 8
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 2147
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1854
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1585
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1338
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1215
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1160
[INFO][2020-12-3 13:23:4] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:23:4] Updating timeout interval: 1153
[INFO][2020-12-3 13:23:5] RTT (1153) >= Timeout Interval (=1153), packet loss event detected
[INFO][2020-12-3 13:23:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1570
[INFO][2020-12-3 13:23:5] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1777
[INFO][2020-12-3 13:23:5] All ACKs received

[INFO][2020-12-3 13:23:5] Current window size: 8
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:5] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1614
[INFO][2020-12-3 13:23:5] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1436
[INFO][2020-12-3 13:23:5] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1257
[INFO][2020-12-3 13:23:5] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:23:5] Updating timeout interval: 1080
[INFO][2020-12-3 13:23:6] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Updating timeout interval: 989
[INFO][2020-12-3 13:23:6] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Updating timeout interval: 959
[INFO][2020-12-3 13:23:6] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Updating timeout interval: 973
[INFO][2020-12-3 13:23:6] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Updating timeout interval: 1014
[INFO][2020-12-3 13:23:6] All ACKs received

[INFO][2020-12-3 13:23:6] Current window size: 16
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:6] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:23:6] Updating timeout interval: 1106
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1201
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1294
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1385
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1477
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1567
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1654
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1734
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1811
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1885
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 1956
[INFO][2020-12-3 13:23:7] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:23:7] Updating timeout interval: 2023
[INFO][2020-12-3 13:23:8] RTT (2023) >= Timeout Interval (=2023), packet loss event detected
[INFO][2020-12-3 13:23:8] Retransmitting 4 unACKs...
[INFO][2020-12-3 13:23:8] Updating timeout interval: 2791
[INFO][2020-12-3 13:23:8] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Updating timeout interval: 3049
[INFO][2020-12-3 13:23:8] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Updating timeout interval: 3095
[INFO][2020-12-3 13:23:8] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Updating timeout interval: 3006
[INFO][2020-12-3 13:23:8] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Updating timeout interval: 2828
[INFO][2020-12-3 13:23:8] All ACKs received

[INFO][2020-12-3 13:23:8] Current window size: 14
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:23:8] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:23:8] Updating timeout interval: 2583
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 2321
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 2056
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 1800
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 1560
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 1338
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 1194
[INFO][2020-12-3 13:23:9] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:23:9] Updating timeout interval: 1127
[INFO][2020-12-3 13:23:9] All ACKs received

[INFO][2020-12-3 13:23:9] Completed Data Transfer
[INFO][2020-12-3 13:23:9] Sending EOT Packet
[INFO][2020-12-3 13:23:9] Terminating Transmitter...
[INFO][2020-12-3 13:36:47] Host found: 192.168.1.78
[INFO][2020-12-3 13:36:47] The network emulator's port is: 50001
[INFO][2020-12-3 13:36:47] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:36:47] Number of lines in the file are: 150
[INFO][2020-12-3 13:36:47] Current window size: 1
[INFO][2020-12-3 13:36:47] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:36:47] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:36:49] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 13:36:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:36:49] Updating timeout interval: 2749
[INFO][2020-12-3 13:36:51] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 13:36:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:36:51] Updating timeout interval: 3964
[INFO][2020-12-3 13:36:55] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 13:36:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:36:55] Updating timeout interval: 5000
[INFO][2020-12-3 13:37:0] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:37:0] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:37:0] Updating timeout interval: 5000
[INFO][2020-12-3 13:37:5] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:37:5] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:37:5] Updating timeout interval: 5000
[INFO][2020-12-3 13:37:10] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:37:10] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:37:10] Updating timeout interval: 5000
[INFO][2020-12-3 13:37:15] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:37:15] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:37:15] Updating timeout interval: 5000
[INFO][2020-12-3 13:37:20] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:37:20] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:37:20] Updating timeout interval: 5000
[INFO][2020-12-3 13:49:37] Host found: 192.168.1.78
[INFO][2020-12-3 13:49:37] The network emulator's port is: 50001
[INFO][2020-12-3 13:49:37] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:49:37] Number of lines in the file are: 150
[INFO][2020-12-3 13:49:37] Current window size: 1
[INFO][2020-12-3 13:49:37] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:49:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:49:39] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 13:49:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:49:39] Updating timeout interval: 2749
[INFO][2020-12-3 13:49:42] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 13:49:42] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:49:42] Updating timeout interval: 3964
[INFO][2020-12-3 13:49:46] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 13:49:46] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:49:46] Updating timeout interval: 5000
[INFO][2020-12-3 13:49:51] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:49:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:49:51] Updating timeout interval: 5000
[INFO][2020-12-3 13:49:56] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:49:56] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:49:56] Updating timeout interval: 5000
[INFO][2020-12-3 13:50:1] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:50:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:50:1] Updating timeout interval: 5000
[INFO][2020-12-3 13:50:6] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:50:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:50:6] Updating timeout interval: 5000
[INFO][2020-12-3 13:51:4] Host found: 192.168.1.78
[INFO][2020-12-3 13:51:4] The network emulator's port is: 50001
[INFO][2020-12-3 13:51:4] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:51:4] Number of lines in the file are: 150
[INFO][2020-12-3 13:51:4] Current window size: 1
[INFO][2020-12-3 13:51:4] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:51:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:51:6] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 13:51:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:51:6] Updating timeout interval: 2749
[INFO][2020-12-3 13:51:6] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:51:6] Updating timeout interval: 3132
[INFO][2020-12-3 13:51:6] All ACKs received

[INFO][2020-12-3 13:51:6] Current window size: 1
[INFO][2020-12-3 13:51:6] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:51:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:51:9] RTT (3132) >= Timeout Interval (=3132), packet loss event detected
[INFO][2020-12-3 13:51:9] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:51:9] Updating timeout interval: 4735
[INFO][2020-12-3 13:51:14] RTT (4735) >= Timeout Interval (=4735), packet loss event detected
[INFO][2020-12-3 13:51:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:51:14] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:27] Host found: 192.168.1.78
[INFO][2020-12-3 13:54:27] The network emulator's port is: 50001
[INFO][2020-12-3 13:54:27] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 13:54:27] Number of lines in the file are: 150
[INFO][2020-12-3 13:54:27] Current window size: 1
[INFO][2020-12-3 13:54:27] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:27] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 13:54:27] Updating timeout interval: 2440
[INFO][2020-12-3 13:54:27] All ACKs received

[INFO][2020-12-3 13:54:27] Current window size: 2
[INFO][2020-12-3 13:54:27] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:27] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:30] RTT (2440) >= Timeout Interval (=2440), packet loss event detected
[INFO][2020-12-3 13:54:30] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:30] Updating timeout interval: 3606
[INFO][2020-12-3 13:54:34] RTT (3606) >= Timeout Interval (=3606), packet loss event detected
[INFO][2020-12-3 13:54:34] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:34] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 13:54:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:34] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 13:54:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:34] All ACKs received

[INFO][2020-12-3 13:54:34] Current window size: 2
[INFO][2020-12-3 13:54:34] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:34] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:39] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:54:39] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:39] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:39] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 13:54:39] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:39] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 13:54:39] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:39] All ACKs received

[INFO][2020-12-3 13:54:39] Current window size: 3
[INFO][2020-12-3 13:54:39] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:39] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:39] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:54:44] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] All ACKs received

[INFO][2020-12-3 13:54:44] Current window size: 4
[INFO][2020-12-3 13:54:44] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:44] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 13:54:44] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:54:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:54:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] All ACKs received

[INFO][2020-12-3 13:54:49] Current window size: 4
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 5000
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 4732
[INFO][2020-12-3 13:54:49] All ACKs received

[INFO][2020-12-3 13:54:49] Current window size: 8
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 4170
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 3667
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 3213
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 2812
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 2454
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 2138
[INFO][2020-12-3 13:54:49] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 13:54:49] Updating timeout interval: 1860
[INFO][2020-12-3 13:54:51] RTT (1860) >= Timeout Interval (=1860), packet loss event detected
[INFO][2020-12-3 13:54:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:54:51] Updating timeout interval: 2955
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 2777
[INFO][2020-12-3 13:54:51] All ACKs received

[INFO][2020-12-3 13:54:51] Current window size: 8
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 2479
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 2200
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 1944
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 1706
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 1493
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 1300
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 1127
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 978
[INFO][2020-12-3 13:54:51] All ACKs received

[INFO][2020-12-3 13:54:51] Current window size: 16
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 816
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 692
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 13:54:51] Updating timeout interval: 614
[INFO][2020-12-3 13:54:51] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 570
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 547
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 541
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 548
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 560
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 581
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 603
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 634
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 662
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 690
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 714
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 739
[INFO][2020-12-3 13:54:52] RTT (739) >= Timeout Interval (=739), packet loss event detected
[INFO][2020-12-3 13:54:52] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:54:52] Updating timeout interval: 979
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 1169
[INFO][2020-12-3 13:54:52] All ACKs received

[INFO][2020-12-3 13:54:52] Current window size: 11
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 1110
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 1032
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 946
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 855
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 764
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 676
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 594
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 530
[INFO][2020-12-3 13:54:52] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 13:54:52] Updating timeout interval: 501
[INFO][2020-12-3 13:54:52] RTT (501) >= Timeout Interval (=501), packet loss event detected
[INFO][2020-12-3 13:54:52] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:52] Updating timeout interval: 631
[INFO][2020-12-3 13:54:53] RTT (631) >= Timeout Interval (=631), packet loss event detected
[INFO][2020-12-3 13:54:53] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:53] Updating timeout interval: 842
[INFO][2020-12-3 13:54:53] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Updating timeout interval: 979
[INFO][2020-12-3 13:54:53] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Updating timeout interval: 1028
[INFO][2020-12-3 13:54:53] All ACKs received

[INFO][2020-12-3 13:54:53] Current window size: 7
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:54:53] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 13:54:53] Updating timeout interval: 957
[INFO][2020-12-3 13:54:54] RTT (957) >= Timeout Interval (=957), packet loss event detected
[INFO][2020-12-3 13:54:54] Retransmitting 6 unACKs...
[INFO][2020-12-3 13:54:54] Updating timeout interval: 1461
[INFO][2020-12-3 13:54:54] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 13:54:54] Updating timeout interval: 1373
[INFO][2020-12-3 13:54:54] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 13:54:54] Updating timeout interval: 1260
[INFO][2020-12-3 13:54:54] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 13:54:54] Updating timeout interval: 1136
[INFO][2020-12-3 13:54:55] RTT (1136) >= Timeout Interval (=1136), packet loss event detected
[INFO][2020-12-3 13:54:55] Retransmitting 3 unACKs...
[INFO][2020-12-3 13:54:55] Updating timeout interval: 1769
[INFO][2020-12-3 13:54:55] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 13:54:55] Updating timeout interval: 1672
[INFO][2020-12-3 13:54:57] RTT (1672) >= Timeout Interval (=1672), packet loss event detected
[INFO][2020-12-3 13:54:57] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:54:57] Updating timeout interval: 2656
[INFO][2020-12-3 13:54:57] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 13:54:57] Updating timeout interval: 2473
[INFO][2020-12-3 13:54:59] RTT (2473) >= Timeout Interval (=2473), packet loss event detected
[INFO][2020-12-3 13:54:59] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:54:59] Updating timeout interval: 3980
[INFO][2020-12-3 13:55:3] RTT (3980) >= Timeout Interval (=3980), packet loss event detected
[INFO][2020-12-3 13:55:3] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:3] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:8] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:8] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:13] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:13] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 13:55:13] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:13] All ACKs received

[INFO][2020-12-3 13:55:13] Current window size: 1
[INFO][2020-12-3 13:55:13] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:13] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 13:55:13] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:13] All ACKs received

[INFO][2020-12-3 13:55:13] Current window size: 2
[INFO][2020-12-3 13:55:13] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:13] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:13] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:14] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 13:55:14] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:18] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:18] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:19] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:19] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 13:55:19] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:19] All ACKs received

[INFO][2020-12-3 13:55:19] Current window size: 2
[INFO][2020-12-3 13:55:19] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:19] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:24] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:24] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:55:24] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:24] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:24] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:24] All ACKs received

[INFO][2020-12-3 13:55:24] Current window size: 3
[INFO][2020-12-3 13:55:24] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:24] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 13:55:24] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] All ACKs received

[INFO][2020-12-3 13:55:29] Current window size: 4
[INFO][2020-12-3 13:55:29] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:29] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:29] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 13:55:29] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 13:55:34] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] All ACKs received

[INFO][2020-12-3 13:55:34] Current window size: 4
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:34] All ACKs received

[INFO][2020-12-3 13:55:34] Current window size: 8
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 4574
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 4015
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 3501
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 3048
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 2647
[INFO][2020-12-3 13:55:34] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 13:55:34] Updating timeout interval: 2297
[INFO][2020-12-3 13:55:36] RTT (2297) >= Timeout Interval (=2297), packet loss event detected
[INFO][2020-12-3 13:55:36] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:55:36] Updating timeout interval: 3636
[INFO][2020-12-3 13:55:36] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 13:55:36] Updating timeout interval: 3419
[INFO][2020-12-3 13:55:40] RTT (3419) >= Timeout Interval (=3419), packet loss event detected
[INFO][2020-12-3 13:55:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:40] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:40] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:40] All ACKs received

[INFO][2020-12-3 13:55:40] Current window size: 5
[INFO][2020-12-3 13:55:40] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:40] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Updating timeout interval: 4595
[INFO][2020-12-3 13:55:40] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Updating timeout interval: 4101
[INFO][2020-12-3 13:55:40] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 13:55:40] Updating timeout interval: 3639
[INFO][2020-12-3 13:55:43] RTT (3639) >= Timeout Interval (=3639), packet loss event detected
[INFO][2020-12-3 13:55:43] Retransmitting 2 unACKs...
[INFO][2020-12-3 13:55:43] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:43] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Updating timeout interval: 5000
[INFO][2020-12-3 13:55:43] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Updating timeout interval: 4868
[INFO][2020-12-3 13:55:43] All ACKs received

[INFO][2020-12-3 13:55:43] Current window size: 6
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 4314
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 3804
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 3334
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 2909
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 2532
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 2198
[INFO][2020-12-3 13:55:44] All ACKs received

[INFO][2020-12-3 13:55:44] Current window size: 12
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1910
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1655
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1425
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1224
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1047
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 893
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 778
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 713
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 682
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 673
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 677
[INFO][2020-12-3 13:55:44] RTT (677) >= Timeout Interval (=677), packet loss event detected
[INFO][2020-12-3 13:55:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:44] Updating timeout interval: 860
[INFO][2020-12-3 13:55:44] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Updating timeout interval: 1075
[INFO][2020-12-3 13:55:44] All ACKs received

[INFO][2020-12-3 13:55:44] Current window size: 11
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 1016
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 934
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 827
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 728
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 636
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 613
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 612
[INFO][2020-12-3 13:55:45] RTT (612) >= Timeout Interval (=612), packet loss event detected
[INFO][2020-12-3 13:55:45] Retransmitting 4 unACKs...
[INFO][2020-12-3 13:55:45] Updating timeout interval: 789
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 922
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 966
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 953
[INFO][2020-12-3 13:55:45] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Updating timeout interval: 905
[INFO][2020-12-3 13:55:45] All ACKs received

[INFO][2020-12-3 13:55:45] Current window size: 13
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 13,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 780
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 705
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 665
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 650
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 652
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 663
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 684
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 709
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 740
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 771
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 802
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 834
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 13,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 862
[INFO][2020-12-3 13:55:46] All ACKs received

[INFO][2020-12-3 13:55:46] Current window size: 20
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 839
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 793
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 730
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 663
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 599
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 569
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 566
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 585
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 613
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 651
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 690
[INFO][2020-12-3 13:55:46] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 13:55:46] Updating timeout interval: 735
[INFO][2020-12-3 13:55:47] RTT (735) >= Timeout Interval (=735), packet loss event detected
[INFO][2020-12-3 13:55:47] Retransmitting 1 unACKs...
[INFO][2020-12-3 13:55:47] Updating timeout interval: 941
[INFO][2020-12-3 13:55:47] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 13:55:47] Updating timeout interval: 1171
[INFO][2020-12-3 13:55:47] All ACKs received

[INFO][2020-12-3 13:55:47] Completed Data Transfer
[INFO][2020-12-3 13:55:47] Sending EOT Packet
[INFO][2020-12-3 13:55:47] Terminating Transmitter...
[INFO][2020-12-3 23:29:6] Host found: 192.168.1.78
[INFO][2020-12-3 23:29:6] The network emulator's port is: 50001
[INFO][2020-12-3 23:29:6] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 23:29:6] Number of lines in the file are: 150
[INFO][2020-12-3 23:29:6] Current window size: 1
[INFO][2020-12-3 23:29:6] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:8] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 23:29:8] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:8] Updating timeout interval: 2749
[INFO][2020-12-3 23:29:11] RTT (2749) >= Timeout Interval (=2749), packet loss event detected
[INFO][2020-12-3 23:29:11] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:11] Updating timeout interval: 3964
[INFO][2020-12-3 23:29:14] RTT (3964) >= Timeout Interval (=3964), packet loss event detected
[INFO][2020-12-3 23:29:14] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:14] Updating timeout interval: 5000
[INFO][2020-12-3 23:29:30] Host found: 192.168.1.78
[INFO][2020-12-3 23:29:30] The network emulator's port is: 50001
[INFO][2020-12-3 23:29:30] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 23:29:30] Number of lines in the file are: 150
[INFO][2020-12-3 23:29:30] Current window size: 1
[INFO][2020-12-3 23:29:30] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:30] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 23:29:30] Updating timeout interval: 2444
[INFO][2020-12-3 23:29:30] All ACKs received

[INFO][2020-12-3 23:29:30] Current window size: 2
[INFO][2020-12-3 23:29:30] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:30] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:30] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:30] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 23:29:30] Updating timeout interval: 2631
[INFO][2020-12-3 23:29:33] RTT (2631) >= Timeout Interval (=2631), packet loss event detected
[INFO][2020-12-3 23:29:33] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:33] Updating timeout interval: 4013
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 3946
[INFO][2020-12-3 23:29:33] All ACKs received

[INFO][2020-12-3 23:29:33] Current window size: 2
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 3778
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 3527
[INFO][2020-12-3 23:29:33] All ACKs received

[INFO][2020-12-3 23:29:33] Current window size: 4
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 3200
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 2865
[INFO][2020-12-3 23:29:33] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 23:29:33] Updating timeout interval: 2533
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 2219
[INFO][2020-12-3 23:29:34] All ACKs received

[INFO][2020-12-3 23:29:34] Current window size: 8
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 1918
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 1645
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 1394
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 1169
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 1033
[INFO][2020-12-3 23:29:34] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 23:29:34] Updating timeout interval: 969
[INFO][2020-12-3 23:29:35] RTT (969) >= Timeout Interval (=969), packet loss event detected
[INFO][2020-12-3 23:29:35] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1315
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1503
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1566
[INFO][2020-12-3 23:29:35] All ACKs received

[INFO][2020-12-3 23:29:35] Current window size: 9
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1429
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1286
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1144
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1007
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 878
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 760
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 673
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 633
[INFO][2020-12-3 23:29:35] RTT (633) >= Timeout Interval (=633), packet loss event detected
[INFO][2020-12-3 23:29:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:35] Updating timeout interval: 825
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 1008
[INFO][2020-12-3 23:29:35] All ACKs received

[INFO][2020-12-3 23:29:35] Current window size: 9
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 977
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 919
[INFO][2020-12-3 23:29:35] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 23:29:35] Updating timeout interval: 849
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 767
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 684
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 604
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 527
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 472
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 447
[INFO][2020-12-3 23:29:36] All ACKs received

[INFO][2020-12-3 23:29:36] Current window size: 18
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 475
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 509
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 553
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 598
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 639
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 677
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 715
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 746
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 777
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 804
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 827
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 850
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 891
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 924
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 953
[INFO][2020-12-3 23:29:36] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 23:29:36] Updating timeout interval: 978
[INFO][2020-12-3 23:29:37] RTT (978) >= Timeout Interval (=978), packet loss event detected
[INFO][2020-12-3 23:29:37] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1324
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1533
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1609
[INFO][2020-12-3 23:29:37] All ACKs received

[INFO][2020-12-3 23:29:37] Current window size: 12
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1457
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1306
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1164
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 1030
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 903
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 787
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 682
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 620
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 587
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 576
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 583
[INFO][2020-12-3 23:29:37] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Updating timeout interval: 599
[INFO][2020-12-3 23:29:37] All ACKs received

[INFO][2020-12-3 23:29:37] Current window size: 20
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 610
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 631
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 657
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 688
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 724
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 757
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 790
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 824
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 859
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 890
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 922
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 972
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1014
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1052
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1082
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1112
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1138
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1165
[INFO][2020-12-3 23:29:38] RTT (1165) >= Timeout Interval (=1165), packet loss event detected
[INFO][2020-12-3 23:29:38] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1544
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1826
[INFO][2020-12-3 23:29:38] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Updating timeout interval: 1940
[INFO][2020-12-3 23:29:38] All ACKs received

[INFO][2020-12-3 23:29:38] Current window size: 12
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1794
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1635
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1474
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1318
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1174
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 1038
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 914
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 801
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 722
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 681
[INFO][2020-12-3 23:29:39] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 23:29:39] Updating timeout interval: 666
[INFO][2020-12-3 23:29:39] RTT (666) >= Timeout Interval (=666), packet loss event detected
[INFO][2020-12-3 23:29:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:39] Updating timeout interval: 824
[INFO][2020-12-3 23:29:40] RTT (824) >= Timeout Interval (=824), packet loss event detected
[INFO][2020-12-3 23:29:40] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1079
[INFO][2020-12-3 23:29:40] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1302
[INFO][2020-12-3 23:29:40] All ACKs received

[INFO][2020-12-3 23:29:40] Current window size: 6
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:40] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1305
[INFO][2020-12-3 23:29:40] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1256
[INFO][2020-12-3 23:29:40] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1163
[INFO][2020-12-3 23:29:40] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 23:29:40] Updating timeout interval: 1055
[INFO][2020-12-3 23:29:41] RTT (1055) >= Timeout Interval (=1055), packet loss event detected
[INFO][2020-12-3 23:29:41] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1574
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1581
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1524
[INFO][2020-12-3 23:29:41] All ACKs received

[INFO][2020-12-3 23:29:41] Current window size: 7
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1365
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1208
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 1059
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 918
[INFO][2020-12-3 23:29:41] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 23:29:41] Updating timeout interval: 789
[INFO][2020-12-3 23:29:42] RTT (789) >= Timeout Interval (=789), packet loss event detected
[INFO][2020-12-3 23:29:42] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:29:42] Updating timeout interval: 1163
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 1178
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 1140
[INFO][2020-12-3 23:29:42] All ACKs received

[INFO][2020-12-3 23:29:42] Current window size: 8
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 978
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 836
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 705
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 597
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 554
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 537
[INFO][2020-12-3 23:29:42] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 23:29:42] Updating timeout interval: 541
[INFO][2020-12-3 23:29:43] RTT (541) >= Timeout Interval (=541), packet loss event detected
[INFO][2020-12-3 23:29:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:29:43] Updating timeout interval: 733
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 841
[INFO][2020-12-3 23:29:43] All ACKs received

[INFO][2020-12-3 23:29:43] Current window size: 8
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 752
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 662
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 572
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 500
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 463
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 452
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 462
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 482
[INFO][2020-12-3 23:29:43] All ACKs received

[INFO][2020-12-3 23:29:43] Current window size: 16
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 543
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 601
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 652
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 700
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 744
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 785
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 822
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 855
[INFO][2020-12-3 23:29:43] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 23:29:43] Updating timeout interval: 889
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 919
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 949
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 979
[INFO][2020-12-3 23:29:44] RTT (979) >= Timeout Interval (=979), packet loss event detected
[INFO][2020-12-3 23:29:44] Retransmitting 4 unACKs...
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1349
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1481
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1510
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1471
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1384
[INFO][2020-12-3 23:29:44] All ACKs received

[INFO][2020-12-3 23:29:44] Current window size: 14
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1248
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 1109
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 978
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 851
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 735
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 630
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 568
[INFO][2020-12-3 23:29:44] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 23:29:44] Updating timeout interval: 540
[INFO][2020-12-3 23:29:44] All ACKs received

[INFO][2020-12-3 23:29:44] Completed Data Transfer
[INFO][2020-12-3 23:29:44] Sending EOT Packet
[INFO][2020-12-3 23:29:44] Terminating Transmitter...
[INFO][2020-12-3 23:30:21] Host found: 192.168.1.78
[INFO][2020-12-3 23:30:21] The network emulator's port is: 50001
[INFO][2020-12-3 23:30:21] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 23:30:21] Number of lines in the file are: 150
[INFO][2020-12-3 23:30:21] Current window size: 1
[INFO][2020-12-3 23:30:21] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:23] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-3 23:30:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:23] Updating timeout interval: 2749
[INFO][2020-12-3 23:30:23] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 23:30:23] Updating timeout interval: 3136
[INFO][2020-12-3 23:30:23] All ACKs received

[INFO][2020-12-3 23:30:23] Current window size: 1
[INFO][2020-12-3 23:30:23] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 3282
[INFO][2020-12-3 23:30:24] All ACKs received

[INFO][2020-12-3 23:30:24] Current window size: 2
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 3243
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 3093
[INFO][2020-12-3 23:30:24] All ACKs received

[INFO][2020-12-3 23:30:24] Current window size: 4
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 2873
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 2618
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 2346
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 2076
[INFO][2020-12-3 23:30:24] All ACKs received

[INFO][2020-12-3 23:30:24] Current window size: 8
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 1786
[INFO][2020-12-3 23:30:24] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 23:30:24] Updating timeout interval: 1523
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 1287
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 1096
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 990
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 944
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 941
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 965
[INFO][2020-12-3 23:30:25] All ACKs received

[INFO][2020-12-3 23:30:25] Current window size: 16
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:25] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 23:30:25] Updating timeout interval: 1086
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1196
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1299
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1391
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1476
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1554
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1625
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1692
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1756
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1816
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1873
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1930
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 1984
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 2038
[INFO][2020-12-3 23:30:26] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 23:30:26] Updating timeout interval: 2092
[INFO][2020-12-3 23:30:27] RTT (2092) >= Timeout Interval (=2092), packet loss event detected
[INFO][2020-12-3 23:30:27] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:27] Updating timeout interval: 2870
[INFO][2020-12-3 23:30:27] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Updating timeout interval: 3272
[INFO][2020-12-3 23:30:27] All ACKs received

[INFO][2020-12-3 23:30:27] Current window size: 11
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:27] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Updating timeout interval: 3106
[INFO][2020-12-3 23:30:27] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 23:30:27] Updating timeout interval: 2882
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 2633
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 2374
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 2116
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 1870
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 1643
[INFO][2020-12-3 23:30:28] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 23:30:28] Updating timeout interval: 1471
[INFO][2020-12-3 23:30:28] RTT (1471) >= Timeout Interval (=1471), packet loss event detected
[INFO][2020-12-3 23:30:28] Retransmitting 3 unACKs...
[INFO][2020-12-3 23:30:28] Updating timeout interval: 1961
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 2241
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 2329
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 2292
[INFO][2020-12-3 23:30:29] All ACKs received

[INFO][2020-12-3 23:30:29] Current window size: 12
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1942
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1639
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1413
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1284
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1223
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1210
[INFO][2020-12-3 23:30:29] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 23:30:29] Updating timeout interval: 1233
[INFO][2020-12-3 23:30:30] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 23:30:30] Updating timeout interval: 1279
[INFO][2020-12-3 23:30:30] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 23:30:30] Updating timeout interval: 1339
[INFO][2020-12-3 23:30:30] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 23:30:30] Updating timeout interval: 1410
[INFO][2020-12-3 23:30:30] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 23:30:30] Updating timeout interval: 1482
[INFO][2020-12-3 23:30:30] RTT (1482) >= Timeout Interval (=1482), packet loss event detected
[INFO][2020-12-3 23:30:30] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:30] Updating timeout interval: 1986
[INFO][2020-12-3 23:30:32] RTT (1986) >= Timeout Interval (=1986), packet loss event detected
[INFO][2020-12-3 23:30:32] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:32] Updating timeout interval: 2802
[INFO][2020-12-3 23:30:35] RTT (2802) >= Timeout Interval (=2802), packet loss event detected
[INFO][2020-12-3 23:30:35] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:35] Updating timeout interval: 4131
[INFO][2020-12-3 23:30:39] RTT (4131) >= Timeout Interval (=4131), packet loss event detected
[INFO][2020-12-3 23:30:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:39] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:39] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 23:30:39] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:39] All ACKs received

[INFO][2020-12-3 23:30:39] Current window size: 2
[INFO][2020-12-3 23:30:39] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:39] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:39] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 23:30:39] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:30:44] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] All ACKs received

[INFO][2020-12-3 23:30:44] Current window size: 2
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] All ACKs received

[INFO][2020-12-3 23:30:44] Current window size: 4
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:44] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 23:30:44] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:30:49] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] All ACKs received

[INFO][2020-12-3 23:30:49] Current window size: 4
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:49] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Updating timeout interval: 5000
[INFO][2020-12-3 23:30:49] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Updating timeout interval: 4702
[INFO][2020-12-3 23:30:49] All ACKs received

[INFO][2020-12-3 23:30:49] Current window size: 8
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:49] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 4124
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 3605
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 3148
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 2739
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 2368
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 2043
[INFO][2020-12-3 23:30:50] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 23:30:50] Updating timeout interval: 1763
[INFO][2020-12-3 23:30:51] RTT (1763) >= Timeout Interval (=1763), packet loss event detected
[INFO][2020-12-3 23:30:51] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:51] Updating timeout interval: 2747
[INFO][2020-12-3 23:30:51] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Updating timeout interval: 2642
[INFO][2020-12-3 23:30:51] All ACKs received

[INFO][2020-12-3 23:30:51] Current window size: 8
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:51] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Updating timeout interval: 2374
[INFO][2020-12-3 23:30:51] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 23:30:51] Updating timeout interval: 2114
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1869
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1642
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1436
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1247
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1078
[INFO][2020-12-3 23:30:52] RTT (1078) >= Timeout Interval (=1078), packet loss event detected
[INFO][2020-12-3 23:30:52] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1611
[INFO][2020-12-3 23:30:52] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Updating timeout interval: 1634
[INFO][2020-12-3 23:30:52] All ACKs received

[INFO][2020-12-3 23:30:52] Current window size: 8
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:52] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1476
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1316
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1161
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1014
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 865
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 735
[INFO][2020-12-3 23:30:53] RTT (735) >= Timeout Interval (=735), packet loss event detected
[INFO][2020-12-3 23:30:53] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1042
[INFO][2020-12-3 23:30:53] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 23:30:53] Updating timeout interval: 1113
[INFO][2020-12-3 23:30:54] RTT (1113) >= Timeout Interval (=1113), packet loss event detected
[INFO][2020-12-3 23:30:54] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1698
[INFO][2020-12-3 23:30:54] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1676
[INFO][2020-12-3 23:30:54] All ACKs received

[INFO][2020-12-3 23:30:54] Current window size: 5
[INFO][2020-12-3 23:30:54] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:54] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1536
[INFO][2020-12-3 23:30:54] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1387
[INFO][2020-12-3 23:30:54] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1231
[INFO][2020-12-3 23:30:54] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 23:30:54] Updating timeout interval: 1080
[INFO][2020-12-3 23:30:55] RTT (1080) >= Timeout Interval (=1080), packet loss event detected
[INFO][2020-12-3 23:30:55] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:55] Updating timeout interval: 1671
[INFO][2020-12-3 23:30:55] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Updating timeout interval: 1611
[INFO][2020-12-3 23:30:55] All ACKs received

[INFO][2020-12-3 23:30:55] Current window size: 5
[INFO][2020-12-3 23:30:55] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:55] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 1438
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 1270
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 1107
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 957
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 819
[INFO][2020-12-3 23:30:56] All ACKs received

[INFO][2020-12-3 23:30:56] Current window size: 10
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 689
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 590
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 533
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 510
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 505
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 517
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 539
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 570
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 602
[INFO][2020-12-3 23:30:56] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Updating timeout interval: 639
[INFO][2020-12-3 23:30:56] All ACKs received

[INFO][2020-12-3 23:30:56] Current window size: 20
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 718
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 785
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 840
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 888
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 927
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 963
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 994
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1021
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1049
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1072
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1095
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1119
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1139
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1159
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1179
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1203
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1223
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1243
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1263
[INFO][2020-12-3 23:30:57] RTT (1263) >= Timeout Interval (=1263), packet loss event detected
[INFO][2020-12-3 23:30:57] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:57] Updating timeout interval: 1680
[INFO][2020-12-3 23:30:57] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Updating timeout interval: 2004
[INFO][2020-12-3 23:30:57] All ACKs received

[INFO][2020-12-3 23:30:57] Current window size: 11
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:57] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1973
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1887
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1765
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1625
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1475
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1326
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1186
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1054
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 929
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 816
[INFO][2020-12-3 23:30:58] RTT (816) >= Timeout Interval (=816), packet loss event detected
[INFO][2020-12-3 23:30:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1080
[INFO][2020-12-3 23:30:58] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Updating timeout interval: 1292
[INFO][2020-12-3 23:30:58] All ACKs received

[INFO][2020-12-3 23:30:58] Current window size: 11
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:30:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 1258
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 1186
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 1096
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 990
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 885
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 783
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 684
[INFO][2020-12-3 23:30:59] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 23:30:59] Updating timeout interval: 604
[INFO][2020-12-3 23:30:59] All ACKs received

[INFO][2020-12-3 23:30:59] Completed Data Transfer
[INFO][2020-12-3 23:30:59] Sending EOT Packet
[INFO][2020-12-3 23:30:59] Terminating Transmitter...
[INFO][2020-12-3 23:32:35] Host found: 192.168.1.78
[INFO][2020-12-3 23:32:35] The network emulator's port is: 50001
[INFO][2020-12-3 23:32:35] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 23:32:35] Number of lines in the file are: 150
[INFO][2020-12-3 23:32:35] Current window size: 1
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2447
[INFO][2020-12-3 23:32:35] All ACKs received

[INFO][2020-12-3 23:32:35] Current window size: 2
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2637
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2656
[INFO][2020-12-3 23:32:35] All ACKs received

[INFO][2020-12-3 23:32:35] Current window size: 4
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2551
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2379
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 2170
[INFO][2020-12-3 23:32:35] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Updating timeout interval: 1943
[INFO][2020-12-3 23:32:35] All ACKs received

[INFO][2020-12-3 23:32:35] Current window size: 8
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1675
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1430
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1212
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1127
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1090
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1092
[INFO][2020-12-3 23:32:36] RTT (1092) >= Timeout Interval (=1092), packet loss event detected
[INFO][2020-12-3 23:32:36] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1509
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1654
[INFO][2020-12-3 23:32:36] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Updating timeout interval: 1672
[INFO][2020-12-3 23:32:36] All ACKs received

[INFO][2020-12-3 23:32:36] Current window size: 9
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:36] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 1431
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 1208
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 1042
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 993
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 988
[INFO][2020-12-3 23:32:37] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 23:32:37] Updating timeout interval: 1014
[INFO][2020-12-3 23:32:37] RTT (1014) >= Timeout Interval (=1014), packet loss event detected
[INFO][2020-12-3 23:32:37] Retransmitting 3 unACKs...
[INFO][2020-12-3 23:32:37] Updating timeout interval: 1379
[INFO][2020-12-3 23:32:38] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 23:32:38] Updating timeout interval: 1494
[INFO][2020-12-3 23:32:38] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 23:32:38] Updating timeout interval: 1466
[INFO][2020-12-3 23:32:39] RTT (1466) >= Timeout Interval (=1466), packet loss event detected
[INFO][2020-12-3 23:32:39] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:39] Updating timeout interval: 2191
[INFO][2020-12-3 23:32:39] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Updating timeout interval: 2203
[INFO][2020-12-3 23:32:39] All ACKs received

[INFO][2020-12-3 23:32:39] Current window size: 5
[INFO][2020-12-3 23:32:39] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:39] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Updating timeout interval: 1979
[INFO][2020-12-3 23:32:39] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Updating timeout interval: 1752
[INFO][2020-12-3 23:32:39] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 23:32:39] Updating timeout interval: 1497
[INFO][2020-12-3 23:32:40] RTT (1497) >= Timeout Interval (=1497), packet loss event detected
[INFO][2020-12-3 23:32:40] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:32:40] Updating timeout interval: 2255
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 2213
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 2088
[INFO][2020-12-3 23:32:41] All ACKs received

[INFO][2020-12-3 23:32:41] Current window size: 6
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 1835
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 1590
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 1360
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 1148
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 990
[INFO][2020-12-3 23:32:41] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Updating timeout interval: 913
[INFO][2020-12-3 23:32:41] All ACKs received

[INFO][2020-12-3 23:32:41] Current window size: 12
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 920
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 954
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1012
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1080
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1154
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1230
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1308
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1383
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1459
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1532
[INFO][2020-12-3 23:32:42] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 23:32:42] Updating timeout interval: 1606
[INFO][2020-12-3 23:32:43] RTT (1606) >= Timeout Interval (=1606), packet loss event detected
[INFO][2020-12-3 23:32:43] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:43] Updating timeout interval: 2249
[INFO][2020-12-3 23:32:45] RTT (2249) >= Timeout Interval (=2249), packet loss event detected
[INFO][2020-12-3 23:32:45] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:45] Updating timeout interval: 3295
[INFO][2020-12-3 23:32:48] RTT (3295) >= Timeout Interval (=3295), packet loss event detected
[INFO][2020-12-3 23:32:48] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:48] Updating timeout interval: 4994
[INFO][2020-12-3 23:32:53] RTT (4994) >= Timeout Interval (=4994), packet loss event detected
[INFO][2020-12-3 23:32:53] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:53] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:32:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:32:58] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:58] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 23:32:58] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:58] All ACKs received

[INFO][2020-12-3 23:32:58] Current window size: 1
[INFO][2020-12-3 23:32:58] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:58] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 23:32:58] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:58] All ACKs received

[INFO][2020-12-3 23:32:58] Current window size: 2
[INFO][2020-12-3 23:32:58] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:58] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:59] All ACKs received

[INFO][2020-12-3 23:32:59] Current window size: 4
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 4994
[INFO][2020-12-3 23:32:59] All ACKs received

[INFO][2020-12-3 23:32:59] Current window size: 8
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 4422
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 3898
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 3425
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 3001
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 2621
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 2285
[INFO][2020-12-3 23:32:59] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 23:32:59] Updating timeout interval: 1987
[INFO][2020-12-3 23:33:1] RTT (1987) >= Timeout Interval (=1987), packet loss event detected
[INFO][2020-12-3 23:33:1] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:33:1] Updating timeout interval: 3130
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 2972
[INFO][2020-12-3 23:33:1] All ACKs received

[INFO][2020-12-3 23:33:1] Current window size: 8
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 2663
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 2366
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 2089
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 1834
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 1605
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 1400
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 1216
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 1051
[INFO][2020-12-3 23:33:1] All ACKs received

[INFO][2020-12-3 23:33:1] Current window size: 16
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 883
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 773
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 710
[INFO][2020-12-3 23:33:1] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 23:33:1] Updating timeout interval: 676
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 664
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 669
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 688
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 711
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 740
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 792
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 836
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 877
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 918
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 956
[INFO][2020-12-3 23:33:2] RTT (956) >= Timeout Interval (=956), packet loss event detected
[INFO][2020-12-3 23:33:2] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1287
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1494
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1567
[INFO][2020-12-3 23:33:2] All ACKs received

[INFO][2020-12-3 23:33:2] Current window size: 12
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1396
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1234
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 1084
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 946
[INFO][2020-12-3 23:33:2] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 23:33:2] Updating timeout interval: 823
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 715
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 657
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 630
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 628
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 640
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 666
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 697
[INFO][2020-12-3 23:33:3] All ACKs received

[INFO][2020-12-3 23:33:3] Current window size: 20
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 711
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 734
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 766
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 799
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 833
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 868
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 903
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 939
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 971
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1004
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1033
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1062
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1091
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1117
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1143
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1169
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1195
[INFO][2020-12-3 23:33:3] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 23:33:3] Updating timeout interval: 1221
[INFO][2020-12-3 23:33:4] RTT (1221) >= Timeout Interval (=1221), packet loss event detected
[INFO][2020-12-3 23:33:4] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1596
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1933
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 2080
[INFO][2020-12-3 23:33:4] All ACKs received

[INFO][2020-12-3 23:33:4] Current window size: 12
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1945
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1789
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1624
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1460
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1301
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1155
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 1020
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 896
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 783
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 721
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 693
[INFO][2020-12-3 23:33:4] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Updating timeout interval: 687
[INFO][2020-12-3 23:33:4] All ACKs received

[INFO][2020-12-3 23:33:4] Current window size: 20
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:4] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 648
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 636
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 642
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 665
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 694
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 728
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 767
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 807
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 848
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 886
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 925
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 965
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1001
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1038
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1075
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1108
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1138
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1168
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1203
[INFO][2020-12-3 23:33:5] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 23:33:5] Updating timeout interval: 1234
[INFO][2020-12-3 23:33:5] All ACKs received

[INFO][2020-12-3 23:33:5] Completed Data Transfer
[INFO][2020-12-3 23:33:5] Sending EOT Packet
[INFO][2020-12-3 23:33:5] Terminating Transmitter...
[INFO][2020-12-3 23:33:20] Host found: 192.168.1.78
[INFO][2020-12-3 23:33:20] The network emulator's port is: 50001
[INFO][2020-12-3 23:33:20] Sending data in file path: ./resource/message.txt
[INFO][2020-12-3 23:33:20] Number of lines in the file are: 150
[INFO][2020-12-3 23:33:20] Current window size: 1
[INFO][2020-12-3 23:33:20] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:20] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-3 23:33:20] Updating timeout interval: 2447
[INFO][2020-12-3 23:33:20] All ACKs received

[INFO][2020-12-3 23:33:20] Current window size: 2
[INFO][2020-12-3 23:33:20] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:20] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:20] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 2637
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 2652
[INFO][2020-12-3 23:33:21] All ACKs received

[INFO][2020-12-3 23:33:21] Current window size: 4
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 2548
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 2376
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 2167
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 1940
[INFO][2020-12-3 23:33:21] All ACKs received

[INFO][2020-12-3 23:33:21] Current window size: 8
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 1683
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 1444
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 1228
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 1053
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 959
[INFO][2020-12-3 23:33:21] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-3 23:33:21] Updating timeout interval: 921
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 926
[INFO][2020-12-3 23:33:22] RTT (926) >= Timeout Interval (=926), packet loss event detected
[INFO][2020-12-3 23:33:22] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:33:22] Updating timeout interval: 1233
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 1414
[INFO][2020-12-3 23:33:22] All ACKs received

[INFO][2020-12-3 23:33:22] Current window size: 8
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 1285
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 1112
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 960
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 885
[INFO][2020-12-3 23:33:22] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-3 23:33:22] Updating timeout interval: 862
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 879
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 919
[INFO][2020-12-3 23:33:23] RTT (919) >= Timeout Interval (=919), packet loss event detected
[INFO][2020-12-3 23:33:23] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:33:23] Updating timeout interval: 1212
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 1429
[INFO][2020-12-3 23:33:23] All ACKs received

[INFO][2020-12-3 23:33:23] Current window size: 8
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 1296
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 1150
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 1002
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 888
[INFO][2020-12-3 23:33:23] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-3 23:33:23] Updating timeout interval: 842
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 841
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 871
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 920
[INFO][2020-12-3 23:33:24] All ACKs received

[INFO][2020-12-3 23:33:24] Current window size: 16
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 1053
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 1175
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 1282
[INFO][2020-12-3 23:33:24] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-3 23:33:24] Updating timeout interval: 1379
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1469
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1552
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1631
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1703
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1772
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1838
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1900
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 1962
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 2021
[INFO][2020-12-3 23:33:25] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-3 23:33:25] Updating timeout interval: 2076
[INFO][2020-12-3 23:33:26] RTT (2076) >= Timeout Interval (=2076), packet loss event detected
[INFO][2020-12-3 23:33:26] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:26] Updating timeout interval: 2863
[INFO][2020-12-3 23:33:29] RTT (2863) >= Timeout Interval (=2863), packet loss event detected
[INFO][2020-12-3 23:33:29] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:29] Updating timeout interval: 4144
[INFO][2020-12-3 23:33:33] RTT (4144) >= Timeout Interval (=4144), packet loss event detected
[INFO][2020-12-3 23:33:33] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:33] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:38] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:33:38] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:38] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:33:43] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] All ACKs received

[INFO][2020-12-3 23:33:43] Current window size: 2
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] All ACKs received

[INFO][2020-12-3 23:33:43] Current window size: 4
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] All ACKs received

[INFO][2020-12-3 23:33:43] Current window size: 8
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 4452
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 3931
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 3447
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 3016
[INFO][2020-12-3 23:33:43] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-3 23:33:43] Updating timeout interval: 2633
[INFO][2020-12-3 23:33:46] RTT (2633) >= Timeout Interval (=2633), packet loss event detected
[INFO][2020-12-3 23:33:46] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:46] Updating timeout interval: 4207
[INFO][2020-12-3 23:33:46] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Updating timeout interval: 3697
[INFO][2020-12-3 23:33:46] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Updating timeout interval: 3176
[INFO][2020-12-3 23:33:46] All ACKs received

[INFO][2020-12-3 23:33:46] Current window size: 9
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:46] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:47] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-3 23:33:47] Updating timeout interval: 2995
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3043
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3135
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3255
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3395
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3660
[INFO][2020-12-3 23:33:48] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-3 23:33:48] Updating timeout interval: 3890
[INFO][2020-12-3 23:33:50] RTT (3890) >= Timeout Interval (=3890), packet loss event detected
[INFO][2020-12-3 23:33:50] Retransmitting 2 unACKs...
[INFO][2020-12-3 23:33:50] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:50] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:50] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:50] All ACKs received

[INFO][2020-12-3 23:33:50] Current window size: 10
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:50] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:51] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:51] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 4446
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 3721
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 3285
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 3057
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 2975
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 2994
[INFO][2020-12-3 23:33:52] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-3 23:33:52] Updating timeout interval: 3084
[INFO][2020-12-3 23:33:53] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Updating timeout interval: 3217
[INFO][2020-12-3 23:33:53] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Updating timeout interval: 3384
[INFO][2020-12-3 23:33:53] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Updating timeout interval: 3568
[INFO][2020-12-3 23:33:53] All ACKs received

[INFO][2020-12-3 23:33:53] Current window size: 20
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:55] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-3 23:33:55] Updating timeout interval: 3825
[INFO][2020-12-3 23:33:55] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-3 23:33:55] Updating timeout interval: 4065
[INFO][2020-12-3 23:33:55] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-3 23:33:55] Updating timeout interval: 4292
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 4505
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 4705
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 4894
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:56] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-3 23:33:56] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:57] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-3 23:33:57] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:33:58] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:33:58] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:58] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Updating timeout interval: 5000
[INFO][2020-12-3 23:33:58] All ACKs received

[INFO][2020-12-3 23:33:58] Current window size: 11
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:33:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:33:59] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-3 23:33:59] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:0] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-3 23:34:0] Updating timeout interval: 4379
[INFO][2020-12-3 23:34:1] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-3 23:34:1] Updating timeout interval: 4009
[INFO][2020-12-3 23:34:2] RTT (4009) >= Timeout Interval (=4009), packet loss event detected
[INFO][2020-12-3 23:34:2] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:34:2] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:2] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:2] All ACKs received

[INFO][2020-12-3 23:34:2] Current window size: 11
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 4598
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 4080
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 3583
[INFO][2020-12-3 23:34:4] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-3 23:34:4] Updating timeout interval: 3269
[INFO][2020-12-3 23:34:5] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-3 23:34:5] Updating timeout interval: 3140
[INFO][2020-12-3 23:34:5] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-3 23:34:5] Updating timeout interval: 3142
[INFO][2020-12-3 23:34:5] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-3 23:34:5] Updating timeout interval: 3230
[INFO][2020-12-3 23:34:6] RTT (3230) >= Timeout Interval (=3230), packet loss event detected
[INFO][2020-12-3 23:34:6] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:34:6] Updating timeout interval: 4070
[INFO][2020-12-3 23:34:6] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:6] All ACKs received

[INFO][2020-12-3 23:34:6] Current window size: 11
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:34:7] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-3 23:34:7] Updating timeout interval: 4794
[INFO][2020-12-3 23:34:7] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-3 23:34:7] Updating timeout interval: 4379
[INFO][2020-12-3 23:34:7] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-3 23:34:7] Updating timeout interval: 3932
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 3479
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 3094
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 2915
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 2880
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 2947
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 3080
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 3257
[INFO][2020-12-3 23:34:8] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Updating timeout interval: 3461
[INFO][2020-12-3 23:34:8] All ACKs received

[INFO][2020-12-3 23:34:8] Current window size: 20
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-3 23:34:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-3 23:34:10] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-3 23:34:10] Updating timeout interval: 3135
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3003
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3007
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3102
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3258
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3451
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3667
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 3897
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 4128
[INFO][2020-12-3 23:34:11] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-3 23:34:11] Updating timeout interval: 4360
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 4588
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 4812
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:12] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-3 23:34:12] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:13] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-3 23:34:13] Retransmitting 1 unACKs...
[INFO][2020-12-3 23:34:13] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:14] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-3 23:34:14] Updating timeout interval: 5000
[INFO][2020-12-3 23:34:14] All ACKs received

[INFO][2020-12-3 23:34:14] Completed Data Transfer
[INFO][2020-12-3 23:34:14] Sending EOT Packet
[INFO][2020-12-3 23:34:14] Terminating Transmitter...
[INFO][2020-12-4 9:16:6] Host found: 192.168.1.78
[INFO][2020-12-4 9:16:6] The network emulator's port is: 50001
[INFO][2020-12-4 9:16:6] Sending data in file path: ./resource/message.txt
[INFO][2020-12-4 9:16:6] Number of lines in the file are: 150
[INFO][2020-12-4 9:16:6] Current window size: 1
[INFO][2020-12-4 9:16:6] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:6] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-4 9:16:6] Updating timeout interval: 2440
[INFO][2020-12-4 9:16:6] All ACKs received

[INFO][2020-12-4 9:16:6] Current window size: 2
[INFO][2020-12-4 9:16:6] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:6] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:6] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-4 9:16:6] Updating timeout interval: 2638
[INFO][2020-12-4 9:16:8] RTT (2638) >= Timeout Interval (=2638), packet loss event detected
[INFO][2020-12-4 9:16:8] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:16:8] Updating timeout interval: 4025
[INFO][2020-12-4 9:16:8] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-4 9:16:8] Updating timeout interval: 3961
[INFO][2020-12-4 9:16:8] All ACKs received

[INFO][2020-12-4 9:16:8] Current window size: 2
[INFO][2020-12-4 9:16:8] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:8] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:8] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 3793
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 3542
[INFO][2020-12-4 9:16:9] All ACKs received

[INFO][2020-12-4 9:16:9] Current window size: 4
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 3208
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 2866
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 2531
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 2213
[INFO][2020-12-4 9:16:9] All ACKs received

[INFO][2020-12-4 9:16:9] Current window size: 8
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 1930
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 1666
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 1424
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 1208
[INFO][2020-12-4 9:16:9] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-4 9:16:9] Updating timeout interval: 1041
[INFO][2020-12-4 9:16:10] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Updating timeout interval: 951
[INFO][2020-12-4 9:16:10] RTT (951) >= Timeout Interval (=951), packet loss event detected
[INFO][2020-12-4 9:16:10] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:16:10] Updating timeout interval: 1296
[INFO][2020-12-4 9:16:10] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Updating timeout interval: 1440
[INFO][2020-12-4 9:16:10] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Updating timeout interval: 1464
[INFO][2020-12-4 9:16:10] All ACKs received

[INFO][2020-12-4 9:16:10] Current window size: 9
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:10] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-4 9:16:10] Updating timeout interval: 1245
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 1048
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 927
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 871
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 859
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 878
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 920
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 976
[INFO][2020-12-4 9:16:11] RTT (976) >= Timeout Interval (=976), packet loss event detected
[INFO][2020-12-4 9:16:11] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:16:11] Updating timeout interval: 1321
[INFO][2020-12-4 9:16:11] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Updating timeout interval: 1510
[INFO][2020-12-4 9:16:11] All ACKs received

[INFO][2020-12-4 9:16:11] Current window size: 9
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 1333
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 1158
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 993
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 901
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 870
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 878
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 914
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 969
[INFO][2020-12-4 9:16:12] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Updating timeout interval: 1034
[INFO][2020-12-4 9:16:12] All ACKs received

[INFO][2020-12-4 9:16:12] Current window size: 18
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 18,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1151
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1257
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1352
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1440
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1521
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1599
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1675
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1743
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1807
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1868
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1925
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 1978
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 2073
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 2151
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 2217
[INFO][2020-12-4 9:16:13] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-4 9:16:13] Updating timeout interval: 2275
[INFO][2020-12-4 9:16:14] RTT (2275) >= Timeout Interval (=2275), packet loss event detected
[INFO][2020-12-4 9:16:14] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:16:14] Updating timeout interval: 3120
[INFO][2020-12-4 9:16:14] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Updating timeout interval: 3531
[INFO][2020-12-4 9:16:14] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 18,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Updating timeout interval: 3661
[INFO][2020-12-4 9:16:14] All ACKs received

[INFO][2020-12-4 9:16:14] Current window size: 12
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 3305
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 2957
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 2623
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 2310
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 2025
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1767
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1539
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1412
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1353
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1342
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1363
[INFO][2020-12-4 9:16:15] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Updating timeout interval: 1407
[INFO][2020-12-4 9:16:15] All ACKs received

[INFO][2020-12-4 9:16:15] Current window size: 20
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:16:15] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:16:16] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-4 9:16:16] Updating timeout interval: 1292
[INFO][2020-12-4 9:16:16] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-4 9:16:16] Updating timeout interval: 1246
[INFO][2020-12-4 9:16:16] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-4 9:16:16] Updating timeout interval: 1248
[INFO][2020-12-4 9:16:16] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-4 9:16:16] Updating timeout interval: 1286
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1343
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1415
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1494
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1579
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1666
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1751
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1834
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 1959
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2065
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2159
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2242
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2317
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2385
[INFO][2020-12-4 9:16:17] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-4 9:16:17] Updating timeout interval: 2445
[INFO][2020-12-4 9:16:18] RTT (2445) >= Timeout Interval (=2445), packet loss event detected
[INFO][2020-12-4 9:16:18] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:16:18] Updating timeout interval: 3228
[INFO][2020-12-4 9:17:12] Host found: 192.168.1.78
[INFO][2020-12-4 9:17:12] The network emulator's port is: 50001
[INFO][2020-12-4 9:17:12] Sending data in file path: ./resource/message.txt
[INFO][2020-12-4 9:17:12] Number of lines in the file are: 150
[INFO][2020-12-4 9:17:12] Current window size: 1
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2447
[INFO][2020-12-4 9:17:12] All ACKs received

[INFO][2020-12-4 9:17:12] Current window size: 2
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2641
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2663
[INFO][2020-12-4 9:17:12] All ACKs received

[INFO][2020-12-4 9:17:12] Current window size: 4
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2534
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2349
[INFO][2020-12-4 9:17:12] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-4 9:17:12] Updating timeout interval: 2135
[INFO][2020-12-4 9:17:14] RTT (2135) >= Timeout Interval (=2135), packet loss event detected
[INFO][2020-12-4 9:17:14] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:14] Updating timeout interval: 3320
[INFO][2020-12-4 9:17:14] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Updating timeout interval: 3190
[INFO][2020-12-4 9:17:14] All ACKs received

[INFO][2020-12-4 9:17:14] Current window size: 4
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:14] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Updating timeout interval: 2904
[INFO][2020-12-4 9:17:14] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Updating timeout interval: 2602
[INFO][2020-12-4 9:17:14] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Updating timeout interval: 2302
[INFO][2020-12-4 9:17:14] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Updating timeout interval: 2015
[INFO][2020-12-4 9:17:14] All ACKs received

[INFO][2020-12-4 9:17:14] Current window size: 8
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:14] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 1731
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 1442
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 1207
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 1068
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 997
[INFO][2020-12-4 9:17:15] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-4 9:17:15] Updating timeout interval: 974
[INFO][2020-12-4 9:17:15] RTT (974) >= Timeout Interval (=974), packet loss event detected
[INFO][2020-12-4 9:17:15] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:17:15] Updating timeout interval: 1324
[INFO][2020-12-4 9:17:16] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-4 9:17:16] Updating timeout interval: 1457
[INFO][2020-12-4 9:17:17] RTT (1457) >= Timeout Interval (=1457), packet loss event detected
[INFO][2020-12-4 9:17:17] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:17] Updating timeout interval: 2167
[INFO][2020-12-4 9:17:17] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Updating timeout interval: 2194
[INFO][2020-12-4 9:17:17] All ACKs received

[INFO][2020-12-4 9:17:17] Current window size: 5
[INFO][2020-12-4 9:17:17] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 5,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:17] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Updating timeout interval: 1995
[INFO][2020-12-4 9:17:17] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Updating timeout interval: 1781
[INFO][2020-12-4 9:17:17] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-4 9:17:17] Updating timeout interval: 1567
[INFO][2020-12-4 9:17:19] RTT (1567) >= Timeout Interval (=1567), packet loss event detected
[INFO][2020-12-4 9:17:19] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:17:19] Updating timeout interval: 2383
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 2316
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 5,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 2173
[INFO][2020-12-4 9:17:19] All ACKs received

[INFO][2020-12-4 9:17:19] Current window size: 6
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 1914
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 1667
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 1431
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 1213
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 1021
[INFO][2020-12-4 9:17:19] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Updating timeout interval: 914
[INFO][2020-12-4 9:17:19] All ACKs received

[INFO][2020-12-4 9:17:19] Current window size: 12
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:19] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 907
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 928
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 971
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1029
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1097
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1167
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1239
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1312
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1382
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1454
[INFO][2020-12-4 9:17:20] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-4 9:17:20] Updating timeout interval: 1522
[INFO][2020-12-4 9:17:21] RTT (1522) >= Timeout Interval (=1522), packet loss event detected
[INFO][2020-12-4 9:17:21] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:21] Updating timeout interval: 2127
[INFO][2020-12-4 9:17:23] RTT (2127) >= Timeout Interval (=2127), packet loss event detected
[INFO][2020-12-4 9:17:23] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:23] Updating timeout interval: 3111
[INFO][2020-12-4 9:17:26] RTT (3111) >= Timeout Interval (=3111), packet loss event detected
[INFO][2020-12-4 9:17:26] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:26] Updating timeout interval: 4709
[INFO][2020-12-4 9:17:31] RTT (4709) >= Timeout Interval (=4709), packet loss event detected
[INFO][2020-12-4 9:17:43] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:44] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:44] All ACKs received

[INFO][2020-12-4 9:17:44] Current window size: 2
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:44] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:44] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:44] All ACKs received

[INFO][2020-12-4 9:17:44] Current window size: 4
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:44] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:44] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-4 9:17:44] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:49] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:17:49] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:17:49] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:49] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-4 9:17:49] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:54] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:17:54] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:54] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:54] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:54] All ACKs received

[INFO][2020-12-4 9:17:54] Current window size: 3
[INFO][2020-12-4 9:17:54] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:54] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:54] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-4 9:17:54] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:17:59] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:17:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] All ACKs received

[INFO][2020-12-4 9:17:59] Current window size: 3
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 3,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:17:59] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 3,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:17:59] All ACKs received

[INFO][2020-12-4 9:17:59] Current window size: 6
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:17:59] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 4919
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 4302
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 3742
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 3242
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 2796
[INFO][2020-12-4 9:18:0] All ACKs received

[INFO][2020-12-4 9:18:0] Current window size: 12
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 2358
[INFO][2020-12-4 9:18:0] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-4 9:18:0] Updating timeout interval: 1983
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1662
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1458
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1343
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1292
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1285
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1309
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1356
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1413
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1480
[INFO][2020-12-4 9:18:1] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Updating timeout interval: 1549
[INFO][2020-12-4 9:18:1] All ACKs received

[INFO][2020-12-4 9:18:1] Current window size: 20
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:1] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1486
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1471
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1491
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1534
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1592
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1660
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1734
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1809
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1886
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 1960
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 2035
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 2107
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 2176
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 2246
[INFO][2020-12-4 9:18:2] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-4 9:18:2] Updating timeout interval: 2313
[INFO][2020-12-4 9:18:3] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-4 9:18:3] Updating timeout interval: 2381
[INFO][2020-12-4 9:18:3] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-4 9:18:3] Updating timeout interval: 2445
[INFO][2020-12-4 9:18:3] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-4 9:18:3] Updating timeout interval: 2506
[INFO][2020-12-4 9:18:3] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-4 9:18:3] Updating timeout interval: 2563
[INFO][2020-12-4 9:18:3] RTT (2563) >= Timeout Interval (=2563), packet loss event detected
[INFO][2020-12-4 9:18:3] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:3] Updating timeout interval: 3388
[INFO][2020-12-4 9:18:7] RTT (3388) >= Timeout Interval (=3388), packet loss event detected
[INFO][2020-12-4 9:18:7] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:7] Updating timeout interval: 4727
[INFO][2020-12-4 9:18:12] RTT (4727) >= Timeout Interval (=4727), packet loss event detected
[INFO][2020-12-4 9:18:12] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:12] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:17] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:18:17] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:17] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:22] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:18:22] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:22] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:22] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-4 9:18:22] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:22] All ACKs received

[INFO][2020-12-4 9:18:22] Current window size: 1
[INFO][2020-12-4 9:18:22] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:27] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:18:27] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:27] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:27] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-4 9:18:27] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:27] All ACKs received

[INFO][2020-12-4 9:18:27] Current window size: 1
[INFO][2020-12-4 9:18:27] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:27] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:32] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:18:32] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] All ACKs received

[INFO][2020-12-4 9:18:32] Current window size: 1
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] All ACKs received

[INFO][2020-12-4 9:18:32] Current window size: 2
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] All ACKs received

[INFO][2020-12-4 9:18:32] Current window size: 4
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:32] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-4 9:18:32] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:33] All ACKs received

[INFO][2020-12-4 9:18:33] Current window size: 8
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 5000
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 4675
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 4058
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 3509
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 3027
[INFO][2020-12-4 9:18:33] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-4 9:18:33] Updating timeout interval: 2602
[INFO][2020-12-4 9:18:35] RTT (2602) >= Timeout Interval (=2602), packet loss event detected
[INFO][2020-12-4 9:18:35] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:18:35] Updating timeout interval: 3941
[INFO][2020-12-4 9:18:35] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Updating timeout interval: 3895
[INFO][2020-12-4 9:18:35] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Updating timeout interval: 3712
[INFO][2020-12-4 9:18:35] All ACKs received

[INFO][2020-12-4 9:18:35] Current window size: 9
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 9,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 3265
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 2853
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 2445
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 2084
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 1771
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 1512
[INFO][2020-12-4 9:18:36] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-4 9:18:36] Updating timeout interval: 1358
[INFO][2020-12-4 9:18:37] RTT (1358) >= Timeout Interval (=1358), packet loss event detected
[INFO][2020-12-4 9:18:37] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:18:37] Updating timeout interval: 1838
[INFO][2020-12-4 9:18:37] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Updating timeout interval: 2074
[INFO][2020-12-4 9:18:37] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 9,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Updating timeout interval: 2138
[INFO][2020-12-4 9:18:37] All ACKs received

[INFO][2020-12-4 9:18:37] Current window size: 10
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:37] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Updating timeout interval: 1864
[INFO][2020-12-4 9:18:37] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Updating timeout interval: 1610
[INFO][2020-12-4 9:18:37] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-4 9:18:37] Updating timeout interval: 1375
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1205
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1162
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1167
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1199
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1250
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1316
[INFO][2020-12-4 9:18:38] RTT (1316) >= Timeout Interval (=1316), packet loss event detected
[INFO][2020-12-4 9:18:38] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:38] Updating timeout interval: 1767
[INFO][2020-12-4 9:18:38] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Updating timeout interval: 2047
[INFO][2020-12-4 9:18:38] All ACKs received

[INFO][2020-12-4 9:18:38] Current window size: 10
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1854
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1653
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1452
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1261
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1132
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1076
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1073
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1105
[INFO][2020-12-4 9:18:39] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1157
[INFO][2020-12-4 9:18:39] RTT (1157) >= Timeout Interval (=1157), packet loss event detected
[INFO][2020-12-4 9:18:39] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:18:39] Updating timeout interval: 1493
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1816
[INFO][2020-12-4 9:18:40] All ACKs received

[INFO][2020-12-4 9:18:40] Current window size: 10
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 10,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1658
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1484
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1305
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1137
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1054
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1028
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1046
[INFO][2020-12-4 9:18:40] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-4 9:18:40] Updating timeout interval: 1091
[INFO][2020-12-4 9:18:41] RTT (1091) >= Timeout Interval (=1091), packet loss event detected
[INFO][2020-12-4 9:18:41] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:18:41] Updating timeout interval: 1398
[INFO][2020-12-4 9:18:41] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Updating timeout interval: 1678
[INFO][2020-12-4 9:18:41] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 10,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Updating timeout interval: 1781
[INFO][2020-12-4 9:18:41] All ACKs received

[INFO][2020-12-4 9:18:41] Current window size: 11
[INFO][2020-12-4 9:18:41] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:18:41] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Updating timeout interval: 1827
[INFO][2020-12-4 9:18:41] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-4 9:18:41] Updating timeout interval: 1774
[INFO][2020-12-4 9:18:41] All ACKs received

[INFO][2020-12-4 9:18:41] Completed Data Transfer
[INFO][2020-12-4 9:18:41] Sending EOT Packet
[INFO][2020-12-4 9:18:41] Terminating Transmitter...
[INFO][2020-12-4 9:19:22] Host found: 192.168.1.78
[INFO][2020-12-4 9:19:22] The network emulator's port is: 50001
[INFO][2020-12-4 9:19:22] Sending data in file path: ./resource/message.txt
[INFO][2020-12-4 9:19:22] Number of lines in the file are: 150
[INFO][2020-12-4 9:19:22] Current window size: 1
[INFO][2020-12-4 9:19:22] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:22] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-4 9:19:22] Updating timeout interval: 2481
[INFO][2020-12-4 9:19:22] All ACKs received

[INFO][2020-12-4 9:19:22] Current window size: 2
[INFO][2020-12-4 9:19:22] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:22] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:22] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:22] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-4 9:19:22] Updating timeout interval: 2711
[INFO][2020-12-4 9:19:25] RTT (2711) >= Timeout Interval (=2711), packet loss event detected
[INFO][2020-12-4 9:19:25] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:25] Updating timeout interval: 4165
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 4110
[INFO][2020-12-4 9:19:25] All ACKs received

[INFO][2020-12-4 9:19:25] Current window size: 2
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 3949
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 3711
[INFO][2020-12-4 9:19:25] All ACKs received

[INFO][2020-12-4 9:19:25] Current window size: 4
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 3410
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 3100
[INFO][2020-12-4 9:19:25] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-4 9:19:25] Updating timeout interval: 2796
[INFO][2020-12-4 9:19:28] RTT (2796) >= Timeout Interval (=2796), packet loss event detected
[INFO][2020-12-4 9:19:28] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:28] Updating timeout interval: 4524
[INFO][2020-12-4 9:19:28] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Updating timeout interval: 4122
[INFO][2020-12-4 9:19:28] All ACKs received

[INFO][2020-12-4 9:19:28] Current window size: 4
[INFO][2020-12-4 9:19:28] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:28] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Updating timeout interval: 3710
[INFO][2020-12-4 9:19:28] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Updating timeout interval: 3307
[INFO][2020-12-4 9:19:28] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-4 9:19:28] Updating timeout interval: 2930
[INFO][2020-12-4 9:19:31] RTT (2930) >= Timeout Interval (=2930), packet loss event detected
[INFO][2020-12-4 9:19:31] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:31] Updating timeout interval: 4754
[INFO][2020-12-4 9:19:31] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Updating timeout interval: 4276
[INFO][2020-12-4 9:19:31] All ACKs received

[INFO][2020-12-4 9:19:31] Current window size: 4
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:31] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Updating timeout interval: 3692
[INFO][2020-12-4 9:19:31] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Updating timeout interval: 3158
[INFO][2020-12-4 9:19:31] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Updating timeout interval: 2676
[INFO][2020-12-4 9:19:31] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Updating timeout interval: 2245
[INFO][2020-12-4 9:19:31] All ACKs received

[INFO][2020-12-4 9:19:31] Current window size: 8
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:31] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1861
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1632
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1509
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1463
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1474
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1517
[INFO][2020-12-4 9:19:32] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-4 9:19:32] Updating timeout interval: 1587
[INFO][2020-12-4 9:19:33] RTT (1587) >= Timeout Interval (=1587), packet loss event detected
[INFO][2020-12-4 9:19:33] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:33] Updating timeout interval: 2230
[INFO][2020-12-4 9:19:33] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Updating timeout interval: 2416
[INFO][2020-12-4 9:19:33] All ACKs received

[INFO][2020-12-4 9:19:33] Current window size: 8
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:33] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 2133
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1852
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1584
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1400
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1319
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1312
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1351
[INFO][2020-12-4 9:19:34] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Updating timeout interval: 1426
[INFO][2020-12-4 9:19:34] All ACKs received

[INFO][2020-12-4 9:19:34] Current window size: 16
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:34] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 1554
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 1685
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 1815
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 1943
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 2065
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 2185
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 2299
[INFO][2020-12-4 9:19:35] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-4 9:19:35] Updating timeout interval: 2410
[INFO][2020-12-4 9:19:36] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-4 9:19:36] Updating timeout interval: 2514
[INFO][2020-12-4 9:19:36] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-4 9:19:36] Updating timeout interval: 2616
[INFO][2020-12-4 9:19:36] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-4 9:19:36] Updating timeout interval: 2710
[INFO][2020-12-4 9:19:36] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-4 9:19:36] Updating timeout interval: 2806
[INFO][2020-12-4 9:19:37] RTT (2806) >= Timeout Interval (=2806), packet loss event detected
[INFO][2020-12-4 9:19:37] Retransmitting 4 unACKs...
[INFO][2020-12-4 9:19:37] Updating timeout interval: 3891
[INFO][2020-12-4 9:19:37] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Updating timeout interval: 4225
[INFO][2020-12-4 9:19:37] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Updating timeout interval: 4273
[INFO][2020-12-4 9:19:37] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Updating timeout interval: 4137
[INFO][2020-12-4 9:19:37] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Updating timeout interval: 3886
[INFO][2020-12-4 9:19:37] All ACKs received

[INFO][2020-12-4 9:19:37] Current window size: 14
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 14,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:38] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-4 9:19:38] Updating timeout interval: 3260
[INFO][2020-12-4 9:19:38] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-4 9:19:38] Updating timeout interval: 2732
[INFO][2020-12-4 9:19:38] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-4 9:19:38] Updating timeout interval: 2344
[INFO][2020-12-4 9:19:38] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-4 9:19:38] Updating timeout interval: 2111
[INFO][2020-12-4 9:19:38] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-4 9:19:38] Updating timeout interval: 1992
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 1951
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 1963
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2015
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2091
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2186
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2288
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2397
[INFO][2020-12-4 9:19:39] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-4 9:19:39] Updating timeout interval: 2508
[INFO][2020-12-4 9:19:40] RTT (2508) >= Timeout Interval (=2508), packet loss event detected
[INFO][2020-12-4 9:19:40] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:40] Updating timeout interval: 3357
[INFO][2020-12-4 9:19:40] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 14,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Updating timeout interval: 3938
[INFO][2020-12-4 9:19:40] All ACKs received

[INFO][2020-12-4 9:19:40] Current window size: 11
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 3708
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 3414
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 3095
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 2769
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 2454
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 2152
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 1923
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 1813
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 1786
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 1817
[INFO][2020-12-4 9:19:41] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Updating timeout interval: 1885
[INFO][2020-12-4 9:19:41] All ACKs received

[INFO][2020-12-4 9:19:41] Current window size: 20
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:41] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 1927
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2006
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2105
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2216
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2334
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2455
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2578
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2699
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2818
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 2931
[INFO][2020-12-4 9:19:43] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-4 9:19:43] Updating timeout interval: 3105
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3315
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3485
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3626
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3742
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3842
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 3933
[INFO][2020-12-4 9:19:44] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-4 9:19:44] Updating timeout interval: 4012
[INFO][2020-12-4 9:19:45] RTT (4012) >= Timeout Interval (=4012), packet loss event detected
[INFO][2020-12-4 9:19:45] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:19:45] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:46] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-4 9:19:46] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:50] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:19:50] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:19:50] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:51] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:51] All ACKs received

[INFO][2020-12-4 9:19:51] Current window size: 6
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 6,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:51] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-4 9:19:51] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:52] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-4 9:19:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:52] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-4 9:19:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:52] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-4 9:19:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:56] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:19:56] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:19:56] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:56] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:56] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 6,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:56] All ACKs received

[INFO][2020-12-4 9:19:56] Current window size: 7
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 7,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:19:56] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:19:57] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-4 9:19:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:57] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-4 9:19:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:57] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-4 9:19:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:19:57] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-4 9:19:57] Updating timeout interval: 4250
[INFO][2020-12-4 9:19:58] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-4 9:19:58] Updating timeout interval: 3579
[INFO][2020-12-4 9:20:0] RTT (3579) >= Timeout Interval (=3579), packet loss event detected
[INFO][2020-12-4 9:20:0] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:20:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:0] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:0] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 7,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:0] All ACKs received

[INFO][2020-12-4 9:20:0] Current window size: 8
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:0] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:1] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-4 9:20:1] Updating timeout interval: 4605
[INFO][2020-12-4 9:20:1] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-4 9:20:1] Updating timeout interval: 3975
[INFO][2020-12-4 9:20:1] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-4 9:20:1] Updating timeout interval: 3391
[INFO][2020-12-4 9:20:1] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-4 9:20:1] Updating timeout interval: 2910
[INFO][2020-12-4 9:20:2] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Updating timeout interval: 2659
[INFO][2020-12-4 9:20:2] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Updating timeout interval: 2572
[INFO][2020-12-4 9:20:2] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Updating timeout interval: 2595
[INFO][2020-12-4 9:20:2] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Updating timeout interval: 2695
[INFO][2020-12-4 9:20:2] All ACKs received

[INFO][2020-12-4 9:20:2] Current window size: 16
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 2866
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 3059
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 3270
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 3486
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 3703
[INFO][2020-12-4 9:20:4] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-4 9:20:4] Updating timeout interval: 3916
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 4124
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 4327
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 4525
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 4713
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 4895
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:5] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-4 9:20:5] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:7] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:20:7] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:20:7] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:7] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:7] All ACKs received

[INFO][2020-12-4 9:20:7] Current window size: 11
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:7] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 4769
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 4188
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 3699
[INFO][2020-12-4 9:20:9] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-4 9:20:9] Updating timeout interval: 3443
[INFO][2020-12-4 9:20:10] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-4 9:20:10] Updating timeout interval: 3351
[INFO][2020-12-4 9:20:11] RTT (3351) >= Timeout Interval (=3351), packet loss event detected
[INFO][2020-12-4 9:20:11] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:20:11] Updating timeout interval: 4220
[INFO][2020-12-4 9:20:11] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:11] All ACKs received

[INFO][2020-12-4 9:20:11] Current window size: 11
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:11] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 4686
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 4252
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 3794
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 3338
[INFO][2020-12-4 9:20:12] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-4 9:20:12] Updating timeout interval: 2949
[INFO][2020-12-4 9:20:13] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-4 9:20:13] Updating timeout interval: 2770
[INFO][2020-12-4 9:20:13] All ACKs received

[INFO][2020-12-4 9:20:13] Completed Data Transfer
[INFO][2020-12-4 9:20:13] Sending EOT Packet
[INFO][2020-12-4 9:20:13] Terminating Transmitter...
[INFO][2020-12-4 9:20:32] Host found: 192.168.1.78
[INFO][2020-12-4 9:20:32] The network emulator's port is: 50001
[INFO][2020-12-4 9:20:32] Sending data in file path: ./resource/message.txt
[INFO][2020-12-4 9:20:32] Number of lines in the file are: 150
[INFO][2020-12-4 9:20:32] Current window size: 1
[INFO][2020-12-4 9:20:32] Sent DATA (seqNum: 1)
{
    packetType: DATA,
    seqNum: 1,
    data: BEGIN,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:32] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:34] RTT (2000) >= Timeout Interval (=2000), packet loss event detected
[INFO][2020-12-4 9:20:34] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:20:34] Updating timeout interval: 2749
[INFO][2020-12-4 9:20:35] Received ACK (ackNum: 1)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 1,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Updating timeout interval: 3019
[INFO][2020-12-4 9:20:35] All ACKs received

[INFO][2020-12-4 9:20:35] Current window size: 1
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 2)
{
    packetType: DATA,
    seqNum: 2,
    data: Final Project:,
    windowSize: 1,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:35] Received ACK (ackNum: 2)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 1,
    ackNum: 2,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Updating timeout interval: 3111
[INFO][2020-12-4 9:20:35] All ACKs received

[INFO][2020-12-4 9:20:35] Current window size: 2
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 3)
{
    packetType: DATA,
    seqNum: 3,
    data: Due: December 2, 2020 at 1000 hrs. Late submissions will not be accepted. ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 4)
{
    packetType: DATA,
    seqNum: 4,
    data: ,
    windowSize: 2,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:35] Received ACK (ackNum: 3)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 3,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Updating timeout interval: 3008
[INFO][2020-12-4 9:20:35] Received ACK (ackNum: 4)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 2,
    ackNum: 4,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Updating timeout interval: 2775
[INFO][2020-12-4 9:20:35] All ACKs received

[INFO][2020-12-4 9:20:35] Current window size: 4
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 5)
{
    packetType: DATA,
    seqNum: 5,
    data: You may work in groups of two. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 6)
{
    packetType: DATA,
    seqNum: 6,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 7)
{
    packetType: DATA,
    seqNum: 7,
    data: Objective: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Sent DATA (seqNum: 8)
{
    packetType: DATA,
    seqNum: 8,
    data: The objective of this project is to design and implement a basic Send-And-Wait protocol ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:35] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:36] Received ACK (ackNum: 5)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 5,
    retransmit: false,
}
[INFO][2020-12-4 9:20:36] Updating timeout interval: 2460
[INFO][2020-12-4 9:20:36] Received ACK (ackNum: 6)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 6,
    retransmit: false,
}
[INFO][2020-12-4 9:20:36] Updating timeout interval: 2110
[INFO][2020-12-4 9:20:36] Received ACK (ackNum: 8)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 8,
    retransmit: false,
}
[INFO][2020-12-4 9:20:36] Updating timeout interval: 1775
[INFO][2020-12-4 9:20:37] RTT (1775) >= Timeout Interval (=1775), packet loss event detected
[INFO][2020-12-4 9:20:37] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:20:37] Updating timeout interval: 2552
[INFO][2020-12-4 9:20:37] Received ACK (ackNum: 7)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 7,
    retransmit: false,
}
[INFO][2020-12-4 9:20:37] Updating timeout interval: 2601
[INFO][2020-12-4 9:20:37] All ACKs received

[INFO][2020-12-4 9:20:37] Current window size: 4
[INFO][2020-12-4 9:20:37] Sent DATA (seqNum: 9)
{
    packetType: DATA,
    seqNum: 9,
    data: simulator. The protocol will be half-duplex and use sliding windows to send multiple ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:37] Sent DATA (seqNum: 10)
{
    packetType: DATA,
    seqNum: 10,
    data: packets between to hosts on a LAN with an “unreliable network” between the two hosts. ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:37] Sent DATA (seqNum: 11)
{
    packetType: DATA,
    seqNum: 11,
    data: The following diagram depicts the model: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:37] Sent DATA (seqNum: 12)
{
    packetType: DATA,
    seqNum: 12,
    data: ,
    windowSize: 4,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:37] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:38] Received ACK (ackNum: 9)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 9,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Updating timeout interval: 2306
[INFO][2020-12-4 9:20:38] Received ACK (ackNum: 10)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 10,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Updating timeout interval: 1980
[INFO][2020-12-4 9:20:38] Received ACK (ackNum: 11)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 11,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Updating timeout interval: 1708
[INFO][2020-12-4 9:20:38] Received ACK (ackNum: 12)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 4,
    ackNum: 12,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Updating timeout interval: 1609
[INFO][2020-12-4 9:20:38] All ACKs received

[INFO][2020-12-4 9:20:38] Current window size: 8
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 13)
{
    packetType: DATA,
    seqNum: 13,
    data: Your Mission: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 14)
{
    packetType: DATA,
    seqNum: 14,
    data: • You may use any language of your choice to implement the three components shown ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 15)
{
    packetType: DATA,
    seqNum: 15,
    data: in the diagram above. It is strongly recommended that you use your code from the ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 16)
{
    packetType: DATA,
    seqNum: 16,
    data: first assignment to implement the peer stations.  ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 17)
{
    packetType: DATA,
    seqNum: 17,
    data: ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 18)
{
    packetType: DATA,
    seqNum: 18,
    data: • You will be designing an application layer protocol, in this case on top of UDP (in ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 19)
{
    packetType: DATA,
    seqNum: 19,
    data: keeping with the wireless channel model). The protocol should be able to handle ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Sent DATA (seqNum: 20)
{
    packetType: DATA,
    seqNum: 20,
    data: network errors such as packet loss and duplicate packets. You will implement ,
    windowSize: 8,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:38] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:39] Received ACK (ackNum: 13)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 13,
    retransmit: false,
}
[INFO][2020-12-4 9:20:39] Updating timeout interval: 1611
[INFO][2020-12-4 9:20:39] Received ACK (ackNum: 14)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 14,
    retransmit: false,
}
[INFO][2020-12-4 9:20:39] Updating timeout interval: 1703
[INFO][2020-12-4 9:20:39] Received ACK (ackNum: 15)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 15,
    retransmit: false,
}
[INFO][2020-12-4 9:20:39] Updating timeout interval: 1852
[INFO][2020-12-4 9:20:40] Received ACK (ackNum: 16)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 16,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Updating timeout interval: 2037
[INFO][2020-12-4 9:20:40] Received ACK (ackNum: 17)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 17,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Updating timeout interval: 2241
[INFO][2020-12-4 9:20:40] Received ACK (ackNum: 18)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 18,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Updating timeout interval: 2459
[INFO][2020-12-4 9:20:40] Received ACK (ackNum: 19)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 19,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Updating timeout interval: 2678
[INFO][2020-12-4 9:20:40] Received ACK (ackNum: 20)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 8,
    ackNum: 20,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Updating timeout interval: 2898
[INFO][2020-12-4 9:20:40] All ACKs received

[INFO][2020-12-4 9:20:40] Current window size: 16
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 21)
{
    packetType: DATA,
    seqNum: 21,
    data: timeouts and ACKs to handle retransmissions due to lost packets (ARQ). ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 22)
{
    packetType: DATA,
    seqNum: 22,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 23)
{
    packetType: DATA,
    seqNum: 23,
    data: • The network emulator will act as an unreliable channel over with the packets will be ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 24)
{
    packetType: DATA,
    seqNum: 24,
    data: sent. This means that transmitter will send the packets to the network emulator ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 25)
{
    packetType: DATA,
    seqNum: 25,
    data: which in turn will forward them to the receiver. The receiver in turn will send ACKs ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 26)
{
    packetType: DATA,
    seqNum: 26,
    data: back to the transmitter via the network emulator.,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 27)
{
    packetType: DATA,
    seqNum: 27,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 28)
{
    packetType: DATA,
    seqNum: 28,
    data: • Your implementation of the network emulator will include a “noise” component ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 29)
{
    packetType: DATA,
    seqNum: 29,
    data: which will randomly discard packets (and ACKs as well) to achieve a specified bit ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 30)
{
    packetType: DATA,
    seqNum: 30,
    data: error rate. This can be specified as part of command line arguments.  ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 31)
{
    packetType: DATA,
    seqNum: 31,
    data: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 32)
{
    packetType: DATA,
    seqNum: 32,
    data: • Your overall application architecture will have a minimum of three source modules: ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 33)
{
    packetType: DATA,
    seqNum: 33,
    data: transmitter, receiver, and network as well as any associated include files and libraries ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 34)
{
    packetType: DATA,
    seqNum: 34,
    data: if necessary. For the purposes of simplicity it is recommended that the IP addresses ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 35)
{
    packetType: DATA,
    seqNum: 35,
    data: and of the transmitter, sender and network be extracted from a common ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Sent DATA (seqNum: 36)
{
    packetType: DATA,
    seqNum: 36,
    data: configuration file. The port numbers can also be part of the configuration file. ,
    windowSize: 16,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:40] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:42] Received ACK (ackNum: 21)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 21,
    retransmit: false,
}
[INFO][2020-12-4 9:20:42] Updating timeout interval: 3150
[INFO][2020-12-4 9:20:42] Received ACK (ackNum: 22)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 22,
    retransmit: false,
}
[INFO][2020-12-4 9:20:42] Updating timeout interval: 3385
[INFO][2020-12-4 9:20:42] Received ACK (ackNum: 24)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 24,
    retransmit: false,
}
[INFO][2020-12-4 9:20:42] Updating timeout interval: 3708
[INFO][2020-12-4 9:20:42] Received ACK (ackNum: 25)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 25,
    retransmit: false,
}
[INFO][2020-12-4 9:20:42] Updating timeout interval: 3984
[INFO][2020-12-4 9:20:42] Received ACK (ackNum: 26)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 26,
    retransmit: false,
}
[INFO][2020-12-4 9:20:42] Updating timeout interval: 4220
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 27)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 27,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 4425
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 29)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 29,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 4720
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 30)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 30,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 4962
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 31)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 31,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 32)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 32,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 33)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 33,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 34)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 34,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 35)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 35,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:43] Received ACK (ackNum: 36)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 36,
    retransmit: false,
}
[INFO][2020-12-4 9:20:43] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:45] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:20:45] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:20:45] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:45] Received ACK (ackNum: 23)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 23,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:45] Received ACK (ackNum: 28)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 16,
    ackNum: 28,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:45] All ACKs received

[INFO][2020-12-4 9:20:45] Current window size: 12
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 37)
{
    packetType: DATA,
    seqNum: 37,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 38)
{
    packetType: DATA,
    seqNum: 38,
    data: • One side will be allowed to acquired the channel first and send all of its packets. An ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 39)
{
    packetType: DATA,
    seqNum: 39,
    data: End of Transmission (EOT) will indicate that it has completed sending all of its ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 40)
{
    packetType: DATA,
    seqNum: 40,
    data: packets, after which the other side can start sending packets.  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 41)
{
    packetType: DATA,
    seqNum: 41,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 42)
{
    packetType: DATA,
    seqNum: 42,
    data: • The following structure depicts a suggested packet format (C example): ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 43)
{
    packetType: DATA,
    seqNum: 43,
    data: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 44)
{
    packetType: DATA,
    seqNum: 44,
    data: struct packet  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 45)
{
    packetType: DATA,
    seqNum: 45,
    data: { ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 46)
{
    packetType: DATA,
    seqNum: 46,
    data: int PacketType; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 47)
{
    packetType: DATA,
    seqNum: 47,
    data: int SeqNum; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Sent DATA (seqNum: 48)
{
    packetType: DATA,
    seqNum: 48,
    data: char data[PayloadLen]; ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:45] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 37)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 37,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 38)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 38,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 39)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 39,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 40)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 40,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 41)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 41,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 4659
[INFO][2020-12-4 9:20:47] Received ACK (ackNum: 42)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 42,
    retransmit: false,
}
[INFO][2020-12-4 9:20:47] Updating timeout interval: 4044
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 43)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 43,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3608
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 44)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 44,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3389
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 45)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 45,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3317
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 46)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 46,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3346
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 47)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 47,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3448
[INFO][2020-12-4 9:20:48] Received ACK (ackNum: 48)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 48,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Updating timeout interval: 3597
[INFO][2020-12-4 9:20:48] All ACKs received

[INFO][2020-12-4 9:20:48] Current window size: 20
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 49)
{
    packetType: DATA,
    seqNum: 49,
    data: int WindowSize;  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 50)
{
    packetType: DATA,
    seqNum: 50,
    data: int AckNum; ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 51)
{
    packetType: DATA,
    seqNum: 51,
    data: } ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 52)
{
    packetType: DATA,
    seqNum: 52,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 53)
{
    packetType: DATA,
    seqNum: 53,
    data: • The PacketType field indicates the type (numeric code) of the packet, i.e., ACK or ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 54)
{
    packetType: DATA,
    seqNum: 54,
    data: Data or EOT.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 55)
{
    packetType: DATA,
    seqNum: 55,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 56)
{
    packetType: DATA,
    seqNum: 56,
    data: • The SeqNum field is a sequence number used to number data packets. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 57)
{
    packetType: DATA,
    seqNum: 57,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 58)
{
    packetType: DATA,
    seqNum: 58,
    data: • The AckNum field is used to indicate the previous data packet data packet being ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 59)
{
    packetType: DATA,
    seqNum: 59,
    data: acknowledged and the next expected sequence number.   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 60)
{
    packetType: DATA,
    seqNum: 60,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 61)
{
    packetType: DATA,
    seqNum: 61,
    data: • The WindowSize field would typically be used at the start of the session to establish ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 62)
{
    packetType: DATA,
    seqNum: 62,
    data: the number of packets that will be sent from the transmitter to the receiver.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 63)
{
    packetType: DATA,
    seqNum: 63,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 64)
{
    packetType: DATA,
    seqNum: 64,
    data: Constraints ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 65)
{
    packetType: DATA,
    seqNum: 65,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 66)
{
    packetType: DATA,
    seqNum: 66,
    data: • The basic protocol is Send-and-Wait, however it is a modified version in that it will use ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 67)
{
    packetType: DATA,
    seqNum: 67,
    data: a sliding window to send multiple frames rather than single frames. You will still have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Sent DATA (seqNum: 68)
{
    packetType: DATA,
    seqNum: 68,
    data: to implement a timer to wait for ACKs or to initiate a retransmission in the case of a ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:48] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:50] Received ACK (ackNum: 49)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 49,
    retransmit: false,
}
[INFO][2020-12-4 9:20:50] Updating timeout interval: 3370
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 50)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 50,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 3299
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 51)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 51,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 3335
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 52)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 52,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 3448
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 53)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 53,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 3609
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 54)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 54,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 3797
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 55)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 55,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 4004
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 56)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 56,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 4220
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 57)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 57,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 4437
[INFO][2020-12-4 9:20:51] Received ACK (ackNum: 58)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 58,
    retransmit: false,
}
[INFO][2020-12-4 9:20:51] Updating timeout interval: 4654
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 59)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 59,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 4867
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 60)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 60,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 61)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 61,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 62)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 62,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 63)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 63,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 64)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 64,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 65)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 65,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 66)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 66,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:52] Received ACK (ackNum: 67)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 67,
    retransmit: false,
}
[INFO][2020-12-4 9:20:52] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:53] Received ACK (ackNum: 68)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 68,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:53] All ACKs received

[INFO][2020-12-4 9:20:53] Current window size: 20
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 69)
{
    packetType: DATA,
    seqNum: 69,
    data: no response for each frame in the window.,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 70)
{
    packetType: DATA,
    seqNum: 70,
    data:    ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 71)
{
    packetType: DATA,
    seqNum: 71,
    data: • Your window will slide forward with each ACK received, until all of the frames in the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 72)
{
    packetType: DATA,
    seqNum: 72,
    data: current window have been ACK’d.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 73)
{
    packetType: DATA,
    seqNum: 73,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 74)
{
    packetType: DATA,
    seqNum: 74,
    data: • Both the transmitter and receiver will print out ongoing the session as simple text ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 75)
{
    packetType: DATA,
    seqNum: 75,
    data: lines containing the type of packet sent, type of packet received, the status of the ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 76)
{
    packetType: DATA,
    seqNum: 76,
    data: window, sequence numbers, etc. The format of this display will be left up to you.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 77)
{
    packetType: DATA,
    seqNum: 77,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 78)
{
    packetType: DATA,
    seqNum: 78,
    data: • Your application will maintain a log file at both the transmitter and the receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 79)
{
    packetType: DATA,
    seqNum: 79,
    data: This can be used for both troubleshooting and for validating your protocol.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 80)
{
    packetType: DATA,
    seqNum: 80,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 81)
{
    packetType: DATA,
    seqNum: 81,
    data: • Your network module will take arguments such as the BER (Bit Error Rate), average ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 82)
{
    packetType: DATA,
    seqNum: 82,
    data: delay per packet, and will also have a configuration file specifying IP addresses and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 83)
{
    packetType: DATA,
    seqNum: 83,
    data: port numbers for the transmitter and receiver. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 84)
{
    packetType: DATA,
    seqNum: 84,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 85)
{
    packetType: DATA,
    seqNum: 85,
    data: • You are required to submit an extensive test document complete with screen shots, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 86)
{
    packetType: DATA,
    seqNum: 86,
    data: videos, and packet captures validating all of the protocol characteristics you have ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 87)
{
    packetType: DATA,
    seqNum: 87,
    data: implemented. Examples are successful transactions, retransmissions, timeouts, etc.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Sent DATA (seqNum: 88)
{
    packetType: DATA,
    seqNum: 88,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:53] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:55] Received ACK (ackNum: 69)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 69,
    retransmit: false,
}
[INFO][2020-12-4 9:20:55] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:55] Received ACK (ackNum: 70)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 70,
    retransmit: false,
}
[INFO][2020-12-4 9:20:55] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:55] Received ACK (ackNum: 71)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 71,
    retransmit: false,
}
[INFO][2020-12-4 9:20:55] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:55] Received ACK (ackNum: 72)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 72,
    retransmit: false,
}
[INFO][2020-12-4 9:20:55] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:55] Received ACK (ackNum: 73)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 73,
    retransmit: false,
}
[INFO][2020-12-4 9:20:55] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 74)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 74,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 75)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 75,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4856
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 76)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 76,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4450
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 77)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 77,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4258
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 78)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 78,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4210
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 79)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 79,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4268
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 80)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 80,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4395
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 81)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 81,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4567
[INFO][2020-12-4 9:20:56] Received ACK (ackNum: 82)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 82,
    retransmit: false,
}
[INFO][2020-12-4 9:20:56] Updating timeout interval: 4766
[INFO][2020-12-4 9:20:57] Received ACK (ackNum: 83)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 83,
    retransmit: false,
}
[INFO][2020-12-4 9:20:57] Updating timeout interval: 4983
[INFO][2020-12-4 9:20:57] Received ACK (ackNum: 84)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 84,
    retransmit: false,
}
[INFO][2020-12-4 9:20:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:57] Received ACK (ackNum: 85)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 85,
    retransmit: false,
}
[INFO][2020-12-4 9:20:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:57] Received ACK (ackNum: 87)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 87,
    retransmit: false,
}
[INFO][2020-12-4 9:20:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:57] Received ACK (ackNum: 88)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 88,
    retransmit: false,
}
[INFO][2020-12-4 9:20:57] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:58] RTT (5000) >= Timeout Interval (=5000), packet loss event detected
[INFO][2020-12-4 9:20:58] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:20:58] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:58] Received ACK (ackNum: 86)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 86,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:58] All ACKs received

[INFO][2020-12-4 9:20:58] Current window size: 11
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 89)
{
    packetType: DATA,
    seqNum: 89,
    data: • As part of this project you will provide a protocol design document (separate from ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 90)
{
    packetType: DATA,
    seqNum: 90,
    data: the application design document), which will clearly describe your Send-And-Wait ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 91)
{
    packetType: DATA,
    seqNum: 91,
    data: protocol using FSMs and technical descriptions of each state shown. Use the ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 92)
{
    packetType: DATA,
    seqNum: 92,
    data: approach presented in your textbook (rdt protocol). ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 93)
{
    packetType: DATA,
    seqNum: 93,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 94)
{
    packetType: DATA,
    seqNum: 94,
    data: • Lastly, I have kept the project itself fairly open-ended to allow you to be as creative ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 95)
{
    packetType: DATA,
    seqNum: 95,
    data: as you wish. In other words other than the half-duplex, multiple packet ARQ ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 96)
{
    packetType: DATA,
    seqNum: 96,
    data: protocol requirement I am quite flexible in allowing you to add features and choose ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 97)
{
    packetType: DATA,
    seqNum: 97,
    data: your own implementation method. As always if have ideas on how you will like to ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 98)
{
    packetType: DATA,
    seqNum: 98,
    data: implement this by all means discuss it with me in class.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Sent DATA (seqNum: 99)
{
    packetType: DATA,
    seqNum: 99,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:20:58] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:20:59] Received ACK (ackNum: 89)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 89,
    retransmit: false,
}
[INFO][2020-12-4 9:20:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:59] Received ACK (ackNum: 90)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 90,
    retransmit: false,
}
[INFO][2020-12-4 9:20:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:20:59] Received ACK (ackNum: 91)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 91,
    retransmit: false,
}
[INFO][2020-12-4 9:20:59] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 92)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 92,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 93)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 93,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 94)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 94,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 95)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 95,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 97)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 97,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 98)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 98,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 4516
[INFO][2020-12-4 9:21:0] Received ACK (ackNum: 99)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 99,
    retransmit: false,
}
[INFO][2020-12-4 9:21:0] Updating timeout interval: 4074
[INFO][2020-12-4 9:21:2] RTT (4074) >= Timeout Interval (=4074), packet loss event detected
[INFO][2020-12-4 9:21:2] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:21:2] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:2] Received ACK (ackNum: 96)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 96,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:2] All ACKs received

[INFO][2020-12-4 9:21:2] Current window size: 11
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 100)
{
    packetType: DATA,
    seqNum: 100,
    data: • Bonus marks will be awarded for implementations that show creativity and ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 101)
{
    packetType: DATA,
    seqNum: 101,
    data: imagination.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 102)
{
    packetType: DATA,
    seqNum: 102,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 103)
{
    packetType: DATA,
    seqNum: 103,
    data: Demo Requirements: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 104)
{
    packetType: DATA,
    seqNum: 104,
    data: • You will be required to demonstrate your complete application using videos on all ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 105)
{
    packetType: DATA,
    seqNum: 105,
    data: three machines.  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 106)
{
    packetType: DATA,
    seqNum: 106,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 107)
{
    packetType: DATA,
    seqNum: 107,
    data: • The demo video, which covers each one of your test cases. In other words, it will be ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 108)
{
    packetType: DATA,
    seqNum: 108,
    data: similar to the live lab demo except you will be preparing a video of each test as ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 109)
{
    packetType: DATA,
    seqNum: 109,
    data: opposed to me standing beside you observing each test.   ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Sent DATA (seqNum: 110)
{
    packetType: DATA,
    seqNum: 110,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:21:2] Received ACK (ackNum: 100)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 100,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:2] Received ACK (ackNum: 101)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 101,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:2] Received ACK (ackNum: 102)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 102,
    retransmit: false,
}
[INFO][2020-12-4 9:21:2] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 103)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 103,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 104)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 104,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 105)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 105,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 5000
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 106)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 106,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 4917
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 107)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 107,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 4432
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 108)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 108,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 3972
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 109)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 109,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 3543
[INFO][2020-12-4 9:21:3] Received ACK (ackNum: 110)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 110,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Updating timeout interval: 3148
[INFO][2020-12-4 9:21:3] All ACKs received

[INFO][2020-12-4 9:21:3] Current window size: 20
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 111)
{
    packetType: DATA,
    seqNum: 111,
    data: • Also, make sure you have packet captures at all three machines for each test. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 112)
{
    packetType: DATA,
    seqNum: 112,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 113)
{
    packetType: DATA,
    seqNum: 113,
    data: To Be Submitted Electronically: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 114)
{
    packetType: DATA,
    seqNum: 114,
    data: • As part of your submission, also submit demo videos of your application (see above). ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 115)
{
    packetType: DATA,
    seqNum: 115,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 116)
{
    packetType: DATA,
    seqNum: 116,
    data: • Capture all network traffic related to your application on all three machines and ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 117)
{
    packetType: DATA,
    seqNum: 117,
    data: submit them as part of your package. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 118)
{
    packetType: DATA,
    seqNum: 118,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 119)
{
    packetType: DATA,
    seqNum: 119,
    data: • Submit a zip file containing all the code, videos, packet captures, and documents as ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 120)
{
    packetType: DATA,
    seqNum: 120,
    data: described, in the sharein folder for this course under “Final Project-FT”. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 121)
{
    packetType: DATA,
    seqNum: 121,
    data:   ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 122)
{
    packetType: DATA,
    seqNum: 122,
    data: • Hand in complete and well-documented application design work, protocol design, ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 123)
{
    packetType: DATA,
    seqNum: 123,
    data: and test documents in PDF format.  ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 124)
{
    packetType: DATA,
    seqNum: 124,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 125)
{
    packetType: DATA,
    seqNum: 125,
    data: • Also, provide all your source code and an executable. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 126)
{
    packetType: DATA,
    seqNum: 126,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 127)
{
    packetType: DATA,
    seqNum: 127,
    data: • The zip package must follow the following directory structure: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 128)
{
    packetType: DATA,
    seqNum: 128,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 129)
{
    packetType: DATA,
    seqNum: 129,
    data: ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Sent DATA (seqNum: 130)
{
    packetType: DATA,
    seqNum: 130,
    data: 1. Documents: will contain all the specified documents in PDF format. ,
    windowSize: 20,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:3] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 111)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 111,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 2811
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 112)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 112,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 2502
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 113)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 113,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 2220
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 114)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 114,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1964
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 115)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 115,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1738
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 116)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 116,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1537
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 117)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 117,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1408
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 118)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 118,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1343
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 119)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 119,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1321
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 121)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 121,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1330
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 122)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 122,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1357
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 123)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 123,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1398
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 124)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 124,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1449
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 125)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 125,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1506
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 126)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 126,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1568
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 127)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 127,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1628
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 128)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 128,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1689
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 129)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 129,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1747
[INFO][2020-12-4 9:21:4] Received ACK (ackNum: 130)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 130,
    retransmit: false,
}
[INFO][2020-12-4 9:21:4] Updating timeout interval: 1806
[INFO][2020-12-4 9:21:5] RTT (1806) >= Timeout Interval (=1806), packet loss event detected
[INFO][2020-12-4 9:21:5] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2296
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 120)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 20,
    ackNum: 120,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2926
[INFO][2020-12-4 9:21:5] All ACKs received

[INFO][2020-12-4 9:21:5] Current window size: 11
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 131)
{
    packetType: DATA,
    seqNum: 131,
    data: 2. Source: All of the source code ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 132)
{
    packetType: DATA,
    seqNum: 132,
    data: 3. Videos: All of the demo videos ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 133)
{
    packetType: DATA,
    seqNum: 133,
    data: 4. Packet Captures: Packet captures as specified above ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 134)
{
    packetType: DATA,
    seqNum: 134,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 135)
{
    packetType: DATA,
    seqNum: 135,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 136)
{
    packetType: DATA,
    seqNum: 136,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 137)
{
    packetType: DATA,
    seqNum: 137,
    data: • Your zipped package will be labelled as follows: FirstName_LastName-,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 138)
{
    packetType: DATA,
    seqNum: 138,
    data: StudentID.zip. ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 139)
{
    packetType: DATA,
    seqNum: 139,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 140)
{
    packetType: DATA,
    seqNum: 140,
    data:  ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Sent DATA (seqNum: 141)
{
    packetType: DATA,
    seqNum: 141,
    data: ,
    windowSize: 11,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 132)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 132,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 3079
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 133)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 133,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 3079
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 134)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 134,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2976
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 135)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 135,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2813
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 136)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 136,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2616
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 137)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 137,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2399
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 138)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 138,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 2178
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 139)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 139,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 1964
[INFO][2020-12-4 9:21:5] Received ACK (ackNum: 140)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 140,
    retransmit: false,
}
[INFO][2020-12-4 9:21:5] Updating timeout interval: 1760
[INFO][2020-12-4 9:21:6] RTT (1760) >= Timeout Interval (=1760), packet loss event detected
[INFO][2020-12-4 9:21:6] Retransmitting 2 unACKs...
[INFO][2020-12-4 9:21:6] Updating timeout interval: 2657
[INFO][2020-12-4 9:21:6] Received ACK (ackNum: 131)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 131,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Updating timeout interval: 2662
[INFO][2020-12-4 9:21:6] Received ACK (ackNum: 141)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 11,
    ackNum: 141,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Updating timeout interval: 2568
[INFO][2020-12-4 9:21:6] All ACKs received

[INFO][2020-12-4 9:21:6] Current window size: 12
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 142)
{
    packetType: DATA,
    seqNum: 142,
    data: Marking Guide: ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 143)
{
    packetType: DATA,
    seqNum: 143,
    data:  ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 144)
{
    packetType: DATA,
    seqNum: 144,
    data: Design work and Report: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 145)
{
    packetType: DATA,
    seqNum: 145,
    data: Protocol Design: 10 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 146)
{
    packetType: DATA,
    seqNum: 146,
    data: Test Document: 15 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 147)
{
    packetType: DATA,
    seqNum: 147,
    data: Protocol Functionality: 60 ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 148)
{
    packetType: DATA,
    seqNum: 148,
    data:  ----- ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 149)
{
    packetType: DATA,
    seqNum: 149,
    data:  Total: 100,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Sent DATA (seqNum: 150)
{
    packetType: DATA,
    seqNum: 150,
    data: END ,
    windowSize: 12,
    ackNum: 0,
    retransmit: false,
}
[INFO][2020-12-4 9:21:6] Window of packets sent, waiting for ACKs
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 142)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 142,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 2335
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 143)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 143,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 2101
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 144)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 144,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1874
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 145)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 145,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1658
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 147)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 147,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1449
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 148)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 148,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1260
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 149)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 149,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1091
[INFO][2020-12-4 9:21:7] Received ACK (ackNum: 150)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 150,
    retransmit: false,
}
[INFO][2020-12-4 9:21:7] Updating timeout interval: 942
[INFO][2020-12-4 9:21:7] RTT (942) >= Timeout Interval (=942), packet loss event detected
[INFO][2020-12-4 9:21:7] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:21:7] Updating timeout interval: 1364
[INFO][2020-12-4 9:21:9] RTT (1364) >= Timeout Interval (=1364), packet loss event detected
[INFO][2020-12-4 9:21:9] Retransmitting 1 unACKs...
[INFO][2020-12-4 9:21:9] Updating timeout interval: 2050
[INFO][2020-12-4 9:21:9] Received ACK (ackNum: 146)
{
    packetType: ACK,
    seqNum: 0,
    data: (null),
    windowSize: 12,
    ackNum: 146,
    retransmit: false,
}
[INFO][2020-12-4 9:21:9] Updating timeout interval: 2071
[INFO][2020-12-4 9:21:9] All ACKs received

[INFO][2020-12-4 9:21:9] Completed Data Transfer
[INFO][2020-12-4 9:21:9] Sending EOT Packet
[INFO][2020-12-4 9:21:9] Terminating Transmitter...
